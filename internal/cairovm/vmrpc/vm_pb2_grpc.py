# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import vm_pb2 as vm__pb2


class StorageAdapterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPatriciaNode = channel.unary_unary(
                '/StorageAdapter/GetPatriciaNode',
                request_serializer=vm__pb2.GetValueRequest.SerializeToString,
                response_deserializer=vm__pb2.VMTrieNode.FromString,
                )
        self.GetContractState = channel.unary_unary(
                '/StorageAdapter/GetContractState',
                request_serializer=vm__pb2.GetValueRequest.SerializeToString,
                response_deserializer=vm__pb2.VMContractState.FromString,
                )
        self.GetContractDefinition = channel.unary_unary(
                '/StorageAdapter/GetContractDefinition',
                request_serializer=vm__pb2.GetValueRequest.SerializeToString,
                response_deserializer=vm__pb2.VMContractDefinition.FromString,
                )


class StorageAdapterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPatriciaNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContractState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContractDefinition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageAdapterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPatriciaNode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPatriciaNode,
                    request_deserializer=vm__pb2.GetValueRequest.FromString,
                    response_serializer=vm__pb2.VMTrieNode.SerializeToString,
            ),
            'GetContractState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContractState,
                    request_deserializer=vm__pb2.GetValueRequest.FromString,
                    response_serializer=vm__pb2.VMContractState.SerializeToString,
            ),
            'GetContractDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContractDefinition,
                    request_deserializer=vm__pb2.GetValueRequest.FromString,
                    response_serializer=vm__pb2.VMContractDefinition.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'StorageAdapter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StorageAdapter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPatriciaNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StorageAdapter/GetPatriciaNode',
            vm__pb2.GetValueRequest.SerializeToString,
            vm__pb2.VMTrieNode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContractState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StorageAdapter/GetContractState',
            vm__pb2.GetValueRequest.SerializeToString,
            vm__pb2.VMContractState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContractDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StorageAdapter/GetContractDefinition',
            vm__pb2.GetValueRequest.SerializeToString,
            vm__pb2.VMContractDefinition.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VMStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Call = channel.unary_unary(
                '/VM/Call',
                request_serializer=vm__pb2.VMCallRequest.SerializeToString,
                response_deserializer=vm__pb2.VMCallResponse.FromString,
                )


class VMServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Call(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VMServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Call': grpc.unary_unary_rpc_method_handler(
                    servicer.Call,
                    request_deserializer=vm__pb2.VMCallRequest.FromString,
                    response_serializer=vm__pb2.VMCallResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'VM', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VM(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Call(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VM/Call',
            vm__pb2.VMCallRequest.SerializeToString,
            vm__pb2.VMCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
