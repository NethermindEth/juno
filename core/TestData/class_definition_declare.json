{
    "abi": [
        {
            "members": [
                {
                    "name": "low",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "high",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "Uint256",
            "size": 2,
            "type": "struct"
        },
        {
            "data": [
                {
                    "name": "previousOwner",
                    "type": "felt"
                },
                {
                    "name": "newOwner",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "previousAdmin",
                    "type": "felt"
                },
                {
                    "name": "newAdmin",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AdminChanged",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "caller",
                    "type": "felt"
                },
                {
                    "name": "currency",
                    "type": "felt"
                },
                {
                    "name": "outputAmount",
                    "type": "felt"
                },
                {
                    "name": "collection",
                    "type": "felt"
                },
                {
                    "name": "nftAmount",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "SwapNFTInPair",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "caller",
                    "type": "felt"
                },
                {
                    "name": "currency",
                    "type": "felt"
                },
                {
                    "name": "inputAmount",
                    "type": "felt"
                },
                {
                    "name": "collection",
                    "type": "felt"
                },
                {
                    "name": "nftAmount",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "SwapNFTOutPair",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "newSpotPrice",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "SpotPriceUpdate",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "token",
                    "type": "felt"
                },
                {
                    "name": "amount",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "TokenWithdrawal",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "nft",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "NFTWithdrawal",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "newDelta",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "DeltaUpdate",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "newFee",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "FeeUpdate",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AssetRecipientChange",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "factory",
                    "type": "felt"
                },
                {
                    "name": "bondingCurve",
                    "type": "felt"
                },
                {
                    "name": "nft",
                    "type": "felt"
                },
                {
                    "name": "poolType",
                    "type": "felt"
                },
                {
                    "name": "token",
                    "type": "felt"
                },
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "assetRecipient",
                    "type": "felt"
                },
                {
                    "name": "delta",
                    "type": "felt"
                },
                {
                    "name": "fee",
                    "type": "felt"
                },
                {
                    "name": "spotPrice",
                    "type": "felt"
                },
                {
                    "name": "proxy_admin",
                    "type": "felt"
                }
            ],
            "name": "initializer",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "MAX_FEE",
            "outputs": [
                {
                    "name": "fee",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "name": "res",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "bondingCurve",
            "outputs": [
                {
                    "name": "curve",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "nft",
            "outputs": [
                {
                    "name": "res",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "poolType",
            "outputs": [
                {
                    "name": "type",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "token",
            "outputs": [
                {
                    "name": "res",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "spotPrice",
            "outputs": [
                {
                    "name": "price",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "delta",
            "outputs": [
                {
                    "name": "res",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fee",
            "outputs": [
                {
                    "name": "res",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "assetRecipient",
            "outputs": [
                {
                    "name": "recipient",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "numNFTs",
                    "type": "felt"
                }
            ],
            "name": "getBuyNFTQuote",
            "outputs": [
                {
                    "name": "newSpotPrice",
                    "type": "felt"
                },
                {
                    "name": "newDelta",
                    "type": "felt"
                },
                {
                    "name": "inputAmount",
                    "type": "felt"
                },
                {
                    "name": "protocolFee",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "numNFTs",
                    "type": "felt"
                }
            ],
            "name": "getSellNFTQuote",
            "outputs": [
                {
                    "name": "newSpotPrice",
                    "type": "felt"
                },
                {
                    "name": "newDelta",
                    "type": "felt"
                },
                {
                    "name": "outputAmount",
                    "type": "felt"
                },
                {
                    "name": "protocolFee",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getAssetRecipient",
            "outputs": [
                {
                    "name": "assetRecipient",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "nftIds_len",
                    "type": "felt"
                },
                {
                    "name": "nftIds",
                    "type": "Uint256*"
                },
                {
                    "name": "maxExpectedTokenInput",
                    "type": "felt"
                },
                {
                    "name": "nftRecipient",
                    "type": "felt"
                }
            ],
            "name": "swapTokenForSpecificNFTs",
            "outputs": [
                {
                    "name": "inputAmount",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "nftIds_len",
                    "type": "felt"
                },
                {
                    "name": "nftIds",
                    "type": "Uint256*"
                },
                {
                    "name": "minExpectedTokenOutput",
                    "type": "felt"
                },
                {
                    "name": "tokenRecipient",
                    "type": "felt"
                }
            ],
            "name": "swapNFTsForToken",
            "outputs": [
                {
                    "name": "outputAmount",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "newSpotPrice",
                    "type": "felt"
                }
            ],
            "name": "changeSpotPrice",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "newDelta",
                    "type": "felt"
                }
            ],
            "name": "changeDelta",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "newFee",
                    "type": "felt"
                }
            ],
            "name": "changeFee",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "newRecipient",
                    "type": "felt"
                }
            ],
            "name": "changeAssetRecipient",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "a",
                    "type": "felt"
                },
                {
                    "name": "amount",
                    "type": "felt"
                }
            ],
            "name": "withdrawToken",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "a",
                    "type": "felt"
                },
                {
                    "name": "tokenIds_len",
                    "type": "felt"
                },
                {
                    "name": "tokenIds",
                    "type": "Uint256*"
                }
            ],
            "name": "withdrawERC721",
            "outputs": [],
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [
            {
                "offset": "0x8cc",
                "selector": "0x4bc30b413bff05d0c5a841b495efaa7136b1150650a6d50b5125348ef247b7"
            },
            {
                "offset": "0x636",
                "selector": "0xd399e873cde9f1130182a2b70db45e021df5a2f404fa14e8b2f7481c10f1d3"
            },
            {
                "offset": "0x96e",
                "selector": "0xe323be32563ff4ec7eb6dbb44de6f462fe50d4347d2a5ed97b8000b01fae0f"
            },
            {
                "offset": "0x887",
                "selector": "0x1746ba88936c89803398e3d705b7c60b975ba95ed8309170af08a50cfd76034"
            },
            {
                "offset": "0x564",
                "selector": "0x1a5b9e3dbe4d6bd046be696b63482af53d74488393698b847f9fdba7ab3eb84"
            },
            {
                "offset": "0x5be",
                "selector": "0x1d481eb4b63b94bb55e6b98aabb06c3b8484f82a4d656d6bca0b0cf9b446be0"
            },
            {
                "offset": "0x93c",
                "selector": "0x1fecea0123deaf1ec6b125dfb3ebb67d43ae1820f1cfddfd04748c2bb8723f2"
            },
            {
                "offset": "0x672",
                "selector": "0x1ff283d9ff7e020d53bd8df3046dbc2f9844949ba7aca7f74053ac71f270ffb"
            },
            {
                "offset": "0x690",
                "selector": "0x2016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0"
            },
            {
                "offset": "0x800",
                "selector": "0x2635814066a61a91118251ce2c36965c1c8bd482f624471790044f16545fd67"
            },
            {
                "offset": "0x902",
                "selector": "0x2be9875f83b420d4b53991a231f8c1b1e97f63799a9518d9fa4714e1a194c62"
            },
            {
                "offset": "0x539",
                "selector": "0x2dd76e7ad84dbed81c314ffe5e7a7cacfb8f4836f01af4e913f275f89a3de1a"
            },
            {
                "offset": "0x654",
                "selector": "0x33b9f6abf0b529613680afe2a00fa663cc95cbdc47d726d85a044462eabbf02"
            },
            {
                "offset": "0x99d",
                "selector": "0x3430195ba4c8865b3e4ece998a22147a09e701161f2e28c0e3b6fd48f22238d"
            },
            {
                "offset": "0x74b",
                "selector": "0x357029217c9f3f982fdd88896cec398a11c800ec3008aae973b40c056b6162f"
            },
            {
                "offset": "0x9df",
                "selector": "0x35d7d17c374504dc9e7e19f5d8202b1c11bc59642d4abc65b2373426bea2105"
            },
            {
                "offset": "0x582",
                "selector": "0x366a98476020cb9ff8cc566d0cdeac414e546d2e7ede445f4e7032a4272c771"
            },
            {
                "offset": "0x788",
                "selector": "0x36a0899cf87fd4dc1049f3ec4d9d2ab52bbb0c9a3fcdd483f6c38a906da8f51"
            },
            {
                "offset": "0x5fa",
                "selector": "0x39b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d"
            },
            {
                "offset": "0x6ec",
                "selector": "0x39db8947b7337181fb15cc84373df7e708a276840ebe0927e9a12b86ff38aa3"
            },
            {
                "offset": "0x5a0",
                "selector": "0x3b904aa5afc486c58c0b51ae01374c1c29068417feb59eaeecf86ac46c1fef9"
            },
            {
                "offset": "0x618",
                "selector": "0x3da9c62205655e202173ec115b91229a1afafeb0329c0797d4a94c5d5de80fa"
            },
            {
                "offset": "0x5dc",
                "selector": "0x3e75033db4684c97865a0e4372cf714e5bad6437ec2e2d7b693019d0661f9ee"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "accessible_scopes": [
                    "contracts.marketplace.utils.reentrancyguard",
                    "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard",
                    "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._start"
                ],
                "end_pc": 248,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 20,
                        "offset": 23
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 246,
                "value": "ReentrancyGuard: reentrant call"
            },
            {
                "accessible_scopes": [
                    "contracts.openzeppelin.access.ownable.library",
                    "contracts.openzeppelin.access.ownable.library.Ownable",
                    "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner"
                ],
                "end_pc": 336,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 29,
                        "offset": 6
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 334,
                "value": "Ownable: caller is the zero address"
            },
            {
                "accessible_scopes": [
                    "contracts.openzeppelin.access.ownable.library",
                    "contracts.openzeppelin.access.ownable.library.Ownable",
                    "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner"
                ],
                "end_pc": 337,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 29,
                        "offset": 8
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 336,
                "value": "Ownable: caller is not the owner"
            },
            {
                "accessible_scopes": [
                    "contracts.openzeppelin.upgrades.library",
                    "contracts.openzeppelin.upgrades.library.Proxy",
                    "contracts.openzeppelin.upgrades.library.Proxy.initializer"
                ],
                "end_pc": 460,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 39,
                        "offset": 23
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 458,
                "value": "Proxy: contract already initialized"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.initializer"
                ],
                "end_pc": 1251,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 91,
                        "offset": 6
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1245,
                "value": "caller not factory"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.initializer"
                ],
                "end_pc": 1293,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 93,
                        "offset": 24
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1288,
                "value": "Trade fee must be less than 90%"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.initializer"
                ],
                "end_pc": 1295,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 93,
                        "offset": 39
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1293,
                "value": "Trade pools can't set asset recipient"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.initializer"
                ],
                "end_pc": 1305,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 93,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1303,
                "value": "Only Trade Pools can have nonzero fee"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.initializer"
                ],
                "end_pc": 1325,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 94,
                        "offset": 52
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1323,
                "value": "Invalid delta for curve"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.initializer"
                ],
                "end_pc": 1327,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 94,
                        "offset": 52
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1325,
                "value": "Invalid new spot price for curve"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.swapTokenForSpecificNFTs"
                ],
                "end_pc": 1965,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 139,
                        "offset": 80
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1958,
                "value": "Wrong Pool type"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.swapTokenForSpecificNFTs"
                ],
                "end_pc": 1971,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 139,
                        "offset": 83
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1965,
                "value": "Must ask for > 0 NFTs"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.swapNFTsForToken"
                ],
                "end_pc": 2101,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 146,
                        "offset": 81
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2096,
                "value": "Wrong Pool type"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.swapNFTsForToken"
                ],
                "end_pc": 2107,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 146,
                        "offset": 83
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2101,
                "value": "Must ask for > 0 NFTs"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.changeSpotPrice"
                ],
                "end_pc": 2237,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 155,
                        "offset": 53
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2235,
                "value": "Invalid new spot price for curve"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.changeDelta"
                ],
                "end_pc": 2291,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 159,
                        "offset": 53
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2289,
                "value": "Invalid delta for curve"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.changeFee"
                ],
                "end_pc": 2339,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 163,
                        "offset": 27
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2337,
                "value": "Only for Trade pools"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.changeFee"
                ],
                "end_pc": 2349,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 163,
                        "offset": 50
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2344,
                "value": "Trade fee must be less than 90%"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.changeAssetRecipient"
                ],
                "end_pc": 2399,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 167,
                        "offset": 26
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2395,
                "value": "Not for Trade pools"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__._calculateBuyInfoAndUpdatePoolParams"
                ],
                "end_pc": 2605,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 179,
                        "offset": 139
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2600,
                "value": "In too many tokens"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__._calculateSellInfoAndUpdatePoolParams"
                ],
                "end_pc": 2700,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 182,
                        "offset": 139
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2695,
                "value": "Out too little tokens"
            }
        ],
        "builtins": [
            "pedersen",
            "range_check"
        ],
        "compiler_version": "0.10.3",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x480280017ffc8000",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x20680017fff7fff",
            "0xb",
            "0x482680017ffc8000",
            "0x2",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x10780017fff7fff",
            "0x9",
            "0x482680017ffc8000",
            "0x2",
            "0x480280017ffc8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480280017ffc8000",
            "0x480280007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x43616c6c436f6e7472616374",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x476574436f6e747261637441646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xa",
            "0x400380007ffc7ffd",
            "0x40780017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xe",
            "0x484680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400280007ffc7fff",
            "0x40780017fff7fff",
            "0x11",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffb",
            "0x20680017fff7fff",
            "0x9",
            "0x480a7ff97fff8000",
            "0x482680017ffa8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x587f8a359f3afbadaac7e3a22b5d00fa5f08794c82353701e04afb0485d8c1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9f",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef7",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x1390fd803c110ac71730ece1decfc34eb1d0088e295d4f1b125dda1e0c5b9ff",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef1",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff76",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x2bd557f4ba80dfabefabe45e9b2dd35db1b9a78e96c72bc2b69b655ce47a930",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff57",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff51",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x18",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xc",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff29",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb6",
            "0x40127ffd7fff7ff7",
            "0x48127ffc7fff8000",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcf",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9f",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8f",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x120650e571756796b93f65826a80b3511d4f3a06808e82cb37407903b09d995",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe89",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0e",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xee2b6c840729051a0d06a623ff093dcc01e03f2e0c0e07114ac2440394b889",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeef",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee9",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x387c153462d309d4b5a1fc5f90e85bc59eeb2094b2fcef46513ea5f1d1c9b85",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed1",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecb",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x9",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb5",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb6",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff85",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0d",
            "0x40137fff7fff8000",
            "0x4003800080007ffd",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe69",
            "0x482480017fff8000",
            "0x2",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ffc8000",
            "0x480080017ffb8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf5",
            "0x40137fff7fff8000",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x4003800280007ffc",
            "0x4003800380007ffd",
            "0x4826800180008000",
            "0x4",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4e",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ff87fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffddb",
            "0x40137fff7fff8000",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4003800280007ffd",
            "0x4826800180008000",
            "0x3",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x83afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe35",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc2",
            "0x40137fff7fff8000",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x4003800280007ffc",
            "0x4003800380007ffd",
            "0x4826800180008000",
            "0x4",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe1b",
            "0x48127ffd7fff8000",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdac",
            "0x40137fff7fff8000",
            "0x4003800080007ffd",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x3f3b52fee1d676a8f0a70444c76431f01065af5fe545b03c1ea7a848ad9d914",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe08",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd95",
            "0x40137fff7fff8000",
            "0x4003800080007ffd",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0xe92fb23fbffdc49895ba684ed6063d8a2817a6a1d133c987c0298e03ca020",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf1",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7e",
            "0x40137fff7fff8000",
            "0x4003800080007ff9",
            "0x4003800180007ffa",
            "0x4003800280007ffb",
            "0x4003800380007ffc",
            "0x4003800480007ffd",
            "0x4826800180008000",
            "0x5",
            "0x480a7ff67fff8000",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x232e502f6836a0399f22c3603ffc7e3f369920ead0f157a826f5d6a452aca46",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd6",
            "0x482480017fff8000",
            "0x4",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ff77fff8000",
            "0x480080007ffc8000",
            "0x480080017ffb8000",
            "0x480080027ffa8000",
            "0x480080037ff98000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd60",
            "0x40137fff7fff8000",
            "0x4003800080007ff9",
            "0x4003800180007ffa",
            "0x4003800280007ffb",
            "0x4003800380007ffc",
            "0x4003800480007ffd",
            "0x4826800180008000",
            "0x5",
            "0x480a7ff67fff8000",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1c2fb3cfa88392d5cc528295bab55efa9092efa27d86078b54b4e7e7f3c871d",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb8",
            "0x482480017fff8000",
            "0x4",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ff77fff8000",
            "0x480080007ffc8000",
            "0x480080017ffb8000",
            "0x480080027ffa8000",
            "0x480080037ff98000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd42",
            "0x40137fff7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1ad8e236869acbb42880732db97540248dccfb81a37c3bf5a8824e511977f4f",
            "0x4829800080008000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda1",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd2e",
            "0x40137fff7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x28981672cd67ddd32e7c9c647f65c1ba188f09343b8ff7561ac80d1a6b5e645",
            "0x4829800080008000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8d",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x392ef3834638553a8caff75b6e35388b9d43f910e9d5305d16c73d5c7f6e352",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8d",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x385b1b42a65c23baf7617ca4f05f72e6060e4cf8821730681ea8c8292f11746",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd75",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6f",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3083c1d221ab7d60175dd20592f099790ac4f0bbe253e894da94f00ce357507",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd57",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd51",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x7799f38857c22850a3391379093aeb23cceda9d36752b784ff1b4aa29ceb4e",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd39",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd33",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1142669169804f8053536032fe85afdb4ddacf7fdd991a9a627be3c1e5fa620",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1b",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd15",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x660290c0ea23f8a3d8e52683c0b2be9a9c1c8a6dc9017dee561cf7d9a9ac1e",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcfd",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf7",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x7ee41899666d86a682b28b8fef0f8e5934a1d418cfa3720bc3907eae34a09",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdf",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd9",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1dc9c155a73eb752da58d431f7ee0893a781272134504484cebae88f5d05451",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc1",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbb",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x33f22a0081beb4b1afc4d91821b542143d939eda64c39f62a751f8a7cf7b0ea",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca3",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc9d",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1b388fec060ce4203a7183ca3fb027b25d8cc946739c20c7578c36256987dec",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc85",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc7f",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbee",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0xd504907d94a421a2b8c54be1eec8b5a4278b7fc3560e15fdbf52d6bcf7ec5f",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe8",
            "0x40137fff7fff8001",
            "0x4003800080017ff9",
            "0x4003800180017ffa",
            "0x4003800280017ffb",
            "0x4003800380017ffc",
            "0x4003800480017ffd",
            "0x4826800180018000",
            "0x5",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6a",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd2",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x4a6d0fbfa40a7d5b195fe292b2e135165a0df5d05aaf759b6f4352f9a3dd53",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbcc",
            "0x40137fff7fff8001",
            "0x4003800080017ff9",
            "0x4003800180017ffa",
            "0x4003800280017ffb",
            "0x4003800380017ffc",
            "0x4003800480017ffd",
            "0x4826800180018000",
            "0x5",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc4e",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb6",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x3c1d9eb98239fc3b66d000045eb38c8ffc077233d2bb59abdba24af1affba8d",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb0",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc36",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9e",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x39a869dc3c1d33296d4a96b81be8466eeb30431d6521a6f458e051370bae0ee",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb98",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc1d",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb85",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0xab9e7fd00ca9d0e391ae73db1133aa58fab4fb610c3ec85c30c1bf0197e70f",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7f",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc05",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6d",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x6fa43048eeb81abfa544432485453476f946b57bef35a9d406b9869230b465",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb67",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbed",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb55",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x70086e5cddab4bb50044e9883ec56677c0fa26da9ccf1cd014ea08dc56c2da",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4f",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd5",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb3d",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x3f3c69b89938f5ee5b4f33191651c2a005bdf22f97931fb40ce09c863c5762d",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb37",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbd",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff07fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9a",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb27",
            "0x480a7ff37fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb24",
            "0x400a7ff37fff7ffa",
            "0x48127ff97fff8000",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdf",
            "0x480680017fff8000",
            "0xc7d713b49da0000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0d",
            "0x480a7ff37fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe28",
            "0x480a7ff47fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe43",
            "0x480a7ff57fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5e",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe79",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe94",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc43",
            "0x482680017ff68000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x20680017fff7fff",
            "0x16",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde5",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb0d",
            "0x400780017fff7ff9",
            "0x0",
            "0x48127fed7fff8000",
            "0x48127fed7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed5",
            "0x10780017fff7fff",
            "0xa",
            "0x400780017fff7ffb",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee9",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd31",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd42",
            "0x400680017fff7fe5",
            "0x1",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127fc97fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe97",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe76",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0xb",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x480280057ffd8000",
            "0x480280067ffd8000",
            "0x480280077ffd8000",
            "0x480280087ffd8000",
            "0x480280097ffd8000",
            "0x4802800a7ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff91",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad2",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff96e",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc81",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf4",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0d",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd26",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc4f",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc13",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127f897fff8000",
            "0x48127f9f7fff8000",
            "0x48127fb57fff8000",
            "0x480a7ffd7fff8000",
            "0x48127fca7fff8000",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb9",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff942",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff93f",
            "0x48127ff57fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff93c",
            "0x48127ff27fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff939",
            "0x48127fe97fff8000",
            "0x48127fb27fff8000",
            "0x48127ffd7fff8000",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ff9",
            "0x4003800180007ffa",
            "0x4003800280007ffb",
            "0x4003800380007ffc",
            "0x4826800180008000",
            "0x4",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ff17fff8000",
            "0x48127ff17fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff90f",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc22",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc95",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcae",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc7",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf0",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb4",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127f897fff8000",
            "0x48127f9f7fff8000",
            "0x48127fb57fff8000",
            "0x480a7ffd7fff8000",
            "0x48127fca7fff8000",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb78",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8e3",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8e0",
            "0x48127ff57fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8dd",
            "0x48127ff27fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8da",
            "0x48127fe97fff8000",
            "0x48127fb27fff8000",
            "0x48127ffd7fff8000",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ff9",
            "0x4003800180007ffa",
            "0x4003800280007ffb",
            "0x4003800380007ffc",
            "0x4826800180008000",
            "0x4",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ff17fff8000",
            "0x48127ff17fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc03",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc94",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff914",
            "0x482480017fe28000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x20680017fff7fff",
            "0x7",
            "0x48127ffd7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20680017fff7ff8",
            "0x7",
            "0x48127ffd7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffd7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff956",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff870",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbf",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017ffe8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x480680017fff8000",
            "0x0",
            "0x40507ffe7ffd7fff",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff867",
            "0x48127fea7fff8000",
            "0x48127fea7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb71",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4e",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127fe37fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x239",
            "0x40137fff7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ad",
            "0x40137fff7fff8001",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb3b",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x48127ffa7fff8000",
            "0x48127fdb7fff8000",
            "0x1104800180018000",
            "0x2e4",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6c",
            "0x40137fff7fff8002",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80027fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x36a",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9c",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x480a80027fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc40",
            "0x48127ffe7fff8000",
            "0x48127fdf7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff90e",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x482480017fff8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff88000",
            "0x480080017ff78000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff82",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8cc",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7e6",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb35",
            "0x482480017fff8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x480680017fff8000",
            "0x0",
            "0x40507ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7df",
            "0x48127feb7fff8000",
            "0x48127feb7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae9",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac6",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127fe37fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x210",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x2d8",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab2",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x299",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae9",
            "0x40137fff7fff8002",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff815",
            "0x40137fff7fff8003",
            "0x48127ffe7fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x305",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb15",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a80037fff8000",
            "0x48127ffc7fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9d",
            "0x48127ffe7fff8000",
            "0x48127fdf7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff887",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x482480017fff8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff88000",
            "0x480080017ff78000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff85",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff89c",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff761",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa74",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9b2",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127fe27fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaeb",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb84",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff866",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff72b",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa3e",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff965",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127fe27fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad3",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb97",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff830",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6f5",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa44",
            "0x400680017fff7fff",
            "0x2",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c5",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6ed",
            "0x48127fed7fff8000",
            "0x48127fed7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab7",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb75",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7f6",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6b0",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa0a",
            "0x480680017fff8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6ac",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaa3",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb5b",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7c4",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7d1",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff696",
            "0x48127fe77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127fe77fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff894",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffacb",
            "0x48127ffe7fff8000",
            "0x48127fb17fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff794",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff659",
            "0x20780017fff7ffc",
            "0xb",
            "0x48127ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffabe",
            "0x48127ffe7fff8000",
            "0x48127fe07fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6b8",
            "0x48127ffe7fff8000",
            "0x48127ff37fff8000",
            "0x48127ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff78d",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127fe07fff8000",
            "0x48127ffb7fff8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff86c",
            "0x48127ffe7fff8000",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd5",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280017ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbf",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff60e",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff60b",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff996",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9af",
            "0x40137fff7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c7",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8b9",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127fb67fff8000",
            "0x480a80007fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fe17fff8000",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff85f",
            "0x40137ffd7fff8001",
            "0x40137fff7fff8002",
            "0x40137ffe7fff8003",
            "0x48127ffb7fff8000",
            "0x480a80037fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5e8",
            "0x48307ff280007f8e",
            "0x20680017fff7fff",
            "0x7",
            "0x48127fef7fff8000",
            "0x48127fb87fff8000",
            "0x48127ffc7fff8000",
            "0x10780017fff7fff",
            "0x10",
            "0x48127fef7fff8000",
            "0x48127fb87fff8000",
            "0x48127ffc7fff8000",
            "0x48127fee7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff973",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fd97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa0c",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x4829800180008000",
            "0x20680017fff7fff",
            "0x7",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x10780017fff7fff",
            "0x10",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff97b",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa3f",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5af",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5ac",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff937",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff950",
            "0x40137fff7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff968",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff85a",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127fb67fff8000",
            "0x480a80007fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fe17fff8000",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff81e",
            "0x40137ffd7fff8001",
            "0x40137fff7fff8002",
            "0x40137ffe7fff8003",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a80037fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff589",
            "0x48307ff280007f8e",
            "0x20680017fff7fff",
            "0x7",
            "0x48127fef7fff8000",
            "0x48127fb87fff8000",
            "0x48127ffc7fff8000",
            "0x10780017fff7fff",
            "0x10",
            "0x48127fef7fff8000",
            "0x48127fb87fff8000",
            "0x48127ffc7fff8000",
            "0x48127fee7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff914",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fd97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ad",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x4829800180008000",
            "0x20680017fff7fff",
            "0x7",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x10780017fff7fff",
            "0x10",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff91c",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e0",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff552",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff54f",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8bc",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc94",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7ef",
            "0x48127ffe7fff8000",
            "0x48297ffd80007ffb",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff54c",
            "0x48127fe87fff8000",
            "0x48127ffc7fff8000",
            "0x48127f927fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fce7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff72f",
            "0x20780017fff7ffd",
            "0x7",
            "0x48127ffd7fff8000",
            "0x48127fb27fff8000",
            "0x48127ffc7fff8000",
            "0x10780017fff7fff",
            "0xf",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127f757fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fc97fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff71e",
            "0x48127ffd7fff8000",
            "0x48127f957fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff518",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff582",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff882",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7ba",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127fe57fff8000",
            "0x48127fcd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6e9",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5b4",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x5",
            "0x40137fd87fff8000",
            "0x10780017fff7fff",
            "0x3",
            "0x400b7ffd7fff8000",
            "0x20780017fff8000",
            "0x7",
            "0x48127fd67fff8000",
            "0x48127fa37fff8000",
            "0x48127ffb7fff8000",
            "0x10780017fff7fff",
            "0xe",
            "0x48127fd67fff8000",
            "0x48127ffc7fff8000",
            "0x48127fa47fff8000",
            "0x48127fbb7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6fe",
            "0x48127ffd7fff8000",
            "0x48127f877fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4e0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff84d",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4e7",
            "0x20780017fff7ffd",
            "0x7",
            "0x48127fe77fff8000",
            "0x48127fe77fff8000",
            "0x48127ffb7fff8000",
            "0x10780017fff7fff",
            "0xd",
            "0x48127fe77fff8000",
            "0x48127ffc7fff8000",
            "0x48127fe87fff8000",
            "0x480a7ffc7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6de",
            "0x48127ffd7fff8000",
            "0x48127fcb7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4c0",
            "0x20780017fff7ffc",
            "0x6",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff524",
            "0x48127ffe7fff8000",
            "0x48127ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6dd",
            "0x48127ffe7fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff49e",
            "0x20780017fff7ffc",
            "0x6",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe2",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6b9",
            "0x48127ffe7fff8000",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "111": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.call_contract"
                    ],
                    "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 10
                        }
                    }
                }
            ],
            "119": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 11
                        }
                    }
                }
            ],
            "126": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_contract_address"
                    ],
                    "code": "syscall_handler.get_contract_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": 12
                        }
                    }
                }
            ],
            "134": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 13
                        }
                    }
                }
            ],
            "1356": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.initializer"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 96,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1371": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.MAX_FEE_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 98,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "14": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 3,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 3
                        }
                    }
                }
            ],
            "1401": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.factory_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 101,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "143": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 14
                        }
                    }
                }
            ],
            "1431": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.bondingCurve_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 104,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1461": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.nft_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 107,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1491": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.poolType_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 110,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1521": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.token_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 113,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "153": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ],
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 15
                        }
                    }
                }
            ],
            "1551": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.spotPrice_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 116,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "156": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 16
                        }
                    }
                }
            ],
            "1581": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.delta_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 119,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1611": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.fee_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 122,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1641": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.assetRecipient_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 125,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "166": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 16
                        }
                    }
                }
            ],
            "1671": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.owner_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 128,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1760": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.getBuyNFTQuote_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 131,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1855": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.getSellNFTQuote_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 134,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1919": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.getAssetRecipient_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 137,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2039": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.swapTokenForSpecificNFTs_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 143,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2174": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.swapNFTsForToken_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 151,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2261": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.changeSpotPrice"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 157,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2315": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.changeDelta"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 161,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2373": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.changeFee"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 165,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2423": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.changeAssetRecipient"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 169,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2471": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.withdrawToken"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 173,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2548": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.withdrawERC721"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 178,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 0
                        }
                    }
                }
            ],
            "30": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 6,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_felt.high": 6,
                            "starkware.cairo.common.math.split_felt.low": 5,
                            "starkware.cairo.common.math.split_felt.value": 4
                        }
                    }
                }
            ],
            "59": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 7,
                            "starkware.cairo.common.math.assert_le_felt.b": 8,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 9
                        }
                    }
                }
            ],
            "69": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "8": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_equal"
                    ],
                    "code": "from starkware.cairo.lang.vm.relocatable import RelocatableValue\nboth_ints = isinstance(ids.a, int) and isinstance(ids.b, int)\nboth_relocatable = (\n    isinstance(ids.a, RelocatableValue) and isinstance(ids.b, RelocatableValue) and\n    ids.a.segment_index == ids.b.segment_index)\nassert both_ints or both_relocatable, \\\n    f'assert_not_equal failed: non-comparable values: {ids.a}, {ids.b}.'\nassert (ids.a - ids.b) % PRIME != 0, f'assert_not_equal failed: {ids.a} = {ids.b}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_equal.a": 1,
                            "starkware.cairo.common.math.assert_not_equal.b": 2
                        }
                    }
                }
            ],
            "83": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "95": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.AssetRecipientChange": {
                "type": "namespace"
            },
            "__main__.AssetRecipientChange.Args": {
                "full_name": "__main__.AssetRecipientChange.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.AssetRecipientChange.ImplicitArgs": {
                "full_name": "__main__.AssetRecipientChange.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.AssetRecipientChange.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.AssetRecipientChange.SELECTOR": {
                "type": "const",
                "value": 1787653121547831136081970316025370997024512746615334276680412255596325467693
            },
            "__main__.AssetRecipientChange.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.AssetRecipientChange.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.AssetRecipientChange.emit": {
                "decorators": [],
                "pc": 1218,
                "type": "function"
            },
            "__main__.AssetRecipientChange.emit.Args": {
                "full_name": "__main__.AssetRecipientChange.emit.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.AssetRecipientChange.emit.ImplicitArgs": {
                "full_name": "__main__.AssetRecipientChange.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.AssetRecipientChange.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.AssetRecipientChange.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.AssetRecipientChange.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "__main__.AssetRecipientChange.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.DeltaUpdate": {
                "type": "namespace"
            },
            "__main__.DeltaUpdate.Args": {
                "full_name": "__main__.DeltaUpdate.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.DeltaUpdate.ImplicitArgs": {
                "full_name": "__main__.DeltaUpdate.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.DeltaUpdate.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.DeltaUpdate.SELECTOR": {
                "type": "const",
                "value": 197253212349402702076249215684263687700317253077713538145136812938186765413
            },
            "__main__.DeltaUpdate.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.DeltaUpdate.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.DeltaUpdate.emit": {
                "decorators": [],
                "pc": 1170,
                "type": "function"
            },
            "__main__.DeltaUpdate.emit.Args": {
                "full_name": "__main__.DeltaUpdate.emit.Args",
                "members": {
                    "newDelta": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.DeltaUpdate.emit.ImplicitArgs": {
                "full_name": "__main__.DeltaUpdate.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.DeltaUpdate.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.DeltaUpdate.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.DeltaUpdate.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "__main__.DeltaUpdate.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "__main__.FeeUpdate": {
                "type": "namespace"
            },
            "__main__.FeeUpdate.Args": {
                "full_name": "__main__.FeeUpdate.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.FeeUpdate.ImplicitArgs": {
                "full_name": "__main__.FeeUpdate.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.FeeUpdate.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.FeeUpdate.SELECTOR": {
                "type": "const",
                "value": 197945060600006977919595332353281094858456578168587454345022061522768544474
            },
            "__main__.FeeUpdate.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.FeeUpdate.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.FeeUpdate.emit": {
                "decorators": [],
                "pc": 1194,
                "type": "function"
            },
            "__main__.FeeUpdate.emit.Args": {
                "full_name": "__main__.FeeUpdate.emit.Args",
                "members": {
                    "newFee": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.FeeUpdate.emit.ImplicitArgs": {
                "full_name": "__main__.FeeUpdate.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.FeeUpdate.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.FeeUpdate.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.FeeUpdate.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "__main__.FeeUpdate.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.IBondingCurve": {
                "type": "namespace"
            },
            "__main__.IBondingCurve.Args": {
                "full_name": "__main__.IBondingCurve.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.IBondingCurve.GETBUYINFO_SELECTOR": {
                "type": "const",
                "value": 994548630199644749390494048935326489817531459529141567328875822514979916358
            },
            "__main__.IBondingCurve.GETSELLINFO_SELECTOR": {
                "type": "const",
                "value": 796815161464229361162553527558938353018440153259304389504168937227881842461
            },
            "__main__.IBondingCurve.ImplicitArgs": {
                "full_name": "__main__.IBondingCurve.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.IBondingCurve.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.IBondingCurve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.IBondingCurve.VALIDATEDELTA_SELECTOR": {
                "type": "const",
                "value": 1787532890773630513990191229516300167206967799685276803668932255724288465172
            },
            "__main__.IBondingCurve.VALIDATESPOTPRICE_SELECTOR": {
                "type": "const",
                "value": 25750284609739029075906217259784548878769640223820801717171807005529907232
            },
            "__main__.IBondingCurve.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.IBondingCurve.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "__main__.IBondingCurve.getBuyInfo": {
                "decorators": [],
                "pc": 641,
                "type": "function"
            },
            "__main__.IBondingCurve.getBuyInfo.Args": {
                "full_name": "__main__.IBondingCurve.getBuyInfo.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "delta": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "feeMultiplier": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "numItems": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "protocolFeeMultiplier": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "spotPrice": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "__main__.IBondingCurve.getBuyInfo.ImplicitArgs": {
                "full_name": "__main__.IBondingCurve.getBuyInfo.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IBondingCurve.getBuyInfo.Return": {
                "cairo_type": "(newSpotPrice: felt, newDelta: felt, inputValue: felt, protocolFee: felt)",
                "type": "type_definition"
            },
            "__main__.IBondingCurve.getBuyInfo.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IBondingCurve.getSellInfo": {
                "decorators": [],
                "pc": 671,
                "type": "function"
            },
            "__main__.IBondingCurve.getSellInfo.Args": {
                "full_name": "__main__.IBondingCurve.getSellInfo.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "delta": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "feeMultiplier": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "numItems": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "protocolFeeMultiplier": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "spotPrice": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "__main__.IBondingCurve.getSellInfo.ImplicitArgs": {
                "full_name": "__main__.IBondingCurve.getSellInfo.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IBondingCurve.getSellInfo.Return": {
                "cairo_type": "(newSpotPrice: felt, newDelta: felt, outputValue: felt, protocolFee: felt)",
                "type": "type_definition"
            },
            "__main__.IBondingCurve.getSellInfo.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IBondingCurve.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "__main__.IBondingCurve.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.IBondingCurve.validateDelta": {
                "decorators": [],
                "pc": 595,
                "type": "function"
            },
            "__main__.IBondingCurve.validateDelta.Args": {
                "full_name": "__main__.IBondingCurve.validateDelta.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "delta": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IBondingCurve.validateDelta.ImplicitArgs": {
                "full_name": "__main__.IBondingCurve.validateDelta.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IBondingCurve.validateDelta.Return": {
                "cairo_type": "(valid: felt)",
                "type": "type_definition"
            },
            "__main__.IBondingCurve.validateDelta.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IBondingCurve.validateSpotPrice": {
                "decorators": [],
                "pc": 618,
                "type": "function"
            },
            "__main__.IBondingCurve.validateSpotPrice.Args": {
                "full_name": "__main__.IBondingCurve.validateSpotPrice.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spotPrice": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IBondingCurve.validateSpotPrice.ImplicitArgs": {
                "full_name": "__main__.IBondingCurve.validateSpotPrice.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IBondingCurve.validateSpotPrice.Return": {
                "cairo_type": "(valid: felt)",
                "type": "type_definition"
            },
            "__main__.IBondingCurve.validateSpotPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IERC20": {
                "type": "namespace"
            },
            "__main__.IERC20.Args": {
                "full_name": "__main__.IERC20.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.IERC20.BALANCEOF_SELECTOR": {
                "type": "const",
                "value": 1307730684388977109649524593492043083703013045633289330664425380824804018030
            },
            "__main__.IERC20.ImplicitArgs": {
                "full_name": "__main__.IERC20.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.IERC20.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.IERC20.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.IERC20.TRANSFERFROM_SELECTOR": {
                "type": "const",
                "value": 116061167288211781254449158074459916871457383008289084697957612485591092000
            },
            "__main__.IERC20.TRANSFER_SELECTOR": {
                "type": "const",
                "value": 232670485425082704932579856502088130646006032362877466777181098476241604910
            },
            "__main__.IERC20.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.IERC20.balanceOf": {
                "decorators": [],
                "pc": 498,
                "type": "function"
            },
            "__main__.IERC20.balanceOf.Args": {
                "full_name": "__main__.IERC20.balanceOf.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IERC20.balanceOf.ImplicitArgs": {
                "full_name": "__main__.IERC20.balanceOf.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IERC20.balanceOf.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.IERC20.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IERC20.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "__main__.IERC20.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "__main__.IERC20.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.IERC20.transfer": {
                "decorators": [],
                "pc": 548,
                "type": "function"
            },
            "__main__.IERC20.transfer.Args": {
                "full_name": "__main__.IERC20.transfer.Args",
                "members": {
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.IERC20.transfer.ImplicitArgs": {
                "full_name": "__main__.IERC20.transfer.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IERC20.transfer.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "__main__.IERC20.transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IERC20.transferFrom": {
                "decorators": [],
                "pc": 522,
                "type": "function"
            },
            "__main__.IERC20.transferFrom.Args": {
                "full_name": "__main__.IERC20.transferFrom.Args",
                "members": {
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.IERC20.transferFrom.ImplicitArgs": {
                "full_name": "__main__.IERC20.transferFrom.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IERC20.transferFrom.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "__main__.IERC20.transferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IERC721": {
                "type": "namespace"
            },
            "__main__.IERC721.Args": {
                "full_name": "__main__.IERC721.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.IERC721.ImplicitArgs": {
                "full_name": "__main__.IERC721.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.IERC721.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.IERC721.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.IERC721.TRANSFERFROM_SELECTOR": {
                "type": "const",
                "value": 116061167288211781254449158074459916871457383008289084697957612485591092000
            },
            "__main__.IERC721.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.IERC721.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "__main__.IERC721.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "__main__.IERC721.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.IERC721.transferFrom": {
                "decorators": [],
                "pc": 573,
                "type": "function"
            },
            "__main__.IERC721.transferFrom.Args": {
                "full_name": "__main__.IERC721.transferFrom.Args",
                "members": {
                    "_from": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.IERC721.transferFrom.ImplicitArgs": {
                "full_name": "__main__.IERC721.transferFrom.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IERC721.transferFrom.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.IERC721.transferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IPairFactory": {
                "type": "namespace"
            },
            "__main__.IPairFactory.Args": {
                "full_name": "__main__.IPairFactory.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.IPairFactory.ImplicitArgs": {
                "full_name": "__main__.IPairFactory.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.IPairFactory.PROTOCOLFEEMULTIPLIER_SELECTOR": {
                "type": "const",
                "value": 1147576851916391712120451974275886837715225732545532175811370337668359906885
            },
            "__main__.IPairFactory.PROTOCOLFEERECIPIENT_SELECTOR": {
                "type": "const",
                "value": 758958393365254884674053511914820664298141115499151009431648096385091731279
            },
            "__main__.IPairFactory.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.IPairFactory.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.IPairFactory.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.IPairFactory.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "__main__.IPairFactory.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "__main__.IPairFactory.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.IPairFactory.protocolFeeMultiplier": {
                "decorators": [],
                "pc": 721,
                "type": "function"
            },
            "__main__.IPairFactory.protocolFeeMultiplier.Args": {
                "full_name": "__main__.IPairFactory.protocolFeeMultiplier.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.IPairFactory.protocolFeeMultiplier.ImplicitArgs": {
                "full_name": "__main__.IPairFactory.protocolFeeMultiplier.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IPairFactory.protocolFeeMultiplier.Return": {
                "cairo_type": "(multiplier: felt)",
                "type": "type_definition"
            },
            "__main__.IPairFactory.protocolFeeMultiplier.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.IPairFactory.protocolFeeRecipient": {
                "decorators": [],
                "pc": 701,
                "type": "function"
            },
            "__main__.IPairFactory.protocolFeeRecipient.Args": {
                "full_name": "__main__.IPairFactory.protocolFeeRecipient.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.IPairFactory.protocolFeeRecipient.ImplicitArgs": {
                "full_name": "__main__.IPairFactory.protocolFeeRecipient.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.IPairFactory.protocolFeeRecipient.Return": {
                "cairo_type": "(recipient: felt)",
                "type": "type_definition"
            },
            "__main__.IPairFactory.protocolFeeRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.MAX_FEE": {
                "decorators": [
                    "view"
                ],
                "pc": 1365,
                "type": "function"
            },
            "__main__.MAX_FEE.Args": {
                "full_name": "__main__.MAX_FEE.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.MAX_FEE.ImplicitArgs": {
                "full_name": "__main__.MAX_FEE.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.MAX_FEE.Return": {
                "cairo_type": "(fee: felt)",
                "type": "type_definition"
            },
            "__main__.MAX_FEE.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.NFTWithdrawal": {
                "type": "namespace"
            },
            "__main__.NFTWithdrawal.Args": {
                "full_name": "__main__.NFTWithdrawal.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.NFTWithdrawal.ImplicitArgs": {
                "full_name": "__main__.NFTWithdrawal.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.NFTWithdrawal.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.NFTWithdrawal.SELECTOR": {
                "type": "const",
                "value": 303224769823289422046888983560054627211477793250982171127256158166828181263
            },
            "__main__.NFTWithdrawal.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.NFTWithdrawal.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.NFTWithdrawal.emit": {
                "decorators": [],
                "pc": 1146,
                "type": "function"
            },
            "__main__.NFTWithdrawal.emit.Args": {
                "full_name": "__main__.NFTWithdrawal.emit.Args",
                "members": {
                    "nft": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.NFTWithdrawal.emit.ImplicitArgs": {
                "full_name": "__main__.NFTWithdrawal.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.NFTWithdrawal.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.NFTWithdrawal.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.NFTWithdrawal.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "__main__.NFTWithdrawal.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.Ownable": {
                "destination": "contracts.openzeppelin.access.ownable.library.Ownable",
                "type": "alias"
            },
            "__main__.Pair_MAX_FEE": {
                "type": "namespace"
            },
            "__main__.Pair_MAX_FEE.Args": {
                "full_name": "__main__.Pair_MAX_FEE.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_MAX_FEE.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_MAX_FEE.ImplicitArgs": {
                "full_name": "__main__.Pair_MAX_FEE.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_MAX_FEE.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_MAX_FEE.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_MAX_FEE.addr": {
                "decorators": [],
                "pc": 741,
                "type": "function"
            },
            "__main__.Pair_MAX_FEE.addr.Args": {
                "full_name": "__main__.Pair_MAX_FEE.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_MAX_FEE.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_MAX_FEE.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_MAX_FEE.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_MAX_FEE.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_MAX_FEE.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_MAX_FEE.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_MAX_FEE.read": {
                "decorators": [],
                "pc": 746,
                "type": "function"
            },
            "__main__.Pair_MAX_FEE.read.Args": {
                "full_name": "__main__.Pair_MAX_FEE.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_MAX_FEE.read.ImplicitArgs": {
                "full_name": "__main__.Pair_MAX_FEE.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_MAX_FEE.read.Return": {
                "cairo_type": "(fee: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_MAX_FEE.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_MAX_FEE.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_MAX_FEE.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_MAX_FEE.write": {
                "decorators": [],
                "pc": 759,
                "type": "function"
            },
            "__main__.Pair_MAX_FEE.write.Args": {
                "full_name": "__main__.Pair_MAX_FEE.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_MAX_FEE.write.ImplicitArgs": {
                "full_name": "__main__.Pair_MAX_FEE.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_MAX_FEE.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_MAX_FEE.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_assetRecipient": {
                "type": "namespace"
            },
            "__main__.Pair_assetRecipient.Args": {
                "full_name": "__main__.Pair_assetRecipient.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_assetRecipient.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_assetRecipient.ImplicitArgs": {
                "full_name": "__main__.Pair_assetRecipient.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_assetRecipient.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_assetRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_assetRecipient.addr": {
                "decorators": [],
                "pc": 1011,
                "type": "function"
            },
            "__main__.Pair_assetRecipient.addr.Args": {
                "full_name": "__main__.Pair_assetRecipient.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_assetRecipient.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_assetRecipient.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_assetRecipient.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_assetRecipient.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_assetRecipient.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_assetRecipient.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_assetRecipient.read": {
                "decorators": [],
                "pc": 1016,
                "type": "function"
            },
            "__main__.Pair_assetRecipient.read.Args": {
                "full_name": "__main__.Pair_assetRecipient.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_assetRecipient.read.ImplicitArgs": {
                "full_name": "__main__.Pair_assetRecipient.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_assetRecipient.read.Return": {
                "cairo_type": "(recipient: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_assetRecipient.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_assetRecipient.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_assetRecipient.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_assetRecipient.write": {
                "decorators": [],
                "pc": 1029,
                "type": "function"
            },
            "__main__.Pair_assetRecipient.write.Args": {
                "full_name": "__main__.Pair_assetRecipient.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_assetRecipient.write.ImplicitArgs": {
                "full_name": "__main__.Pair_assetRecipient.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_assetRecipient.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_assetRecipient.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_bondingCurve": {
                "type": "namespace"
            },
            "__main__.Pair_bondingCurve.Args": {
                "full_name": "__main__.Pair_bondingCurve.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_bondingCurve.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_bondingCurve.ImplicitArgs": {
                "full_name": "__main__.Pair_bondingCurve.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_bondingCurve.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_bondingCurve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_bondingCurve.addr": {
                "decorators": [],
                "pc": 801,
                "type": "function"
            },
            "__main__.Pair_bondingCurve.addr.Args": {
                "full_name": "__main__.Pair_bondingCurve.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_bondingCurve.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_bondingCurve.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_bondingCurve.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_bondingCurve.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_bondingCurve.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_bondingCurve.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_bondingCurve.read": {
                "decorators": [],
                "pc": 806,
                "type": "function"
            },
            "__main__.Pair_bondingCurve.read.Args": {
                "full_name": "__main__.Pair_bondingCurve.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_bondingCurve.read.ImplicitArgs": {
                "full_name": "__main__.Pair_bondingCurve.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_bondingCurve.read.Return": {
                "cairo_type": "(curve: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_bondingCurve.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_bondingCurve.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_bondingCurve.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_bondingCurve.write": {
                "decorators": [],
                "pc": 819,
                "type": "function"
            },
            "__main__.Pair_bondingCurve.write.Args": {
                "full_name": "__main__.Pair_bondingCurve.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_bondingCurve.write.ImplicitArgs": {
                "full_name": "__main__.Pair_bondingCurve.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_bondingCurve.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_bondingCurve.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_delta": {
                "type": "namespace"
            },
            "__main__.Pair_delta.Args": {
                "full_name": "__main__.Pair_delta.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_delta.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_delta.ImplicitArgs": {
                "full_name": "__main__.Pair_delta.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_delta.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_delta.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_delta.addr": {
                "decorators": [],
                "pc": 951,
                "type": "function"
            },
            "__main__.Pair_delta.addr.Args": {
                "full_name": "__main__.Pair_delta.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_delta.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_delta.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_delta.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_delta.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_delta.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_delta.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_delta.read": {
                "decorators": [],
                "pc": 956,
                "type": "function"
            },
            "__main__.Pair_delta.read.Args": {
                "full_name": "__main__.Pair_delta.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_delta.read.ImplicitArgs": {
                "full_name": "__main__.Pair_delta.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_delta.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_delta.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_delta.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_delta.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_delta.write": {
                "decorators": [],
                "pc": 969,
                "type": "function"
            },
            "__main__.Pair_delta.write.Args": {
                "full_name": "__main__.Pair_delta.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_delta.write.ImplicitArgs": {
                "full_name": "__main__.Pair_delta.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_delta.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_delta.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_factory": {
                "type": "namespace"
            },
            "__main__.Pair_factory.Args": {
                "full_name": "__main__.Pair_factory.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_factory.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_factory.ImplicitArgs": {
                "full_name": "__main__.Pair_factory.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_factory.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_factory.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_factory.addr": {
                "decorators": [],
                "pc": 771,
                "type": "function"
            },
            "__main__.Pair_factory.addr.Args": {
                "full_name": "__main__.Pair_factory.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_factory.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_factory.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_factory.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_factory.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_factory.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_factory.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_factory.read": {
                "decorators": [],
                "pc": 776,
                "type": "function"
            },
            "__main__.Pair_factory.read.Args": {
                "full_name": "__main__.Pair_factory.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_factory.read.ImplicitArgs": {
                "full_name": "__main__.Pair_factory.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_factory.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_factory.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_factory.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_factory.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_factory.write": {
                "decorators": [],
                "pc": 789,
                "type": "function"
            },
            "__main__.Pair_factory.write.Args": {
                "full_name": "__main__.Pair_factory.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_factory.write.ImplicitArgs": {
                "full_name": "__main__.Pair_factory.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_factory.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_factory.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_fee": {
                "type": "namespace"
            },
            "__main__.Pair_fee.Args": {
                "full_name": "__main__.Pair_fee.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_fee.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_fee.ImplicitArgs": {
                "full_name": "__main__.Pair_fee.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_fee.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_fee.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_fee.addr": {
                "decorators": [],
                "pc": 981,
                "type": "function"
            },
            "__main__.Pair_fee.addr.Args": {
                "full_name": "__main__.Pair_fee.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_fee.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_fee.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_fee.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_fee.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_fee.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_fee.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_fee.read": {
                "decorators": [],
                "pc": 986,
                "type": "function"
            },
            "__main__.Pair_fee.read.Args": {
                "full_name": "__main__.Pair_fee.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_fee.read.ImplicitArgs": {
                "full_name": "__main__.Pair_fee.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_fee.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_fee.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_fee.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_fee.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_fee.write": {
                "decorators": [],
                "pc": 999,
                "type": "function"
            },
            "__main__.Pair_fee.write.Args": {
                "full_name": "__main__.Pair_fee.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_fee.write.ImplicitArgs": {
                "full_name": "__main__.Pair_fee.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_fee.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_fee.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_nft": {
                "type": "namespace"
            },
            "__main__.Pair_nft.Args": {
                "full_name": "__main__.Pair_nft.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_nft.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_nft.ImplicitArgs": {
                "full_name": "__main__.Pair_nft.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_nft.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_nft.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_nft.addr": {
                "decorators": [],
                "pc": 831,
                "type": "function"
            },
            "__main__.Pair_nft.addr.Args": {
                "full_name": "__main__.Pair_nft.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_nft.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_nft.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_nft.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_nft.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_nft.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_nft.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_nft.read": {
                "decorators": [],
                "pc": 836,
                "type": "function"
            },
            "__main__.Pair_nft.read.Args": {
                "full_name": "__main__.Pair_nft.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_nft.read.ImplicitArgs": {
                "full_name": "__main__.Pair_nft.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_nft.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_nft.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_nft.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_nft.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_nft.write": {
                "decorators": [],
                "pc": 849,
                "type": "function"
            },
            "__main__.Pair_nft.write.Args": {
                "full_name": "__main__.Pair_nft.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_nft.write.ImplicitArgs": {
                "full_name": "__main__.Pair_nft.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_nft.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_nft.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_poolType": {
                "type": "namespace"
            },
            "__main__.Pair_poolType.Args": {
                "full_name": "__main__.Pair_poolType.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_poolType.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_poolType.ImplicitArgs": {
                "full_name": "__main__.Pair_poolType.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_poolType.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_poolType.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_poolType.addr": {
                "decorators": [],
                "pc": 861,
                "type": "function"
            },
            "__main__.Pair_poolType.addr.Args": {
                "full_name": "__main__.Pair_poolType.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_poolType.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_poolType.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_poolType.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_poolType.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_poolType.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_poolType.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_poolType.read": {
                "decorators": [],
                "pc": 866,
                "type": "function"
            },
            "__main__.Pair_poolType.read.Args": {
                "full_name": "__main__.Pair_poolType.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_poolType.read.ImplicitArgs": {
                "full_name": "__main__.Pair_poolType.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_poolType.read.Return": {
                "cairo_type": "(type: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_poolType.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_poolType.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_poolType.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_poolType.write": {
                "decorators": [],
                "pc": 879,
                "type": "function"
            },
            "__main__.Pair_poolType.write.Args": {
                "full_name": "__main__.Pair_poolType.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_poolType.write.ImplicitArgs": {
                "full_name": "__main__.Pair_poolType.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_poolType.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_poolType.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_spotPrice": {
                "type": "namespace"
            },
            "__main__.Pair_spotPrice.Args": {
                "full_name": "__main__.Pair_spotPrice.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_spotPrice.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_spotPrice.ImplicitArgs": {
                "full_name": "__main__.Pair_spotPrice.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_spotPrice.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_spotPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_spotPrice.addr": {
                "decorators": [],
                "pc": 921,
                "type": "function"
            },
            "__main__.Pair_spotPrice.addr.Args": {
                "full_name": "__main__.Pair_spotPrice.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_spotPrice.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_spotPrice.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_spotPrice.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_spotPrice.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_spotPrice.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_spotPrice.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_spotPrice.read": {
                "decorators": [],
                "pc": 926,
                "type": "function"
            },
            "__main__.Pair_spotPrice.read.Args": {
                "full_name": "__main__.Pair_spotPrice.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_spotPrice.read.ImplicitArgs": {
                "full_name": "__main__.Pair_spotPrice.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_spotPrice.read.Return": {
                "cairo_type": "(price: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_spotPrice.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_spotPrice.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_spotPrice.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_spotPrice.write": {
                "decorators": [],
                "pc": 939,
                "type": "function"
            },
            "__main__.Pair_spotPrice.write.Args": {
                "full_name": "__main__.Pair_spotPrice.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_spotPrice.write.ImplicitArgs": {
                "full_name": "__main__.Pair_spotPrice.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_spotPrice.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_spotPrice.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_token": {
                "type": "namespace"
            },
            "__main__.Pair_token.Args": {
                "full_name": "__main__.Pair_token.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_token.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Pair_token.ImplicitArgs": {
                "full_name": "__main__.Pair_token.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_token.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_token.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_token.addr": {
                "decorators": [],
                "pc": 891,
                "type": "function"
            },
            "__main__.Pair_token.addr.Args": {
                "full_name": "__main__.Pair_token.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_token.addr.ImplicitArgs": {
                "full_name": "__main__.Pair_token.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Pair_token.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_token.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_token.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Pair_token.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Pair_token.read": {
                "decorators": [],
                "pc": 896,
                "type": "function"
            },
            "__main__.Pair_token.read.Args": {
                "full_name": "__main__.Pair_token.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Pair_token.read.ImplicitArgs": {
                "full_name": "__main__.Pair_token.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_token.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Pair_token.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Pair_token.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Pair_token.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Pair_token.write": {
                "decorators": [],
                "pc": 909,
                "type": "function"
            },
            "__main__.Pair_token.write.Args": {
                "full_name": "__main__.Pair_token.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Pair_token.write.ImplicitArgs": {
                "full_name": "__main__.Pair_token.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Pair_token.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Pair_token.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.PoolType": {
                "full_name": "__main__.PoolType",
                "members": {
                    "NFT": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "TOKEN": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "TRADE": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Proxy": {
                "destination": "contracts.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "__main__.ReentrancyGuard": {
                "destination": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard",
                "type": "alias"
            },
            "__main__.SpotPriceUpdate": {
                "type": "namespace"
            },
            "__main__.SpotPriceUpdate.Args": {
                "full_name": "__main__.SpotPriceUpdate.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.SpotPriceUpdate.ImplicitArgs": {
                "full_name": "__main__.SpotPriceUpdate.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.SpotPriceUpdate.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.SpotPriceUpdate.SELECTOR": {
                "type": "const",
                "value": 1699444059818870903625969639066343774443514964889442432656876056521828448909
            },
            "__main__.SpotPriceUpdate.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.SpotPriceUpdate.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.SpotPriceUpdate.emit": {
                "decorators": [],
                "pc": 1097,
                "type": "function"
            },
            "__main__.SpotPriceUpdate.emit.Args": {
                "full_name": "__main__.SpotPriceUpdate.emit.Args",
                "members": {
                    "newSpotPrice": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.SpotPriceUpdate.emit.ImplicitArgs": {
                "full_name": "__main__.SpotPriceUpdate.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.SpotPriceUpdate.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.SpotPriceUpdate.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.SpotPriceUpdate.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "__main__.SpotPriceUpdate.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.SwapNFTInPair": {
                "type": "namespace"
            },
            "__main__.SwapNFTInPair.Args": {
                "full_name": "__main__.SwapNFTInPair.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.SwapNFTInPair.ImplicitArgs": {
                "full_name": "__main__.SwapNFTInPair.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.SwapNFTInPair.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.SwapNFTInPair.SELECTOR": {
                "type": "const",
                "value": 376369927240686970312597199694390991086255668243830155578295714836834151519
            },
            "__main__.SwapNFTInPair.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.SwapNFTInPair.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.SwapNFTInPair.emit": {
                "decorators": [],
                "pc": 1041,
                "type": "function"
            },
            "__main__.SwapNFTInPair.emit.Args": {
                "full_name": "__main__.SwapNFTInPair.emit.Args",
                "members": {
                    "caller": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "collection": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "currency": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "nftAmount": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "outputAmount": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.SwapNFTInPair.emit.ImplicitArgs": {
                "full_name": "__main__.SwapNFTInPair.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.SwapNFTInPair.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.SwapNFTInPair.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.SwapNFTInPair.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "__main__.SwapNFTInPair.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.SwapNFTOutPair": {
                "type": "namespace"
            },
            "__main__.SwapNFTOutPair.Args": {
                "full_name": "__main__.SwapNFTOutPair.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.SwapNFTOutPair.ImplicitArgs": {
                "full_name": "__main__.SwapNFTOutPair.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.SwapNFTOutPair.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.SwapNFTOutPair.SELECTOR": {
                "type": "const",
                "value": 131499397726730870898086850357767251369114476503897602350030564802466930003
            },
            "__main__.SwapNFTOutPair.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.SwapNFTOutPair.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.SwapNFTOutPair.emit": {
                "decorators": [],
                "pc": 1069,
                "type": "function"
            },
            "__main__.SwapNFTOutPair.emit.Args": {
                "full_name": "__main__.SwapNFTOutPair.emit.Args",
                "members": {
                    "caller": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "collection": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "currency": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "inputAmount": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nftAmount": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.SwapNFTOutPair.emit.ImplicitArgs": {
                "full_name": "__main__.SwapNFTOutPair.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.SwapNFTOutPair.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.SwapNFTOutPair.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.SwapNFTOutPair.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "__main__.SwapNFTOutPair.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "__main__.TokenWithdrawal": {
                "type": "namespace"
            },
            "__main__.TokenWithdrawal.Args": {
                "full_name": "__main__.TokenWithdrawal.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.TokenWithdrawal.ImplicitArgs": {
                "full_name": "__main__.TokenWithdrawal.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.TokenWithdrawal.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.TokenWithdrawal.SELECTOR": {
                "type": "const",
                "value": 1629962081063398881813947581124882313146238652104925936790556817233710604526
            },
            "__main__.TokenWithdrawal.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.TokenWithdrawal.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.TokenWithdrawal.emit": {
                "decorators": [],
                "pc": 1121,
                "type": "function"
            },
            "__main__.TokenWithdrawal.emit.Args": {
                "full_name": "__main__.TokenWithdrawal.emit.Args",
                "members": {
                    "amount": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.TokenWithdrawal.emit.ImplicitArgs": {
                "full_name": "__main__.TokenWithdrawal.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.TokenWithdrawal.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.TokenWithdrawal.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.TokenWithdrawal.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "__main__.TokenWithdrawal.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "__main__.WAD": {
                "type": "const",
                "value": 1000000000000000000
            },
            "__main__._calculateBuyInfoAndUpdatePoolParams": {
                "decorators": [],
                "pc": 2557,
                "type": "function"
            },
            "__main__._calculateBuyInfoAndUpdatePoolParams.Args": {
                "full_name": "__main__._calculateBuyInfoAndUpdatePoolParams.Args",
                "members": {
                    "_bondingCurve": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_factory": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "maxExpectedTokenInput": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "numNFTs": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._calculateBuyInfoAndUpdatePoolParams.ImplicitArgs": {
                "full_name": "__main__._calculateBuyInfoAndUpdatePoolParams.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._calculateBuyInfoAndUpdatePoolParams.Return": {
                "cairo_type": "(protocolFee: felt, inputAmount: felt)",
                "type": "type_definition"
            },
            "__main__._calculateBuyInfoAndUpdatePoolParams.SIZEOF_LOCALS": {
                "type": "const",
                "value": 4
            },
            "__main__._calculateSellInfoAndUpdatePoolParams": {
                "decorators": [],
                "pc": 2652,
                "type": "function"
            },
            "__main__._calculateSellInfoAndUpdatePoolParams.Args": {
                "full_name": "__main__._calculateSellInfoAndUpdatePoolParams.Args",
                "members": {
                    "_bondingCurve": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_factory": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "minExpectedTokenOutput": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "numNFTs": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._calculateSellInfoAndUpdatePoolParams.ImplicitArgs": {
                "full_name": "__main__._calculateSellInfoAndUpdatePoolParams.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._calculateSellInfoAndUpdatePoolParams.Return": {
                "cairo_type": "(protocolFee: felt, outputAmount: felt)",
                "type": "type_definition"
            },
            "__main__._calculateSellInfoAndUpdatePoolParams.SIZEOF_LOCALS": {
                "type": "const",
                "value": 4
            },
            "__main__._payProtocolFeeFromPair": {
                "decorators": [],
                "pc": 2803,
                "type": "function"
            },
            "__main__._payProtocolFeeFromPair.Args": {
                "full_name": "__main__._payProtocolFeeFromPair.Args",
                "members": {
                    "_factory": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "protocolFee": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__._payProtocolFeeFromPair.ImplicitArgs": {
                "full_name": "__main__._payProtocolFeeFromPair.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._payProtocolFeeFromPair.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._payProtocolFeeFromPair.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__._pullTokenInputAndPayProtocolFee": {
                "decorators": [],
                "pc": 2747,
                "type": "function"
            },
            "__main__._pullTokenInputAndPayProtocolFee.Args": {
                "full_name": "__main__._pullTokenInputAndPayProtocolFee.Args",
                "members": {
                    "_factory": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_from": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "inputAmount": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "protocolFee": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._pullTokenInputAndPayProtocolFee.ImplicitArgs": {
                "full_name": "__main__._pullTokenInputAndPayProtocolFee.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._pullTokenInputAndPayProtocolFee.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._pullTokenInputAndPayProtocolFee.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._sendSpecificNFTsToRecipient": {
                "decorators": [],
                "pc": 2893,
                "type": "function"
            },
            "__main__._sendSpecificNFTsToRecipient.Args": {
                "full_name": "__main__._sendSpecificNFTsToRecipient.Args",
                "members": {
                    "_nft": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "nftIds": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 3
                    },
                    "nftIds_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nftRecipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._sendSpecificNFTsToRecipient.ImplicitArgs": {
                "full_name": "__main__._sendSpecificNFTsToRecipient.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._sendSpecificNFTsToRecipient.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._sendSpecificNFTsToRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._sendTokenOutput": {
                "decorators": [],
                "pc": 2861,
                "type": "function"
            },
            "__main__._sendTokenOutput.Args": {
                "full_name": "__main__._sendTokenOutput.Args",
                "members": {
                    "outputAmount": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "tokenRecipient": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__._sendTokenOutput.ImplicitArgs": {
                "full_name": "__main__._sendTokenOutput.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._sendTokenOutput.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._sendTokenOutput.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._takeNFTsFromSender": {
                "decorators": [],
                "pc": 2927,
                "type": "function"
            },
            "__main__._takeNFTsFromSender.Args": {
                "full_name": "__main__._takeNFTsFromSender.Args",
                "members": {
                    "_from": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "_nft": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "nftIds": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 3
                    },
                    "nftIds_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._takeNFTsFromSender.ImplicitArgs": {
                "full_name": "__main__._takeNFTsFromSender.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._takeNFTsFromSender.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._takeNFTsFromSender.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "__main__.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "__main__.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "__main__.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "__main__.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "__main__.assetRecipient": {
                "decorators": [
                    "view"
                ],
                "pc": 1635,
                "type": "function"
            },
            "__main__.assetRecipient.Args": {
                "full_name": "__main__.assetRecipient.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.assetRecipient.ImplicitArgs": {
                "full_name": "__main__.assetRecipient.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.assetRecipient.Return": {
                "cairo_type": "(recipient: felt)",
                "type": "type_definition"
            },
            "__main__.assetRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.bondingCurve": {
                "decorators": [
                    "view"
                ],
                "pc": 1425,
                "type": "function"
            },
            "__main__.bondingCurve.Args": {
                "full_name": "__main__.bondingCurve.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.bondingCurve.ImplicitArgs": {
                "full_name": "__main__.bondingCurve.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.bondingCurve.Return": {
                "cairo_type": "(curve: felt)",
                "type": "type_definition"
            },
            "__main__.bondingCurve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.changeAssetRecipient": {
                "decorators": [
                    "external"
                ],
                "pc": 2382,
                "type": "function"
            },
            "__main__.changeAssetRecipient.Args": {
                "full_name": "__main__.changeAssetRecipient.Args",
                "members": {
                    "newRecipient": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.changeAssetRecipient.ImplicitArgs": {
                "full_name": "__main__.changeAssetRecipient.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.changeAssetRecipient.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.changeAssetRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.changeDelta": {
                "decorators": [
                    "external"
                ],
                "pc": 2270,
                "type": "function"
            },
            "__main__.changeDelta.Args": {
                "full_name": "__main__.changeDelta.Args",
                "members": {
                    "newDelta": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.changeDelta.ImplicitArgs": {
                "full_name": "__main__.changeDelta.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.changeDelta.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.changeDelta.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.changeFee": {
                "decorators": [
                    "external"
                ],
                "pc": 2324,
                "type": "function"
            },
            "__main__.changeFee.Args": {
                "full_name": "__main__.changeFee.Args",
                "members": {
                    "newFee": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.changeFee.ImplicitArgs": {
                "full_name": "__main__.changeFee.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.changeFee.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.changeFee.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.changeSpotPrice": {
                "decorators": [
                    "external"
                ],
                "pc": 2216,
                "type": "function"
            },
            "__main__.changeSpotPrice.Args": {
                "full_name": "__main__.changeSpotPrice.Args",
                "members": {
                    "newSpotPrice": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.changeSpotPrice.ImplicitArgs": {
                "full_name": "__main__.changeSpotPrice.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.changeSpotPrice.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.changeSpotPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.delta": {
                "decorators": [
                    "view"
                ],
                "pc": 1575,
                "type": "function"
            },
            "__main__.delta.Args": {
                "full_name": "__main__.delta.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.delta.ImplicitArgs": {
                "full_name": "__main__.delta.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.delta.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.delta.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.factory": {
                "decorators": [
                    "view"
                ],
                "pc": 1395,
                "type": "function"
            },
            "__main__.factory.Args": {
                "full_name": "__main__.factory.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.factory.ImplicitArgs": {
                "full_name": "__main__.factory.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.factory.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.factory.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.fee": {
                "decorators": [
                    "view"
                ],
                "pc": 1605,
                "type": "function"
            },
            "__main__.fee.Args": {
                "full_name": "__main__.fee.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.fee.ImplicitArgs": {
                "full_name": "__main__.fee.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.fee.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.fee.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.getAssetRecipient": {
                "decorators": [
                    "view"
                ],
                "pc": 1885,
                "type": "function"
            },
            "__main__.getAssetRecipient.Args": {
                "full_name": "__main__.getAssetRecipient.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.getAssetRecipient.ImplicitArgs": {
                "full_name": "__main__.getAssetRecipient.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.getAssetRecipient.Return": {
                "cairo_type": "(assetRecipient: felt)",
                "type": "type_definition"
            },
            "__main__.getAssetRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.getBuyNFTQuote": {
                "decorators": [
                    "view"
                ],
                "pc": 1695,
                "type": "function"
            },
            "__main__.getBuyNFTQuote.Args": {
                "full_name": "__main__.getBuyNFTQuote.Args",
                "members": {
                    "numNFTs": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.getBuyNFTQuote.ImplicitArgs": {
                "full_name": "__main__.getBuyNFTQuote.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.getBuyNFTQuote.Return": {
                "cairo_type": "(newSpotPrice: felt, newDelta: felt, inputAmount: felt, protocolFee: felt)",
                "type": "type_definition"
            },
            "__main__.getBuyNFTQuote.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.getSellNFTQuote": {
                "decorators": [
                    "view"
                ],
                "pc": 1790,
                "type": "function"
            },
            "__main__.getSellNFTQuote.Args": {
                "full_name": "__main__.getSellNFTQuote.Args",
                "members": {
                    "numNFTs": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.getSellNFTQuote.ImplicitArgs": {
                "full_name": "__main__.getSellNFTQuote.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.getSellNFTQuote.Return": {
                "cairo_type": "(newSpotPrice: felt, newDelta: felt, outputAmount: felt, protocolFee: felt)",
                "type": "type_definition"
            },
            "__main__.getSellNFTQuote.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "__main__.get_contract_address": {
                "destination": "starkware.starknet.common.syscalls.get_contract_address",
                "type": "alias"
            },
            "__main__.initializer": {
                "decorators": [
                    "external"
                ],
                "pc": 1242,
                "type": "function"
            },
            "__main__.initializer.Args": {
                "full_name": "__main__.initializer.Args",
                "members": {
                    "assetRecipient": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "bondingCurve": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "delta": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "factory": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "fee": {
                        "cairo_type": "felt",
                        "offset": 8
                    },
                    "nft": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "poolType": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "proxy_admin": {
                        "cairo_type": "felt",
                        "offset": 10
                    },
                    "spotPrice": {
                        "cairo_type": "felt",
                        "offset": 9
                    },
                    "token": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 11,
                "type": "struct"
            },
            "__main__.initializer.ImplicitArgs": {
                "full_name": "__main__.initializer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.initializer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.initializer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.nft": {
                "decorators": [
                    "view"
                ],
                "pc": 1455,
                "type": "function"
            },
            "__main__.nft.Args": {
                "full_name": "__main__.nft.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.nft.ImplicitArgs": {
                "full_name": "__main__.nft.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.nft.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.nft.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.owner": {
                "decorators": [
                    "view"
                ],
                "pc": 1665,
                "type": "function"
            },
            "__main__.owner.Args": {
                "full_name": "__main__.owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.owner.ImplicitArgs": {
                "full_name": "__main__.owner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.owner.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "__main__.owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.poolType": {
                "decorators": [
                    "view"
                ],
                "pc": 1485,
                "type": "function"
            },
            "__main__.poolType.Args": {
                "full_name": "__main__.poolType.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.poolType.ImplicitArgs": {
                "full_name": "__main__.poolType.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.poolType.Return": {
                "cairo_type": "(type: felt)",
                "type": "type_definition"
            },
            "__main__.poolType.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "__main__.spotPrice": {
                "decorators": [
                    "view"
                ],
                "pc": 1545,
                "type": "function"
            },
            "__main__.spotPrice.Args": {
                "full_name": "__main__.spotPrice.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.spotPrice.ImplicitArgs": {
                "full_name": "__main__.spotPrice.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.spotPrice.Return": {
                "cairo_type": "(price: felt)",
                "type": "type_definition"
            },
            "__main__.spotPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.swapNFTsForToken": {
                "decorators": [
                    "external"
                ],
                "pc": 2081,
                "type": "function"
            },
            "__main__.swapNFTsForToken.Args": {
                "full_name": "__main__.swapNFTsForToken.Args",
                "members": {
                    "minExpectedTokenOutput": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nftIds": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 1
                    },
                    "nftIds_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "tokenRecipient": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.swapNFTsForToken.ImplicitArgs": {
                "full_name": "__main__.swapNFTsForToken.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.swapNFTsForToken.Return": {
                "cairo_type": "(outputAmount: felt)",
                "type": "type_definition"
            },
            "__main__.swapNFTsForToken.SIZEOF_LOCALS": {
                "type": "const",
                "value": 4
            },
            "__main__.swapTokenForSpecificNFTs": {
                "decorators": [
                    "external"
                ],
                "pc": 1943,
                "type": "function"
            },
            "__main__.swapTokenForSpecificNFTs.Args": {
                "full_name": "__main__.swapTokenForSpecificNFTs.Args",
                "members": {
                    "maxExpectedTokenInput": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nftIds": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 1
                    },
                    "nftIds_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "nftRecipient": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.swapTokenForSpecificNFTs.ImplicitArgs": {
                "full_name": "__main__.swapTokenForSpecificNFTs.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.swapTokenForSpecificNFTs.Return": {
                "cairo_type": "(inputAmount: felt)",
                "type": "type_definition"
            },
            "__main__.swapTokenForSpecificNFTs.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__main__.token": {
                "decorators": [
                    "view"
                ],
                "pc": 1515,
                "type": "function"
            },
            "__main__.token.Args": {
                "full_name": "__main__.token.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.token.ImplicitArgs": {
                "full_name": "__main__.token.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.token.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.token.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.uint256_lt": {
                "destination": "starkware.cairo.common.uint256.uint256_lt",
                "type": "alias"
            },
            "__main__.withdrawERC721": {
                "decorators": [
                    "external"
                ],
                "pc": 2480,
                "type": "function"
            },
            "__main__.withdrawERC721.Args": {
                "full_name": "__main__.withdrawERC721.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "tokenIds": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 2
                    },
                    "tokenIds_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.withdrawERC721.ImplicitArgs": {
                "full_name": "__main__.withdrawERC721.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.withdrawERC721.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.withdrawERC721.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.withdrawToken": {
                "decorators": [
                    "external"
                ],
                "pc": 2432,
                "type": "function"
            },
            "__main__.withdrawToken.Args": {
                "full_name": "__main__.withdrawToken.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "amount": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.withdrawToken.ImplicitArgs": {
                "full_name": "__main__.withdrawToken.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.withdrawToken.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.withdrawToken.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.MAX_FEE": {
                "decorators": [
                    "view"
                ],
                "pc": 1380,
                "type": "function"
            },
            "__wrappers__.MAX_FEE.Args": {
                "full_name": "__wrappers__.MAX_FEE.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.MAX_FEE.ImplicitArgs": {
                "full_name": "__wrappers__.MAX_FEE.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.MAX_FEE.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.MAX_FEE.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.MAX_FEE.__wrapped_func": {
                "destination": "__main__.MAX_FEE",
                "type": "alias"
            },
            "__wrappers__.MAX_FEE_encode_return": {
                "decorators": [],
                "pc": 1371,
                "type": "function"
            },
            "__wrappers__.MAX_FEE_encode_return.Args": {
                "full_name": "__wrappers__.MAX_FEE_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(fee: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.MAX_FEE_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.MAX_FEE_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.MAX_FEE_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.MAX_FEE_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.MAX_FEE_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.assetRecipient": {
                "decorators": [
                    "view"
                ],
                "pc": 1650,
                "type": "function"
            },
            "__wrappers__.assetRecipient.Args": {
                "full_name": "__wrappers__.assetRecipient.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assetRecipient.ImplicitArgs": {
                "full_name": "__wrappers__.assetRecipient.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assetRecipient.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.assetRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.assetRecipient.__wrapped_func": {
                "destination": "__main__.assetRecipient",
                "type": "alias"
            },
            "__wrappers__.assetRecipient_encode_return": {
                "decorators": [],
                "pc": 1641,
                "type": "function"
            },
            "__wrappers__.assetRecipient_encode_return.Args": {
                "full_name": "__wrappers__.assetRecipient_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(recipient: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.assetRecipient_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.assetRecipient_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assetRecipient_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.assetRecipient_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.assetRecipient_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.bondingCurve": {
                "decorators": [
                    "view"
                ],
                "pc": 1440,
                "type": "function"
            },
            "__wrappers__.bondingCurve.Args": {
                "full_name": "__wrappers__.bondingCurve.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.bondingCurve.ImplicitArgs": {
                "full_name": "__wrappers__.bondingCurve.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.bondingCurve.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.bondingCurve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.bondingCurve.__wrapped_func": {
                "destination": "__main__.bondingCurve",
                "type": "alias"
            },
            "__wrappers__.bondingCurve_encode_return": {
                "decorators": [],
                "pc": 1431,
                "type": "function"
            },
            "__wrappers__.bondingCurve_encode_return.Args": {
                "full_name": "__wrappers__.bondingCurve_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(curve: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.bondingCurve_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.bondingCurve_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.bondingCurve_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.bondingCurve_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.bondingCurve_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.changeAssetRecipient": {
                "decorators": [
                    "external"
                ],
                "pc": 2414,
                "type": "function"
            },
            "__wrappers__.changeAssetRecipient.Args": {
                "full_name": "__wrappers__.changeAssetRecipient.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.changeAssetRecipient.ImplicitArgs": {
                "full_name": "__wrappers__.changeAssetRecipient.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.changeAssetRecipient.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.changeAssetRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.changeAssetRecipient.__wrapped_func": {
                "destination": "__main__.changeAssetRecipient",
                "type": "alias"
            },
            "__wrappers__.changeAssetRecipient_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.changeDelta": {
                "decorators": [
                    "external"
                ],
                "pc": 2306,
                "type": "function"
            },
            "__wrappers__.changeDelta.Args": {
                "full_name": "__wrappers__.changeDelta.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.changeDelta.ImplicitArgs": {
                "full_name": "__wrappers__.changeDelta.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.changeDelta.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.changeDelta.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.changeDelta.__wrapped_func": {
                "destination": "__main__.changeDelta",
                "type": "alias"
            },
            "__wrappers__.changeDelta_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.changeFee": {
                "decorators": [
                    "external"
                ],
                "pc": 2364,
                "type": "function"
            },
            "__wrappers__.changeFee.Args": {
                "full_name": "__wrappers__.changeFee.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.changeFee.ImplicitArgs": {
                "full_name": "__wrappers__.changeFee.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.changeFee.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.changeFee.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.changeFee.__wrapped_func": {
                "destination": "__main__.changeFee",
                "type": "alias"
            },
            "__wrappers__.changeFee_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.changeSpotPrice": {
                "decorators": [
                    "external"
                ],
                "pc": 2252,
                "type": "function"
            },
            "__wrappers__.changeSpotPrice.Args": {
                "full_name": "__wrappers__.changeSpotPrice.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.changeSpotPrice.ImplicitArgs": {
                "full_name": "__wrappers__.changeSpotPrice.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.changeSpotPrice.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.changeSpotPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.changeSpotPrice.__wrapped_func": {
                "destination": "__main__.changeSpotPrice",
                "type": "alias"
            },
            "__wrappers__.changeSpotPrice_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.delta": {
                "decorators": [
                    "view"
                ],
                "pc": 1590,
                "type": "function"
            },
            "__wrappers__.delta.Args": {
                "full_name": "__wrappers__.delta.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.delta.ImplicitArgs": {
                "full_name": "__wrappers__.delta.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.delta.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.delta.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.delta.__wrapped_func": {
                "destination": "__main__.delta",
                "type": "alias"
            },
            "__wrappers__.delta_encode_return": {
                "decorators": [],
                "pc": 1581,
                "type": "function"
            },
            "__wrappers__.delta_encode_return.Args": {
                "full_name": "__wrappers__.delta_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(res: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.delta_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.delta_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.delta_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.delta_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.delta_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.factory": {
                "decorators": [
                    "view"
                ],
                "pc": 1410,
                "type": "function"
            },
            "__wrappers__.factory.Args": {
                "full_name": "__wrappers__.factory.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.factory.ImplicitArgs": {
                "full_name": "__wrappers__.factory.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.factory.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.factory.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.factory.__wrapped_func": {
                "destination": "__main__.factory",
                "type": "alias"
            },
            "__wrappers__.factory_encode_return": {
                "decorators": [],
                "pc": 1401,
                "type": "function"
            },
            "__wrappers__.factory_encode_return.Args": {
                "full_name": "__wrappers__.factory_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(res: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.factory_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.factory_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.factory_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.factory_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.factory_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.fee": {
                "decorators": [
                    "view"
                ],
                "pc": 1620,
                "type": "function"
            },
            "__wrappers__.fee.Args": {
                "full_name": "__wrappers__.fee.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fee.ImplicitArgs": {
                "full_name": "__wrappers__.fee.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fee.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.fee.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.fee.__wrapped_func": {
                "destination": "__main__.fee",
                "type": "alias"
            },
            "__wrappers__.fee_encode_return": {
                "decorators": [],
                "pc": 1611,
                "type": "function"
            },
            "__wrappers__.fee_encode_return.Args": {
                "full_name": "__wrappers__.fee_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(res: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.fee_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.fee_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fee_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.fee_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.fee_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAssetRecipient": {
                "decorators": [
                    "view"
                ],
                "pc": 1928,
                "type": "function"
            },
            "__wrappers__.getAssetRecipient.Args": {
                "full_name": "__wrappers__.getAssetRecipient.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAssetRecipient.ImplicitArgs": {
                "full_name": "__wrappers__.getAssetRecipient.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAssetRecipient.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAssetRecipient.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAssetRecipient.__wrapped_func": {
                "destination": "__main__.getAssetRecipient",
                "type": "alias"
            },
            "__wrappers__.getAssetRecipient_encode_return": {
                "decorators": [],
                "pc": 1919,
                "type": "function"
            },
            "__wrappers__.getAssetRecipient_encode_return.Args": {
                "full_name": "__wrappers__.getAssetRecipient_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(assetRecipient: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAssetRecipient_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAssetRecipient_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAssetRecipient_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAssetRecipient_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAssetRecipient_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getBuyNFTQuote": {
                "decorators": [
                    "view"
                ],
                "pc": 1772,
                "type": "function"
            },
            "__wrappers__.getBuyNFTQuote.Args": {
                "full_name": "__wrappers__.getBuyNFTQuote.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBuyNFTQuote.ImplicitArgs": {
                "full_name": "__wrappers__.getBuyNFTQuote.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBuyNFTQuote.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBuyNFTQuote.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getBuyNFTQuote.__wrapped_func": {
                "destination": "__main__.getBuyNFTQuote",
                "type": "alias"
            },
            "__wrappers__.getBuyNFTQuote_encode_return": {
                "decorators": [],
                "pc": 1760,
                "type": "function"
            },
            "__wrappers__.getBuyNFTQuote_encode_return.Args": {
                "full_name": "__wrappers__.getBuyNFTQuote_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "ret_value": {
                        "cairo_type": "(newSpotPrice: felt, newDelta: felt, inputAmount: felt, protocolFee: felt)",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__wrappers__.getBuyNFTQuote_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getBuyNFTQuote_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBuyNFTQuote_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBuyNFTQuote_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getBuyNFTQuote_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getSellNFTQuote": {
                "decorators": [
                    "view"
                ],
                "pc": 1867,
                "type": "function"
            },
            "__wrappers__.getSellNFTQuote.Args": {
                "full_name": "__wrappers__.getSellNFTQuote.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSellNFTQuote.ImplicitArgs": {
                "full_name": "__wrappers__.getSellNFTQuote.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSellNFTQuote.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getSellNFTQuote.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getSellNFTQuote.__wrapped_func": {
                "destination": "__main__.getSellNFTQuote",
                "type": "alias"
            },
            "__wrappers__.getSellNFTQuote_encode_return": {
                "decorators": [],
                "pc": 1855,
                "type": "function"
            },
            "__wrappers__.getSellNFTQuote_encode_return.Args": {
                "full_name": "__wrappers__.getSellNFTQuote_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "ret_value": {
                        "cairo_type": "(newSpotPrice: felt, newDelta: felt, outputAmount: felt, protocolFee: felt)",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__wrappers__.getSellNFTQuote_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getSellNFTQuote_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSellNFTQuote_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getSellNFTQuote_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getSellNFTQuote_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.initializer": {
                "decorators": [
                    "external"
                ],
                "pc": 1337,
                "type": "function"
            },
            "__wrappers__.initializer.Args": {
                "full_name": "__wrappers__.initializer.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.initializer.ImplicitArgs": {
                "full_name": "__wrappers__.initializer.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.initializer.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.initializer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.initializer.__wrapped_func": {
                "destination": "__main__.initializer",
                "type": "alias"
            },
            "__wrappers__.initializer_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.nft": {
                "decorators": [
                    "view"
                ],
                "pc": 1470,
                "type": "function"
            },
            "__wrappers__.nft.Args": {
                "full_name": "__wrappers__.nft.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.nft.ImplicitArgs": {
                "full_name": "__wrappers__.nft.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.nft.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.nft.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.nft.__wrapped_func": {
                "destination": "__main__.nft",
                "type": "alias"
            },
            "__wrappers__.nft_encode_return": {
                "decorators": [],
                "pc": 1461,
                "type": "function"
            },
            "__wrappers__.nft_encode_return.Args": {
                "full_name": "__wrappers__.nft_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(res: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.nft_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.nft_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.nft_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.nft_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.nft_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.owner": {
                "decorators": [
                    "view"
                ],
                "pc": 1680,
                "type": "function"
            },
            "__wrappers__.owner.Args": {
                "full_name": "__wrappers__.owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.owner.ImplicitArgs": {
                "full_name": "__wrappers__.owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.owner.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.owner.__wrapped_func": {
                "destination": "__main__.owner",
                "type": "alias"
            },
            "__wrappers__.owner_encode_return": {
                "decorators": [],
                "pc": 1671,
                "type": "function"
            },
            "__wrappers__.owner_encode_return.Args": {
                "full_name": "__wrappers__.owner_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(owner: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.owner_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.owner_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.owner_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.owner_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.owner_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.poolType": {
                "decorators": [
                    "view"
                ],
                "pc": 1500,
                "type": "function"
            },
            "__wrappers__.poolType.Args": {
                "full_name": "__wrappers__.poolType.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.poolType.ImplicitArgs": {
                "full_name": "__wrappers__.poolType.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.poolType.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.poolType.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.poolType.__wrapped_func": {
                "destination": "__main__.poolType",
                "type": "alias"
            },
            "__wrappers__.poolType_encode_return": {
                "decorators": [],
                "pc": 1491,
                "type": "function"
            },
            "__wrappers__.poolType_encode_return.Args": {
                "full_name": "__wrappers__.poolType_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(type: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.poolType_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.poolType_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.poolType_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.poolType_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.poolType_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.spotPrice": {
                "decorators": [
                    "view"
                ],
                "pc": 1560,
                "type": "function"
            },
            "__wrappers__.spotPrice.Args": {
                "full_name": "__wrappers__.spotPrice.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.spotPrice.ImplicitArgs": {
                "full_name": "__wrappers__.spotPrice.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.spotPrice.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.spotPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.spotPrice.__wrapped_func": {
                "destination": "__main__.spotPrice",
                "type": "alias"
            },
            "__wrappers__.spotPrice_encode_return": {
                "decorators": [],
                "pc": 1551,
                "type": "function"
            },
            "__wrappers__.spotPrice_encode_return.Args": {
                "full_name": "__wrappers__.spotPrice_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(price: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.spotPrice_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.spotPrice_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.spotPrice_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.spotPrice_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.spotPrice_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.swapNFTsForToken": {
                "decorators": [
                    "external"
                ],
                "pc": 2183,
                "type": "function"
            },
            "__wrappers__.swapNFTsForToken.Args": {
                "full_name": "__wrappers__.swapNFTsForToken.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.swapNFTsForToken.ImplicitArgs": {
                "full_name": "__wrappers__.swapNFTsForToken.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.swapNFTsForToken.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.swapNFTsForToken.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.swapNFTsForToken.__wrapped_func": {
                "destination": "__main__.swapNFTsForToken",
                "type": "alias"
            },
            "__wrappers__.swapNFTsForToken_encode_return": {
                "decorators": [],
                "pc": 2174,
                "type": "function"
            },
            "__wrappers__.swapNFTsForToken_encode_return.Args": {
                "full_name": "__wrappers__.swapNFTsForToken_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(outputAmount: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.swapNFTsForToken_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.swapNFTsForToken_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.swapNFTsForToken_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.swapNFTsForToken_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.swapNFTsForToken_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.swapTokenForSpecificNFTs": {
                "decorators": [
                    "external"
                ],
                "pc": 2048,
                "type": "function"
            },
            "__wrappers__.swapTokenForSpecificNFTs.Args": {
                "full_name": "__wrappers__.swapTokenForSpecificNFTs.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.swapTokenForSpecificNFTs.ImplicitArgs": {
                "full_name": "__wrappers__.swapTokenForSpecificNFTs.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.swapTokenForSpecificNFTs.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.swapTokenForSpecificNFTs.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.swapTokenForSpecificNFTs.__wrapped_func": {
                "destination": "__main__.swapTokenForSpecificNFTs",
                "type": "alias"
            },
            "__wrappers__.swapTokenForSpecificNFTs_encode_return": {
                "decorators": [],
                "pc": 2039,
                "type": "function"
            },
            "__wrappers__.swapTokenForSpecificNFTs_encode_return.Args": {
                "full_name": "__wrappers__.swapTokenForSpecificNFTs_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(inputAmount: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.swapTokenForSpecificNFTs_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.swapTokenForSpecificNFTs_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.swapTokenForSpecificNFTs_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.swapTokenForSpecificNFTs_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.swapTokenForSpecificNFTs_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.token": {
                "decorators": [
                    "view"
                ],
                "pc": 1530,
                "type": "function"
            },
            "__wrappers__.token.Args": {
                "full_name": "__wrappers__.token.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.token.ImplicitArgs": {
                "full_name": "__wrappers__.token.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.token.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.token.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.token.__wrapped_func": {
                "destination": "__main__.token",
                "type": "alias"
            },
            "__wrappers__.token_encode_return": {
                "decorators": [],
                "pc": 1521,
                "type": "function"
            },
            "__wrappers__.token_encode_return.Args": {
                "full_name": "__wrappers__.token_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(res: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.token_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.token_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.token_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.token_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.token_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.withdrawERC721": {
                "decorators": [
                    "external"
                ],
                "pc": 2527,
                "type": "function"
            },
            "__wrappers__.withdrawERC721.Args": {
                "full_name": "__wrappers__.withdrawERC721.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.withdrawERC721.ImplicitArgs": {
                "full_name": "__wrappers__.withdrawERC721.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.withdrawERC721.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.withdrawERC721.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.withdrawERC721.__wrapped_func": {
                "destination": "__main__.withdrawERC721",
                "type": "alias"
            },
            "__wrappers__.withdrawERC721_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.withdrawToken": {
                "decorators": [
                    "external"
                ],
                "pc": 2461,
                "type": "function"
            },
            "__wrappers__.withdrawToken.Args": {
                "full_name": "__wrappers__.withdrawToken.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.withdrawToken.ImplicitArgs": {
                "full_name": "__wrappers__.withdrawToken.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.withdrawToken.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.withdrawToken.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.withdrawToken.__wrapped_func": {
                "destination": "__main__.withdrawToken",
                "type": "alias"
            },
            "__wrappers__.withdrawToken_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.marketplace.utils.reentrancyguard.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.marketplace.utils.reentrancyguard.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard": {
                "type": "namespace"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard.Args": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard.ImplicitArgs": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._end": {
                "decorators": [],
                "pc": 256,
                "type": "function"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._end.Args": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._end.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._end.ImplicitArgs": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._end.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._end.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._end.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._start": {
                "decorators": [],
                "pc": 241,
                "type": "function"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._start.Args": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._start.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._start.ImplicitArgs": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._start.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._start.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard._start.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered": {
                "type": "namespace"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.Args": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.ImplicitArgs": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.addr": {
                "decorators": [],
                "pc": 211,
                "type": "function"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.addr.Args": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.addr.ImplicitArgs": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.read": {
                "decorators": [],
                "pc": 216,
                "type": "function"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.read.Args": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.read.ImplicitArgs": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.write": {
                "decorators": [],
                "pc": 229,
                "type": "function"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.write.Args": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.write.ImplicitArgs": {
                "full_name": "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.marketplace.utils.reentrancyguard.ReentrancyGuard_entered.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.marketplace.utils.reentrancyguard.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable": {
                "type": "namespace"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.Ownable._transfer_ownership": {
                "decorators": [],
                "pc": 347,
                "type": "function"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable._transfer_ownership.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable._transfer_ownership.Args",
                "members": {
                    "new_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable._transfer_ownership.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable._transfer_ownership.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable._transfer_ownership.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable._transfer_ownership.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner": {
                "decorators": [],
                "pc": 326,
                "type": "function"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.assert_only_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.initializer": {
                "decorators": [],
                "pc": 319,
                "type": "function"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.initializer.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable.initializer.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.initializer.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable.initializer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.initializer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.initializer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.owner": {
                "decorators": [],
                "pc": 341,
                "type": "function"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.owner.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable.owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.owner.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable.owner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.owner.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable.owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner": {
                "type": "namespace"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable_owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable_owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.addr": {
                "decorators": [],
                "pc": 289,
                "type": "function"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.addr.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable_owner.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.addr.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable_owner.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.read": {
                "decorators": [],
                "pc": 294,
                "type": "function"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.read.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable_owner.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.read.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable_owner.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.read.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.write": {
                "decorators": [],
                "pc": 307,
                "type": "function"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.write.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable_owner.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.write.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.Ownable_owner.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.Ownable_owner.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred": {
                "type": "namespace"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.SELECTOR": {
                "type": "const",
                "value": 553132481214675521502977957974509639062080100631756862105218886163371506175
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.emit": {
                "decorators": [],
                "pc": 264,
                "type": "function"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.emit.Args": {
                "full_name": "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.emit.Args",
                "members": {
                    "newOwner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousOwner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.emit.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.OwnershipTransferred.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.openzeppelin.access.ownable.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged": {
                "type": "namespace"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.AdminChanged.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.SELECTOR": {
                "type": "const",
                "value": 509549417648223859179470485411643110789099628436608877343164389163677637013
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.emit": {
                "decorators": [],
                "pc": 368,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.emit.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.AdminChanged.emit.Args",
                "members": {
                    "newAdmin": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousAdmin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.AdminChanged.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy": {
                "type": "namespace"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy._set_admin": {
                "decorators": [],
                "pc": 477,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy._set_admin.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy._set_admin.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy._set_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy._set_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy.get_admin": {
                "decorators": [],
                "pc": 471,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.get_admin.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy.get_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.get_admin.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.get_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy.initializer": {
                "decorators": [],
                "pc": 453,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.initializer.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy.initializer.Args",
                "members": {
                    "proxy_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.initializer.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy.initializer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.initializer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy.initializer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin": {
                "type": "namespace"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.addr": {
                "decorators": [],
                "pc": 393,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.addr.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_admin.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.read": {
                "decorators": [],
                "pc": 398,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.read.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_admin.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.read.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.write": {
                "decorators": [],
                "pc": 411,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.write.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_admin.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_admin.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash": {
                "type": "namespace"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized": {
                "type": "namespace"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_initialized.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.addr": {
                "decorators": [],
                "pc": 423,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.addr.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_initialized.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.addr.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_initialized.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.read": {
                "decorators": [],
                "pc": 428,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.read.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_initialized.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.read.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_initialized.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.read.Return": {
                "cairo_type": "(initialized: felt)",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.write": {
                "decorators": [],
                "pc": 441,
                "type": "function"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.write.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_initialized.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.write.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Proxy_initialized.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Proxy_initialized.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Upgraded": {
                "type": "namespace"
            },
            "contracts.openzeppelin.upgrades.library.Upgraded.Args": {
                "full_name": "contracts.openzeppelin.upgrades.library.Upgraded.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Upgraded.ImplicitArgs": {
                "full_name": "contracts.openzeppelin.upgrades.library.Upgraded.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.openzeppelin.upgrades.library.Upgraded.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.openzeppelin.upgrades.library.Upgraded.SELECTOR": {
                "type": "const",
                "value": 1291924484015741933195105472014600539495279993452337828418116470835452386035
            },
            "contracts.openzeppelin.upgrades.library.Upgraded.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.openzeppelin.upgrades.library.Upgraded.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Upgraded.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.Upgraded.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.openzeppelin.upgrades.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 18,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 59,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 59,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 59,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 59,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 8
                        },
                        "pc": 69,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 83,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 95,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt": {
                "decorators": [],
                "pc": 23,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 14,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 0
                        },
                        "pc": 14,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_equal": {
                "decorators": [],
                "pc": 8,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_equal.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_equal.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_equal.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 8,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_equal.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 8,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 0
                        },
                        "pc": 3,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 30,
                "type": "function"
            },
            "starkware.cairo.common.math.split_felt.Args": {
                "full_name": "starkware.cairo.common.math.split_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.MAX_HIGH": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "starkware.cairo.common.math.split_felt.MAX_LOW": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.Return": {
                "cairo_type": "(high: felt, low: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 30,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 30,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 30,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 189,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 156,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_nn.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 156,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
                "pc": 180,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
                "pc": 166,
                "type": "label"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.uint256_lt": {
                "decorators": [],
                "pc": 194,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_lt.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_lt.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_lt.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_lt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract": {
                "decorators": [],
                "pc": 104,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.call_contract.Args": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 104,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 1
                        },
                        "pc": 111,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 146,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 146,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 1
                        },
                        "pc": 153,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 116,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 116,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 1
                        },
                        "pc": 119,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_contract_address": {
                "decorators": [],
                "pc": 123,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_contract_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_contract_address.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_contract_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 123,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 1
                        },
                        "pc": 126,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 130,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 130,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 1
                        },
                        "pc": 134,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 138,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 138,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 1
                        },
                        "pc": 143,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 0
                    },
                    "pc": 3,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 8,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 8,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 14,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 30,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 30,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 30,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 59,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 59,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 59,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 104,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 116,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 123,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 130,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 138,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 146,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 156,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ]
        }
    }
}
