"use strict";(self.webpackChunkjuno_docs=self.webpackChunkjuno_docs||[]).push([[5160],{5218:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=o(4848),s=o(8453);const i={slug:"/config",sidebar_position:3,title:"Example Configuration"},r=void 0,a={id:"example_config",title:"Example Configuration",description:"The Juno binary uses reasonable defaults and can be used without configuration.",source:"@site/versioned_docs/version-0.7.0/example_config.md",sourceDirName:".",slug:"/config",permalink:"/0.7.0/config",draft:!1,unlisted:!1,tags:[],version:"0.7.0",sidebarPosition:3,frontMatter:{slug:"/config",sidebar_position:3,title:"Example Configuration"},sidebar:"main",previous:{title:"Quick Start",permalink:"/0.7.0/"},next:{title:"Database Snapshots",permalink:"/0.7.0/snapshots"}},l={},c=[];function p(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The Juno binary uses reasonable defaults and can be used without configuration.\nFor basic fine-tuning, the ",(0,t.jsx)(n.code,{children:"--db-path"})," and ",(0,t.jsx)(n.code,{children:"--http-port"})," options are usually sufficient."]}),"\n",(0,t.jsxs)(n.p,{children:["All available options are in the YAML file below with their default values.\nProvide the config using the ",(0,t.jsx)(n.code,{children:"--config <filename>"})," option (Juno looks in ",(0,t.jsx)(n.code,{children:"$XDG_CONFIG_HOME"})," by default)."]}),"\n",(0,t.jsxs)(n.p,{children:["Juno can also be configured using command line params by prepending ",(0,t.jsx)(n.code,{children:"--"})," to the option name (e.g., ",(0,t.jsx)(n.code,{children:"--log-level info"}),").\nCommand line params override values in the configuration file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# Enable colored logs\ncolour: true\n\n# Path to the database.\n# Juno uses `$XDG_DATA_HOME/juno` by default, which is usually something like the value below on Linux.\ndb-path: /home/<user>/.local/share/juno\n\n# Websocket endpoint of the Ethereum node used to verify the L2 chain.\n# If using Infura, it looks something like `wss://mainnet.infura.io/ws/v3/your-infura-project-id`\neth-node: ""\n\n# Enables the HTTP RPC server.\nhttp: false\n# Interface on which the HTTP RPC server will listen for requests.\nhttp-host: localhost\n# Port on which the HTTP RPC server will listen for requests.\nhttp-port: 6060\n\n# The options below are similar to the HTTP RPC options above.\nws: false # Websocket RPC server\nws-host: localhost\nws-port: 6061\npprof: false\npprof-host: localhost\npprof-port: 6062\nmetrics: false\nmetrics-host: localhost\nmetrics-port: 9090\ngrpc: false\ngrpc-host: localhost\ngrpc-port: 6064\n\n# Options: debug, info, warn, error\nlog-level: info\n\n# Options: mainnet, goerli, goerli2, integration\nnetwork: mainnet\n\n# How often to fetch the pending block when synced to the head of the chain.\n# Provide a duration like 5s (five seconds) or 10m (10 minutes).\n# Disabled by default.\npending-poll-interval: 0s\n\n# Experimental p2p options; there is currently no standardized Starknet p2p testnet.\np2p: false # Enable the p2p server\np2p-addr: "" # Source address\np2p-boot-peers: "" # Boot nodes\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var t=o(6540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);