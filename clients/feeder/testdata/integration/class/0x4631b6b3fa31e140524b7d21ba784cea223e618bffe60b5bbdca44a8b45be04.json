{
  "program": {
    "attributes": [],
    "debug_info": null,
    "compiler_version": "0.11.0",
    "main_scope": "__main__",
    "hints": {
      "0": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.alloc",
            "starkware.cairo.common.alloc.alloc"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 0
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "12": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 2
            },
            "reference_ids": {
              "starkware.cairo.common.memcpy.memcpy.len": 0
            }
          },
          "code": "vm_enter_scope({'n': ids.len})"
        }
      ],
      "20": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 5,
              "group": 2
            },
            "reference_ids": {
              "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
            }
          },
          "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0"
        }
      ],
      "23": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 6,
              "group": 2
            },
            "reference_ids": {}
          },
          "code": "vm_exit_scope()"
        }
      ],
      "32": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.call_contract"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 4
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 2
            }
          },
          "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "44": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.library_call"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 5
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.library_call.syscall_ptr": 3
            }
          },
          "code": "syscall_handler.library_call(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "56": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.library_call_l1_handler"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 6
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.library_call_l1_handler.syscall_ptr": 4
            }
          },
          "code": "syscall_handler.library_call_l1_handler(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "69": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.deploy"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 7
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.deploy.syscall_ptr": 5
            }
          },
          "code": "syscall_handler.deploy(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "76": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_caller_address"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 8
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 6
            }
          },
          "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "83": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_sequencer_address"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 9
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_sequencer_address.syscall_ptr": 7
            }
          },
          "code": "syscall_handler.get_sequencer_address(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "90": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_block_number"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 10
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_block_number.syscall_ptr": 8
            }
          },
          "code": "syscall_handler.get_block_number(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "97": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_contract_address"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 11
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": 9
            }
          },
          "code": "syscall_handler.get_contract_address(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "104": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_block_timestamp"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 12
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr": 10
            }
          },
          "code": "syscall_handler.get_block_timestamp(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "111": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_tx_signature"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 13
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_tx_signature.syscall_ptr": 11
            }
          },
          "code": "syscall_handler.get_tx_signature(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "120": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_read"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 14
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 12
            }
          },
          "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "129": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_write"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 15
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 13
            }
          },
          "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "139": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.emit_event"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 16
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 14
            }
          },
          "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "145": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_tx_info"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 17
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr": 15
            }
          },
          "code": "syscall_handler.get_tx_info(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "153": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.replace_class"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 18
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.replace_class.syscall_ptr": 16
            }
          },
          "code": "syscall_handler.replace_class(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "156": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_not_zero"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 19
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_not_zero.value": 17
            }
          },
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'"
        }
      ],
      "161": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_nn"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 20
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_nn.a": 18
            }
          },
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'"
        }
      ],
      "179": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_250_bit"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 23
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_250_bit.high": 21,
              "starkware.cairo.common.math.assert_250_bit.low": 20,
              "starkware.cairo.common.math.assert_250_bit.value": 19
            }
          },
          "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)"
        }
      ],
      "194": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 24
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 22,
              "starkware.starknet.common.storage.normalize_address.is_small": 23
            }
          },
          "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0"
        }
      ],
      "212": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 2,
              "group": 24
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 22,
              "starkware.starknet.common.storage.normalize_address.is_250": 24
            }
          },
          "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0"
        }
      ],
      "306": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.ec",
            "starkware.cairo.common.ec.ec_op"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 2,
              "group": 29
            },
            "reference_ids": {
              "starkware.cairo.common.ec.ec_op.m": 26,
              "starkware.cairo.common.ec.ec_op.p": 25,
              "starkware.cairo.common.ec.ec_op.q": 27,
              "starkware.cairo.common.ec.ec_op.s": 28
            }
          },
          "code": "from starkware.crypto.signature.signature import ALPHA, BETA, FIELD_PRIME\nfrom starkware.python.math_utils import random_ec_point\nfrom starkware.python.utils import to_bytes\n\n# Define a seed for random_ec_point that's dependent on all the input, so that:\n#   (1) The added point s is deterministic.\n#   (2) It's hard to choose inputs for which the builtin will fail.\nseed = b\"\".join(map(to_bytes, [ids.p.x, ids.p.y, ids.m, ids.q.x, ids.q.y]))\nids.s.x, ids.s.y = random_ec_point(FIELD_PRIME, ALPHA, BETA, seed)"
        }
      ],
      "335": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.messages",
            "starkware.starknet.common.messages.send_message_to_l1"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 32
            },
            "reference_ids": {
              "starkware.starknet.common.messages.send_message_to_l1.syscall_ptr": 29
            }
          },
          "code": "syscall_handler.send_message_to_l1(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "345": [
        {
          "accessible_scopes": [
            "starkware.starknet.core.test_contract.deprecated_syscalls",
            "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 1,
              "group": 33
            },
            "reference_ids": {
              "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.syscall_ptr": 30
            }
          },
          "code": "syscall_handler.delegate_call(segments=segments, syscall_ptr=ids.syscall_ptr)"
        }
      ],
      "605": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.advance_counter"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 152,
              "group": 47
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "634": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.constructor"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 17,
              "group": 49
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "683": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.xor_counters"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 161,
              "group": 51
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "697": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.foo_encode_return"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 53
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "771": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_ec_op"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 60
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "843": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.call_xor_counters"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 35,
              "group": 64
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "886": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.add_signature_to_counters"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 153,
              "group": 66
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "911": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.set_value"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 13,
              "group": 68
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "927": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.get_value_encode_return"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 70
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "980": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.entry_point"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 26,
              "group": 73
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1011": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_builtins_encode_return"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 75
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1059": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.send_message"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 17,
              "group": 78
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1102": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_emit_event"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 26,
              "group": 80
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1178": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_high_level_event"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 86
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1214": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_call_contract"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 24,
              "group": 88
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1237": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_deploy_encode_return"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 90
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1293": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_deploy_and_call_encode_return"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 93
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1366": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.deposit"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 161,
              "group": 96
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1390": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_get_caller_address"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 12,
              "group": 98
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1414": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_get_sequencer_address"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 12,
              "group": 100
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1438": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_get_block_timestamp"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 12,
              "group": 102
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1462": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_get_contract_address"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 12,
              "group": 104
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1486": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_get_block_number"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 12,
              "group": 106
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1536": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_call_storage_consistency"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 82,
              "group": 108
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1588": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_re_entrance"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 82,
              "group": 110
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1629": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.add_value"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 53,
              "group": 112
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1672": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.recursive_add_value"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 116
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1701": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.increase_value"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 19,
              "group": 118
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1745": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_call_with_array"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 122
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1796": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_call_with_struct_array"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 0,
              "group": 126
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1847": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_library_call_syntactic_sugar"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 58,
              "group": 128
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1905": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_get_tx_info"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 41,
              "group": 130
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "1929": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_tx_version"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 12,
              "group": 132
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "2053": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_library_call_l1_handler"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 29,
              "group": 138
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "2084": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_count_actual_storage_changes"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 18,
              "group": 140
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "2132": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.test_replace_class"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 72,
              "group": 142
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ],
      "2155": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.execute_replace_class"
          ],
          "flow_tracking_data": {
            "ap_tracking": {
              "offset": 11,
              "group": 144
            },
            "reference_ids": {}
          },
          "code": "memory[ap] = segments.add()"
        }
      ]
    },
    "identifiers": {
      "__main__.BitwiseBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "type": "alias"
      },
      "__main__.EcOpBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
        "type": "alias"
      },
      "__main__.EcPoint": {
        "destination": "starkware.cairo.common.ec_point.EcPoint",
        "type": "alias"
      },
      "__main__.FALSE": {
        "destination": "starkware.cairo.common.bool.FALSE",
        "type": "alias"
      },
      "__main__.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__.IndexAndValues": {
        "size": 3,
        "full_name": "__main__.IndexAndValues",
        "members": {
          "index": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "values": {
            "offset": 1,
            "cairo_type": "(x: felt, y: felt)"
          }
        },
        "type": "struct"
      },
      "__main__.MyContract": {
        "type": "namespace"
      },
      "__main__.MyContract.Args": {
        "size": 0,
        "full_name": "__main__.MyContract.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.MyContract.FOO_SELECTOR": {
        "value": 7.661517703953639e+74,
        "type": "const"
      },
      "__main__.MyContract.ImplicitArgs": {
        "size": 0,
        "full_name": "__main__.MyContract.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__main__.MyContract.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.MyContract.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.MyContract.XOR_COUNTERS_SELECTOR": {
        "value": 2.110467368733643e+74,
        "type": "const"
      },
      "__main__.MyContract.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "__main__.MyContract.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "__main__.MyContract.foo": {
        "pc": 803,
        "decorators": [],
        "type": "function"
      },
      "__main__.MyContract.foo.Args": {
        "size": 1,
        "full_name": "__main__.MyContract.foo.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.MyContract.foo.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.MyContract.foo.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.MyContract.foo.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__.MyContract.foo.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "__main__.MyContract.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "__main__.MyContract.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__main__.MyContract.xor_counters": {
        "pc": 782,
        "decorators": [],
        "type": "function"
      },
      "__main__.MyContract.xor_counters.Args": {
        "size": 4,
        "full_name": "__main__.MyContract.xor_counters.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "index_and_x": {
            "offset": 1,
            "cairo_type": "__main__.IndexAndValues"
          }
        },
        "type": "struct"
      },
      "__main__.MyContract.xor_counters.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.MyContract.xor_counters.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.MyContract.xor_counters.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.MyContract.xor_counters.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "__main__.StorageCell": {
        "destination": "starkware.starknet.core.test_contract.test_contract_interface.StorageCell",
        "type": "alias"
      },
      "__main__.TRANSACTION_VERSION": {
        "destination": "starkware.starknet.core.os.constants.TRANSACTION_VERSION",
        "type": "alias"
      },
      "__main__.TestContract": {
        "destination": "starkware.starknet.core.test_contract.test_contract_interface.TestContract",
        "type": "alias"
      },
      "__main__.TxInfo": {
        "destination": "starkware.starknet.common.syscalls.TxInfo",
        "type": "alias"
      },
      "__main__.add_signature_to_counters": {
        "pc": 854,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.add_signature_to_counters.Args": {
        "size": 1,
        "full_name": "__main__.add_signature_to_counters.Args",
        "members": {
          "index": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.add_signature_to_counters.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.add_signature_to_counters.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "syscall_ptr": {
            "offset": 2,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.add_signature_to_counters.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.add_signature_to_counters.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.add_value": {
        "pc": 1599,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.add_value.Args": {
        "size": 1,
        "full_name": "__main__.add_value.Args",
        "members": {
          "value": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.add_value.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.add_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.add_value.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.add_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.advance_counter": {
        "pc": 567,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.advance_counter.Args": {
        "size": 3,
        "full_name": "__main__.advance_counter.Args",
        "members": {
          "index": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "diffs_len": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "diffs": {
            "offset": 2,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.advance_counter.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.advance_counter.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.advance_counter.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.advance_counter.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "__main__.assert_nn_le": {
        "destination": "starkware.cairo.common.math.assert_nn_le",
        "type": "alias"
      },
      "__main__.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "__main__.bitwise_xor": {
        "destination": "starkware.cairo.common.bitwise.bitwise_xor",
        "type": "alias"
      },
      "__main__.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "__main__.call_xor_counters": {
        "pc": 823,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.call_xor_counters.Args": {
        "size": 4,
        "full_name": "__main__.call_xor_counters.Args",
        "members": {
          "address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "index_and_x": {
            "offset": 1,
            "cairo_type": "__main__.IndexAndValues"
          }
        },
        "type": "struct"
      },
      "__main__.call_xor_counters.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.call_xor_counters.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.call_xor_counters.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.call_xor_counters.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.constructor": {
        "pc": 616,
        "decorators": [
          "constructor"
        ],
        "type": "function"
      },
      "__main__.constructor.Args": {
        "size": 2,
        "full_name": "__main__.constructor.Args",
        "members": {
          "address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.constructor.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.constructor.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.constructor.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.constructor.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.delegate_call": {
        "destination": "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call",
        "type": "alias"
      },
      "__main__.deploy": {
        "destination": "starkware.starknet.common.syscalls.deploy",
        "type": "alias"
      },
      "__main__.deposit": {
        "pc": 1337,
        "decorators": [
          "l1_handler"
        ],
        "type": "function"
      },
      "__main__.deposit.Args": {
        "size": 2,
        "full_name": "__main__.deposit.Args",
        "members": {
          "from_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "amount": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.deposit.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.deposit.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "pedersen_ptr": {
            "offset": 2,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          }
        },
        "type": "struct"
      },
      "__main__.deposit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.deposit.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.ec_op": {
        "destination": "starkware.cairo.common.ec.ec_op",
        "type": "alias"
      },
      "__main__.ec_point": {
        "type": "namespace"
      },
      "__main__.ec_point.Args": {
        "size": 0,
        "full_name": "__main__.ec_point.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.ec_point.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__.ec_point.ImplicitArgs": {
        "size": 0,
        "full_name": "__main__.ec_point.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__main__.ec_point.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.ec_point.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.ec_point.addr": {
        "pc": 720,
        "decorators": [],
        "type": "function"
      },
      "__main__.ec_point.addr.Args": {
        "size": 0,
        "full_name": "__main__.ec_point.addr.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.ec_point.addr.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.ec_point.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.ec_point.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__.ec_point.addr.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.ec_point.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "__main__.ec_point.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "__main__.ec_point.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "__main__.ec_point.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "__main__.ec_point.write": {
        "pc": 725,
        "decorators": [],
        "type": "function"
      },
      "__main__.ec_point.write.Args": {
        "size": 2,
        "full_name": "__main__.ec_point.write.Args",
        "members": {
          "value": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          }
        },
        "type": "struct"
      },
      "__main__.ec_point.write.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.ec_point.write.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.ec_point.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.ec_point.write.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "__main__.entry_point": {
        "pc": 954,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.entry_point.Args": {
        "size": 0,
        "full_name": "__main__.entry_point.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.entry_point.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.entry_point.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          }
        },
        "type": "struct"
      },
      "__main__.entry_point.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.entry_point.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.entry_point.address": {
        "value": 15,
        "type": "const"
      },
      "__main__.execute_replace_class": {
        "pc": 2143,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.execute_replace_class.Args": {
        "size": 1,
        "full_name": "__main__.execute_replace_class.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.execute_replace_class.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.execute_replace_class.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.execute_replace_class.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.execute_replace_class.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.foo": {
        "pc": 694,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.foo.Args": {
        "size": 0,
        "full_name": "__main__.foo.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.foo.ImplicitArgs": {
        "size": 0,
        "full_name": "__main__.foo.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__main__.foo.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__.foo.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.get_block_number": {
        "destination": "starkware.starknet.common.syscalls.get_block_number",
        "type": "alias"
      },
      "__main__.get_block_timestamp": {
        "destination": "starkware.starknet.common.syscalls.get_block_timestamp",
        "type": "alias"
      },
      "__main__.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "__main__.get_contract_address": {
        "destination": "starkware.starknet.common.syscalls.get_contract_address",
        "type": "alias"
      },
      "__main__.get_fp_and_pc": {
        "destination": "starkware.cairo.common.registers.get_fp_and_pc",
        "type": "alias"
      },
      "__main__.get_sequencer_address": {
        "destination": "starkware.starknet.common.syscalls.get_sequencer_address",
        "type": "alias"
      },
      "__main__.get_tx_info": {
        "destination": "starkware.starknet.common.syscalls.get_tx_info",
        "type": "alias"
      },
      "__main__.get_tx_signature": {
        "destination": "starkware.starknet.common.syscalls.get_tx_signature",
        "type": "alias"
      },
      "__main__.get_value": {
        "pc": 922,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.get_value.Args": {
        "size": 1,
        "full_name": "__main__.get_value.Args",
        "members": {
          "address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.get_value.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.get_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.get_value.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__.get_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "__main__.impl_address": {
        "type": "namespace"
      },
      "__main__.impl_address.Args": {
        "size": 0,
        "full_name": "__main__.impl_address.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.impl_address.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__.impl_address.ImplicitArgs": {
        "size": 0,
        "full_name": "__main__.impl_address.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__main__.impl_address.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.impl_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.impl_address.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "__main__.impl_address.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "__main__.impl_address.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "__main__.impl_address.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "__main__.increase_value": {
        "pc": 1683,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.increase_value.Args": {
        "size": 1,
        "full_name": "__main__.increase_value.Args",
        "members": {
          "address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.increase_value.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.increase_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.increase_value.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.increase_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "__main__.library_call_l1_handler": {
        "destination": "starkware.starknet.common.syscalls.library_call_l1_handler",
        "type": "alias"
      },
      "__main__.log_storage_cells": {
        "type": "namespace"
      },
      "__main__.log_storage_cells.Args": {
        "size": 0,
        "full_name": "__main__.log_storage_cells.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.log_storage_cells.ImplicitArgs": {
        "size": 0,
        "full_name": "__main__.log_storage_cells.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__main__.log_storage_cells.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.log_storage_cells.SELECTOR": {
        "value": 3.116961909088384e+74,
        "type": "const"
      },
      "__main__.log_storage_cells.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.log_storage_cells.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "__main__.log_storage_cells.emit": {
        "pc": 1115,
        "decorators": [],
        "type": "function"
      },
      "__main__.log_storage_cells.emit.Args": {
        "size": 2,
        "full_name": "__main__.log_storage_cells.emit.Args",
        "members": {
          "storage_cells_len": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "storage_cells": {
            "offset": 1,
            "cairo_type": "starkware.starknet.core.test_contract.test_contract_interface.StorageCell*"
          }
        },
        "type": "struct"
      },
      "__main__.log_storage_cells.emit.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.log_storage_cells.emit.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.log_storage_cells.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.log_storage_cells.emit.SIZEOF_LOCALS": {
        "value": 4,
        "type": "const"
      },
      "__main__.log_storage_cells.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "__main__.log_storage_cells.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__main__.recursive_add_value": {
        "pc": 1640,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.recursive_add_value.Args": {
        "size": 2,
        "full_name": "__main__.recursive_add_value.Args",
        "members": {
          "self_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.recursive_add_value.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.recursive_add_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.recursive_add_value.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.recursive_add_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.replace_class": {
        "destination": "starkware.starknet.common.syscalls.replace_class",
        "type": "alias"
      },
      "__main__.send_message": {
        "pc": 1036,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.send_message.Args": {
        "size": 1,
        "full_name": "__main__.send_message.Args",
        "members": {
          "to_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.send_message.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.send_message.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.send_message.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.send_message.SIZEOF_LOCALS": {
        "value": 2,
        "type": "const"
      },
      "__main__.send_message_to_l1": {
        "destination": "starkware.starknet.common.messages.send_message_to_l1",
        "type": "alias"
      },
      "__main__.set_value": {
        "pc": 897,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.set_value.Args": {
        "size": 2,
        "full_name": "__main__.set_value.Args",
        "members": {
          "address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.set_value.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.set_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.set_value.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.set_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "__main__.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "__main__.test_builtins": {
        "pc": 991,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_builtins.Args": {
        "size": 0,
        "full_name": "__main__.test_builtins.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.test_builtins.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_builtins.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_builtins.Return": {
        "cairo_type": "(result: felt)",
        "type": "type_definition"
      },
      "__main__.test_builtins.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_call_contract": {
        "pc": 1189,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_call_contract.Args": {
        "size": 4,
        "full_name": "__main__.test_call_contract.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "function_selector": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "calldata_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_call_contract.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_call_contract.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_call_contract.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_call_contract.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_call_storage_consistency": {
        "pc": 1497,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_call_storage_consistency.Args": {
        "size": 2,
        "full_name": "__main__.test_call_storage_consistency.Args",
        "members": {
          "other_contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "address": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_call_storage_consistency.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_call_storage_consistency.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_call_storage_consistency.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_call_storage_consistency.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_call_with_array": {
        "pc": 1712,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_call_with_array.Args": {
        "size": 3,
        "full_name": "__main__.test_call_with_array.Args",
        "members": {
          "self_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "arr_len": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "arr": {
            "offset": 2,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_call_with_array.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_call_with_array.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_call_with_array.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_call_with_array.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_call_with_struct_array": {
        "pc": 1756,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_call_with_struct_array.Args": {
        "size": 3,
        "full_name": "__main__.test_call_with_struct_array.Args",
        "members": {
          "self_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "arr_len": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "arr": {
            "offset": 2,
            "cairo_type": "starkware.starknet.core.test_contract.test_contract_interface.StorageCell*"
          }
        },
        "type": "struct"
      },
      "__main__.test_call_with_struct_array.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_call_with_struct_array.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_call_with_struct_array.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_call_with_struct_array.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_count_actual_storage_changes": {
        "pc": 2064,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_count_actual_storage_changes.Args": {
        "size": 0,
        "full_name": "__main__.test_count_actual_storage_changes.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.test_count_actual_storage_changes.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_count_actual_storage_changes.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          }
        },
        "type": "struct"
      },
      "__main__.test_count_actual_storage_changes.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_count_actual_storage_changes.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_count_actual_storage_changes.address": {
        "value": 15,
        "type": "const"
      },
      "__main__.test_delegate_call": {
        "pc": 1940,
        "decorators": [
          "external",
          "raw_output"
        ],
        "type": "function"
      },
      "__main__.test_delegate_call.Args": {
        "size": 4,
        "full_name": "__main__.test_delegate_call.Args",
        "members": {
          "code_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "selector": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "calldata_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_delegate_call.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.test_delegate_call.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_delegate_call.Return": {
        "cairo_type": "(retdata_size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__main__.test_delegate_call.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_deploy": {
        "pc": 1227,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_deploy.Args": {
        "size": 4,
        "full_name": "__main__.test_deploy.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "contract_address_salt": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "constructor_calldata_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "constructor_calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_deploy.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_deploy.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_deploy.Return": {
        "cairo_type": "(contract_address: felt)",
        "type": "type_definition"
      },
      "__main__.test_deploy.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_deploy_and_call": {
        "pc": 1276,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_deploy_and_call.Args": {
        "size": 7,
        "full_name": "__main__.test_deploy_and_call.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "contract_address_salt": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "deploy_from_zero": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "constructor_calldata_len": {
            "offset": 3,
            "cairo_type": "felt"
          },
          "constructor_calldata": {
            "offset": 4,
            "cairo_type": "felt*"
          },
          "key": {
            "offset": 5,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 6,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_deploy_and_call.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_deploy_and_call.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_deploy_and_call.Return": {
        "cairo_type": "(contract_address: felt)",
        "type": "type_definition"
      },
      "__main__.test_deploy_and_call.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_ec_op": {
        "pc": 742,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_ec_op.Args": {
        "size": 0,
        "full_name": "__main__.test_ec_op.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.test_ec_op.ImplicitArgs": {
        "size": 4,
        "full_name": "__main__.test_ec_op.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "ec_op_ptr": {
            "offset": 3,
            "cairo_type": "starkware.cairo.common.cairo_builtins.EcOpBuiltin*"
          }
        },
        "type": "struct"
      },
      "__main__.test_ec_op.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_ec_op.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_emit_event": {
        "pc": 1070,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_emit_event.Args": {
        "size": 4,
        "full_name": "__main__.test_emit_event.Args",
        "members": {
          "keys_len": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "keys": {
            "offset": 1,
            "cairo_type": "felt*"
          },
          "data_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "data": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_emit_event.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_emit_event.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_emit_event.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_emit_event.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_get_block_number": {
        "pc": 1473,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_get_block_number.Args": {
        "size": 1,
        "full_name": "__main__.test_get_block_number.Args",
        "members": {
          "expected_block_number": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_block_number.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_get_block_number.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_block_number.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_get_block_number.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_get_block_timestamp": {
        "pc": 1425,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_get_block_timestamp.Args": {
        "size": 1,
        "full_name": "__main__.test_get_block_timestamp.Args",
        "members": {
          "expected_timestamp": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_block_timestamp.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_get_block_timestamp.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_block_timestamp.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_get_block_timestamp.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_get_caller_address": {
        "pc": 1377,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_get_caller_address.Args": {
        "size": 1,
        "full_name": "__main__.test_get_caller_address.Args",
        "members": {
          "expected_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_caller_address.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_get_caller_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_caller_address.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_get_caller_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_get_contract_address": {
        "pc": 1449,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_get_contract_address.Args": {
        "size": 1,
        "full_name": "__main__.test_get_contract_address.Args",
        "members": {
          "expected_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_contract_address.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_get_contract_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_contract_address.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_get_contract_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_get_sequencer_address": {
        "pc": 1401,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_get_sequencer_address.Args": {
        "size": 1,
        "full_name": "__main__.test_get_sequencer_address.Args",
        "members": {
          "expected_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_sequencer_address.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_get_sequencer_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_sequencer_address.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_get_sequencer_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_get_tx_info": {
        "pc": 1858,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_get_tx_info.Args": {
        "size": 1,
        "full_name": "__main__.test_get_tx_info.Args",
        "members": {
          "expected_account_contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_tx_info.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_get_tx_info.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_get_tx_info.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_get_tx_info.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_high_level_event": {
        "pc": 1152,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_high_level_event.Args": {
        "size": 2,
        "full_name": "__main__.test_high_level_event.Args",
        "members": {
          "storage_cells_len": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "storage_cells": {
            "offset": 1,
            "cairo_type": "starkware.starknet.core.test_contract.test_contract_interface.StorageCell*"
          }
        },
        "type": "struct"
      },
      "__main__.test_high_level_event.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_high_level_event.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_high_level_event.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_high_level_event.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_library_call": {
        "pc": 1981,
        "decorators": [
          "external",
          "raw_output"
        ],
        "type": "function"
      },
      "__main__.test_library_call.Args": {
        "size": 4,
        "full_name": "__main__.test_library_call.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "selector": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "calldata_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_library_call.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.test_library_call.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_library_call.Return": {
        "cairo_type": "(retdata_size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__main__.test_library_call.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_library_call_l1_handler": {
        "pc": 2022,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_library_call_l1_handler.Args": {
        "size": 4,
        "full_name": "__main__.test_library_call_l1_handler.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "selector": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "calldata_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_library_call_l1_handler.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.test_library_call_l1_handler.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_library_call_l1_handler.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_library_call_l1_handler.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_library_call_syntactic_sugar": {
        "pc": 1807,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_library_call_syntactic_sugar.Args": {
        "size": 1,
        "full_name": "__main__.test_library_call_syntactic_sugar.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_library_call_syntactic_sugar.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_library_call_syntactic_sugar.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_library_call_syntactic_sugar.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_library_call_syntactic_sugar.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_re_entrance": {
        "pc": 1547,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_re_entrance.Args": {
        "size": 2,
        "full_name": "__main__.test_re_entrance.Args",
        "members": {
          "other_contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "depth": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_re_entrance.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.test_re_entrance.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_re_entrance.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_re_entrance.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_replace_class": {
        "pc": 2095,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_replace_class.Args": {
        "size": 1,
        "full_name": "__main__.test_replace_class.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_replace_class.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.test_replace_class.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_replace_class.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_replace_class.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.test_tx_version": {
        "pc": 1916,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.test_tx_version.Args": {
        "size": 1,
        "full_name": "__main__.test_tx_version.Args",
        "members": {
          "expected_version": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.test_tx_version.ImplicitArgs": {
        "size": 1,
        "full_name": "__main__.test_tx_version.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "__main__.test_tx_version.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.test_tx_version.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.two_counters": {
        "type": "namespace"
      },
      "__main__.two_counters.Args": {
        "size": 0,
        "full_name": "__main__.two_counters.Args",
        "members": {},
        "type": "struct"
      },
      "__main__.two_counters.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__.two_counters.ImplicitArgs": {
        "size": 0,
        "full_name": "__main__.two_counters.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__main__.two_counters.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.two_counters.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.two_counters.addr": {
        "pc": 515,
        "decorators": [],
        "type": "function"
      },
      "__main__.two_counters.addr.Args": {
        "size": 1,
        "full_name": "__main__.two_counters.addr.Args",
        "members": {
          "index": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.two_counters.addr.ImplicitArgs": {
        "size": 2,
        "full_name": "__main__.two_counters.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.two_counters.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__.two_counters.addr.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.two_counters.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "__main__.two_counters.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "__main__.two_counters.read": {
        "pc": 529,
        "decorators": [],
        "type": "function"
      },
      "__main__.two_counters.read.Args": {
        "size": 1,
        "full_name": "__main__.two_counters.read.Args",
        "members": {
          "index": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.two_counters.read.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.two_counters.read.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.two_counters.read.Return": {
        "cairo_type": "(res: (felt, felt))",
        "type": "type_definition"
      },
      "__main__.two_counters.read.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.two_counters.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "__main__.two_counters.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "__main__.two_counters.write": {
        "pc": 549,
        "decorators": [],
        "type": "function"
      },
      "__main__.two_counters.write.Args": {
        "size": 3,
        "full_name": "__main__.two_counters.write.Args",
        "members": {
          "index": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 1,
            "cairo_type": "(felt, felt)"
          }
        },
        "type": "struct"
      },
      "__main__.two_counters.write.ImplicitArgs": {
        "size": 3,
        "full_name": "__main__.two_counters.write.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__main__.two_counters.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.two_counters.write.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__main__.xor_counters": {
        "pc": 645,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__main__.xor_counters.Args": {
        "size": 3,
        "full_name": "__main__.xor_counters.Args",
        "members": {
          "index_and_x": {
            "offset": 0,
            "cairo_type": "__main__.IndexAndValues"
          }
        },
        "type": "struct"
      },
      "__main__.xor_counters.ImplicitArgs": {
        "size": 4,
        "full_name": "__main__.xor_counters.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "pedersen_ptr": {
            "offset": 1,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          },
          "range_check_ptr": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "bitwise_ptr": {
            "offset": 3,
            "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
          }
        },
        "type": "struct"
      },
      "__main__.xor_counters.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.xor_counters.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.add_signature_to_counters": {
        "pc": 877,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.add_signature_to_counters.Args": {
        "size": 0,
        "full_name": "__wrappers__.add_signature_to_counters.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.add_signature_to_counters.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.add_signature_to_counters.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.add_signature_to_counters.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.add_signature_to_counters.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.add_signature_to_counters.__wrapped_func": {
        "destination": "__main__.add_signature_to_counters",
        "type": "alias"
      },
      "__wrappers__.add_signature_to_counters_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.add_value": {
        "pc": 1621,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.add_value.Args": {
        "size": 0,
        "full_name": "__wrappers__.add_value.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.add_value.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.add_value.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.add_value.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.add_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.add_value.__wrapped_func": {
        "destination": "__main__.add_value",
        "type": "alias"
      },
      "__wrappers__.add_value_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.advance_counter": {
        "pc": 586,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.advance_counter.Args": {
        "size": 0,
        "full_name": "__wrappers__.advance_counter.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.advance_counter.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.advance_counter.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.advance_counter.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.advance_counter.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.advance_counter.__wrapped_func": {
        "destination": "__main__.advance_counter",
        "type": "alias"
      },
      "__wrappers__.advance_counter_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.call_xor_counters": {
        "pc": 832,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.call_xor_counters.Args": {
        "size": 0,
        "full_name": "__wrappers__.call_xor_counters.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.call_xor_counters.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.call_xor_counters.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.call_xor_counters.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.call_xor_counters.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.call_xor_counters.__wrapped_func": {
        "destination": "__main__.call_xor_counters",
        "type": "alias"
      },
      "__wrappers__.call_xor_counters_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.constructor": {
        "pc": 624,
        "decorators": [
          "constructor"
        ],
        "type": "function"
      },
      "__wrappers__.constructor.Args": {
        "size": 0,
        "full_name": "__wrappers__.constructor.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.constructor.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.constructor.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.constructor.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.constructor.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.constructor.__wrapped_func": {
        "destination": "__main__.constructor",
        "type": "alias"
      },
      "__wrappers__.constructor_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.deposit": {
        "pc": 1356,
        "decorators": [
          "l1_handler"
        ],
        "type": "function"
      },
      "__wrappers__.deposit.Args": {
        "size": 0,
        "full_name": "__wrappers__.deposit.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.deposit.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.deposit.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.deposit.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.deposit.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.deposit.__wrapped_func": {
        "destination": "__main__.deposit",
        "type": "alias"
      },
      "__wrappers__.deposit_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.entry_point": {
        "pc": 975,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.entry_point.Args": {
        "size": 0,
        "full_name": "__wrappers__.entry_point.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.entry_point.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.entry_point.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.entry_point.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.entry_point.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.entry_point.__wrapped_func": {
        "destination": "__main__.entry_point",
        "type": "alias"
      },
      "__wrappers__.entry_point_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.execute_replace_class": {
        "pc": 2148,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.execute_replace_class.Args": {
        "size": 0,
        "full_name": "__wrappers__.execute_replace_class.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.execute_replace_class.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.execute_replace_class.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.execute_replace_class.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.execute_replace_class.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.execute_replace_class.__wrapped_func": {
        "destination": "__main__.execute_replace_class",
        "type": "alias"
      },
      "__wrappers__.execute_replace_class_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.foo": {
        "pc": 706,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.foo.Args": {
        "size": 0,
        "full_name": "__wrappers__.foo.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.foo.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.foo.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.foo.Return": {
        "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.foo.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.foo.__wrapped_func": {
        "destination": "__main__.foo",
        "type": "alias"
      },
      "__wrappers__.foo_encode_return": {
        "pc": 697,
        "decorators": [],
        "type": "function"
      },
      "__wrappers__.foo_encode_return.Args": {
        "size": 2,
        "full_name": "__wrappers__.foo_encode_return.Args",
        "members": {
          "ret_value": {
            "offset": 0,
            "cairo_type": "(res: felt)"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__wrappers__.foo_encode_return.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.foo_encode_return.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.foo_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.foo_encode_return.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "__wrappers__.foo_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.get_value": {
        "pc": 936,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.get_value.Args": {
        "size": 0,
        "full_name": "__wrappers__.get_value.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.get_value.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.get_value.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.get_value.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.get_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.get_value.__wrapped_func": {
        "destination": "__main__.get_value",
        "type": "alias"
      },
      "__wrappers__.get_value_encode_return": {
        "pc": 927,
        "decorators": [],
        "type": "function"
      },
      "__wrappers__.get_value_encode_return.Args": {
        "size": 2,
        "full_name": "__wrappers__.get_value_encode_return.Args",
        "members": {
          "ret_value": {
            "offset": 0,
            "cairo_type": "(res: felt)"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__wrappers__.get_value_encode_return.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.get_value_encode_return.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.get_value_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.get_value_encode_return.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "__wrappers__.get_value_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.increase_value": {
        "pc": 1694,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.increase_value.Args": {
        "size": 0,
        "full_name": "__wrappers__.increase_value.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.increase_value.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.increase_value.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.increase_value.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.increase_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.increase_value.__wrapped_func": {
        "destination": "__main__.increase_value",
        "type": "alias"
      },
      "__wrappers__.increase_value_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.recursive_add_value": {
        "pc": 1663,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.recursive_add_value.Args": {
        "size": 0,
        "full_name": "__wrappers__.recursive_add_value.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.recursive_add_value.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.recursive_add_value.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.recursive_add_value.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.recursive_add_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.recursive_add_value.__wrapped_func": {
        "destination": "__main__.recursive_add_value",
        "type": "alias"
      },
      "__wrappers__.recursive_add_value_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.send_message": {
        "pc": 1052,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.send_message.Args": {
        "size": 0,
        "full_name": "__wrappers__.send_message.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.send_message.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.send_message.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.send_message.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.send_message.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.send_message.__wrapped_func": {
        "destination": "__main__.send_message",
        "type": "alias"
      },
      "__wrappers__.send_message_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.set_value": {
        "pc": 903,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.set_value.Args": {
        "size": 0,
        "full_name": "__wrappers__.set_value.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.set_value.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.set_value.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.set_value.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.set_value.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.set_value.__wrapped_func": {
        "destination": "__main__.set_value",
        "type": "alias"
      },
      "__wrappers__.set_value_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_builtins": {
        "pc": 1020,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_builtins.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_builtins.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_builtins.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_builtins.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_builtins.Return": {
        "cairo_type": "(syscall_ptr: felt, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_builtins.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_builtins.__wrapped_func": {
        "destination": "__main__.test_builtins",
        "type": "alias"
      },
      "__wrappers__.test_builtins_encode_return": {
        "pc": 1011,
        "decorators": [],
        "type": "function"
      },
      "__wrappers__.test_builtins_encode_return.Args": {
        "size": 2,
        "full_name": "__wrappers__.test_builtins_encode_return.Args",
        "members": {
          "ret_value": {
            "offset": 0,
            "cairo_type": "(result: felt)"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__wrappers__.test_builtins_encode_return.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_builtins_encode_return.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_builtins_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_builtins_encode_return.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "__wrappers__.test_builtins_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_call_contract": {
        "pc": 1198,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_call_contract.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_call_contract.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_call_contract.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_call_contract.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_call_contract.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_call_contract.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_call_contract.__wrapped_func": {
        "destination": "__main__.test_call_contract",
        "type": "alias"
      },
      "__wrappers__.test_call_contract_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_call_storage_consistency": {
        "pc": 1527,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_call_storage_consistency.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_call_storage_consistency.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_call_storage_consistency.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_call_storage_consistency.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_call_storage_consistency.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_call_storage_consistency.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_call_storage_consistency.__wrapped_func": {
        "destination": "__main__.test_call_storage_consistency",
        "type": "alias"
      },
      "__wrappers__.test_call_storage_consistency_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_call_with_array": {
        "pc": 1727,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_call_with_array.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_call_with_array.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_call_with_array.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_call_with_array.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_call_with_array.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_call_with_array.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_call_with_array.__wrapped_func": {
        "destination": "__main__.test_call_with_array",
        "type": "alias"
      },
      "__wrappers__.test_call_with_array_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_call_with_struct_array": {
        "pc": 1776,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_call_with_struct_array.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_call_with_struct_array.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_call_with_struct_array.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_call_with_struct_array.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_call_with_struct_array.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_call_with_struct_array.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_call_with_struct_array.__wrapped_func": {
        "destination": "__main__.test_call_with_struct_array",
        "type": "alias"
      },
      "__wrappers__.test_call_with_struct_array_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_count_actual_storage_changes": {
        "pc": 2079,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_count_actual_storage_changes.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_count_actual_storage_changes.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_count_actual_storage_changes.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_count_actual_storage_changes.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_count_actual_storage_changes.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_count_actual_storage_changes.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_count_actual_storage_changes.__wrapped_func": {
        "destination": "__main__.test_count_actual_storage_changes",
        "type": "alias"
      },
      "__wrappers__.test_count_actual_storage_changes_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_delegate_call": {
        "pc": 1953,
        "decorators": [
          "external",
          "raw_output"
        ],
        "type": "function"
      },
      "__wrappers__.test_delegate_call.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_delegate_call.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_delegate_call.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_delegate_call.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_delegate_call.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_delegate_call.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_delegate_call.__wrapped_func": {
        "destination": "__main__.test_delegate_call",
        "type": "alias"
      },
      "__wrappers__.test_delegate_call_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_deploy": {
        "pc": 1246,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_deploy.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_deploy.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_deploy.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_deploy.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_deploy.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_deploy.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_deploy.__wrapped_func": {
        "destination": "__main__.test_deploy",
        "type": "alias"
      },
      "__wrappers__.test_deploy_and_call": {
        "pc": 1302,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_deploy_and_call.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_deploy_and_call.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_deploy_and_call.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_deploy_and_call.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_deploy_and_call.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_deploy_and_call.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_deploy_and_call.__wrapped_func": {
        "destination": "__main__.test_deploy_and_call",
        "type": "alias"
      },
      "__wrappers__.test_deploy_and_call_encode_return": {
        "pc": 1293,
        "decorators": [],
        "type": "function"
      },
      "__wrappers__.test_deploy_and_call_encode_return.Args": {
        "size": 2,
        "full_name": "__wrappers__.test_deploy_and_call_encode_return.Args",
        "members": {
          "ret_value": {
            "offset": 0,
            "cairo_type": "(contract_address: felt)"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__wrappers__.test_deploy_and_call_encode_return.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_deploy_and_call_encode_return.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_deploy_and_call_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_deploy_and_call_encode_return.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "__wrappers__.test_deploy_and_call_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_deploy_encode_return": {
        "pc": 1237,
        "decorators": [],
        "type": "function"
      },
      "__wrappers__.test_deploy_encode_return.Args": {
        "size": 2,
        "full_name": "__wrappers__.test_deploy_encode_return.Args",
        "members": {
          "ret_value": {
            "offset": 0,
            "cairo_type": "(contract_address: felt)"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "__wrappers__.test_deploy_encode_return.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_deploy_encode_return.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_deploy_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_deploy_encode_return.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "__wrappers__.test_deploy_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_ec_op": {
        "pc": 764,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_ec_op.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_ec_op.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_ec_op.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_ec_op.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_ec_op.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: starkware.cairo.common.cairo_builtins.EcOpBuiltin*, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_ec_op.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_ec_op.__wrapped_func": {
        "destination": "__main__.test_ec_op",
        "type": "alias"
      },
      "__wrappers__.test_ec_op_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_emit_event": {
        "pc": 1078,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_emit_event.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_emit_event.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_emit_event.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_emit_event.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_emit_event.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_emit_event.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_emit_event.__wrapped_func": {
        "destination": "__main__.test_emit_event",
        "type": "alias"
      },
      "__wrappers__.test_emit_event_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_get_block_number": {
        "pc": 1479,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_get_block_number.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_get_block_number.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_block_number.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_get_block_number.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_block_number.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_get_block_number.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_get_block_number.__wrapped_func": {
        "destination": "__main__.test_get_block_number",
        "type": "alias"
      },
      "__wrappers__.test_get_block_number_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_get_block_timestamp": {
        "pc": 1431,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_get_block_timestamp.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_get_block_timestamp.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_block_timestamp.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_get_block_timestamp.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_block_timestamp.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_get_block_timestamp.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_get_block_timestamp.__wrapped_func": {
        "destination": "__main__.test_get_block_timestamp",
        "type": "alias"
      },
      "__wrappers__.test_get_block_timestamp_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_get_caller_address": {
        "pc": 1383,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_get_caller_address.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_get_caller_address.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_caller_address.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_get_caller_address.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_caller_address.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_get_caller_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_get_caller_address.__wrapped_func": {
        "destination": "__main__.test_get_caller_address",
        "type": "alias"
      },
      "__wrappers__.test_get_caller_address_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_get_contract_address": {
        "pc": 1455,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_get_contract_address.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_get_contract_address.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_contract_address.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_get_contract_address.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_contract_address.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_get_contract_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_get_contract_address.__wrapped_func": {
        "destination": "__main__.test_get_contract_address",
        "type": "alias"
      },
      "__wrappers__.test_get_contract_address_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_get_sequencer_address": {
        "pc": 1407,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_get_sequencer_address.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_get_sequencer_address.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_sequencer_address.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_get_sequencer_address.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_sequencer_address.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_get_sequencer_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_get_sequencer_address.__wrapped_func": {
        "destination": "__main__.test_get_sequencer_address",
        "type": "alias"
      },
      "__wrappers__.test_get_sequencer_address_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_get_tx_info": {
        "pc": 1897,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_get_tx_info.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_get_tx_info.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_tx_info.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_get_tx_info.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_get_tx_info.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_get_tx_info.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_get_tx_info.__wrapped_func": {
        "destination": "__main__.test_get_tx_info",
        "type": "alias"
      },
      "__wrappers__.test_get_tx_info_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_high_level_event": {
        "pc": 1159,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_high_level_event.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_high_level_event.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_high_level_event.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_high_level_event.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_high_level_event.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_high_level_event.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_high_level_event.__wrapped_func": {
        "destination": "__main__.test_high_level_event",
        "type": "alias"
      },
      "__wrappers__.test_high_level_event_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_library_call": {
        "pc": 1994,
        "decorators": [
          "external",
          "raw_output"
        ],
        "type": "function"
      },
      "__wrappers__.test_library_call.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_library_call.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_library_call.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_library_call.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_library_call.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_library_call.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_library_call.__wrapped_func": {
        "destination": "__main__.test_library_call",
        "type": "alias"
      },
      "__wrappers__.test_library_call_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_library_call_l1_handler": {
        "pc": 2033,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_library_call_l1_handler.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_library_call_l1_handler.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_library_call_l1_handler.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_library_call_l1_handler.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_library_call_l1_handler.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_library_call_l1_handler.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_library_call_l1_handler.__wrapped_func": {
        "destination": "__main__.test_library_call_l1_handler",
        "type": "alias"
      },
      "__wrappers__.test_library_call_l1_handler_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_library_call_syntactic_sugar": {
        "pc": 1839,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_library_call_syntactic_sugar.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_library_call_syntactic_sugar.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_library_call_syntactic_sugar.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_library_call_syntactic_sugar.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_library_call_syntactic_sugar.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_library_call_syntactic_sugar.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_library_call_syntactic_sugar.__wrapped_func": {
        "destination": "__main__.test_library_call_syntactic_sugar",
        "type": "alias"
      },
      "__wrappers__.test_library_call_syntactic_sugar_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_re_entrance": {
        "pc": 1579,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_re_entrance.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_re_entrance.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_re_entrance.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_re_entrance.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_re_entrance.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_re_entrance.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_re_entrance.__wrapped_func": {
        "destination": "__main__.test_re_entrance",
        "type": "alias"
      },
      "__wrappers__.test_re_entrance_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_replace_class": {
        "pc": 2123,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_replace_class.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_replace_class.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_replace_class.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_replace_class.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_replace_class.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_replace_class.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_replace_class.__wrapped_func": {
        "destination": "__main__.test_replace_class",
        "type": "alias"
      },
      "__wrappers__.test_replace_class_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.test_tx_version": {
        "pc": 1922,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.test_tx_version.Args": {
        "size": 0,
        "full_name": "__wrappers__.test_tx_version.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_tx_version.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.test_tx_version.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.test_tx_version.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.test_tx_version.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.test_tx_version.__wrapped_func": {
        "destination": "__main__.test_tx_version",
        "type": "alias"
      },
      "__wrappers__.test_tx_version_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.xor_counters": {
        "pc": 671,
        "decorators": [
          "external"
        ],
        "type": "function"
      },
      "__wrappers__.xor_counters.Args": {
        "size": 0,
        "full_name": "__wrappers__.xor_counters.Args",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.xor_counters.ImplicitArgs": {
        "size": 0,
        "full_name": "__wrappers__.xor_counters.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "__wrappers__.xor_counters.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, ec_op_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.xor_counters.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "__wrappers__.xor_counters.__wrapped_func": {
        "destination": "__main__.xor_counters",
        "type": "alias"
      },
      "__wrappers__.xor_counters_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "starkware.cairo.common.alloc.alloc": {
        "pc": 0,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.alloc.alloc.Args": {
        "size": 0,
        "full_name": "starkware.cairo.common.alloc.alloc.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
        "size": 0,
        "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.Return": {
        "cairo_type": "(ptr: felt*)",
        "type": "type_definition"
      },
      "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.bitwise.ALL_ONES": {
        "value": -1.0671072950157357e+59,
        "type": "const"
      },
      "starkware.cairo.common.bitwise.BitwiseBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.bitwise.bitwise_xor": {
        "pc": 232,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.bitwise.bitwise_xor.Args": {
        "size": 2,
        "full_name": "starkware.cairo.common.bitwise.bitwise_xor.Args",
        "members": {
          "x": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "y": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.bitwise.bitwise_xor.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.cairo.common.bitwise.bitwise_xor.ImplicitArgs",
        "members": {
          "bitwise_ptr": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.bitwise.bitwise_xor.Return": {
        "cairo_type": "(x_xor_y: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.bitwise.bitwise_xor.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.bool.FALSE": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.bool.TRUE": {
        "value": 1,
        "type": "const"
      },
      "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
        "size": 5,
        "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "members": {
          "x": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "y": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "x_and_y": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "x_xor_y": {
            "offset": 3,
            "cairo_type": "felt"
          },
          "x_or_y": {
            "offset": 4,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
        "size": 7,
        "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
        "members": {
          "p": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          },
          "q": {
            "offset": 2,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          },
          "m": {
            "offset": 4,
            "cairo_type": "felt"
          },
          "r": {
            "offset": 5,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcPoint": {
        "destination": "starkware.cairo.common.ec_point.EcPoint",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.HashBuiltin": {
        "size": 3,
        "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "members": {
          "x": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "y": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "result": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
        "size": 16,
        "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
        "members": {
          "input": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState"
          },
          "output": {
            "offset": 8,
            "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
        "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
        "size": 6,
        "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
        "members": {
          "input": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState"
          },
          "output": {
            "offset": 3,
            "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
        "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
        "size": 2,
        "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "members": {
          "pub_key": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "message": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.dict_access.DictAccess": {
        "size": 3,
        "full_name": "starkware.cairo.common.dict_access.DictAccess",
        "members": {
          "key": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "prev_value": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "new_value": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.ec.EcOpBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.ec.EcPoint": {
        "destination": "starkware.cairo.common.ec_point.EcPoint",
        "type": "alias"
      },
      "starkware.cairo.common.ec.StarkCurve": {
        "type": "namespace"
      },
      "starkware.cairo.common.ec.StarkCurve.ALPHA": {
        "value": 1,
        "type": "const"
      },
      "starkware.cairo.common.ec.StarkCurve.Args": {
        "size": 0,
        "full_name": "starkware.cairo.common.ec.StarkCurve.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.common.ec.StarkCurve.BETA": {
        "value": -4.76910135076338e+74,
        "type": "const"
      },
      "starkware.cairo.common.ec.StarkCurve.GEN_X": {
        "value": 8.747394510780078e+74,
        "type": "const"
      },
      "starkware.cairo.common.ec.StarkCurve.GEN_Y": {
        "value": 1.5266679207151883e+74,
        "type": "const"
      },
      "starkware.cairo.common.ec.StarkCurve.ImplicitArgs": {
        "size": 0,
        "full_name": "starkware.cairo.common.ec.StarkCurve.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.common.ec.StarkCurve.ORDER": {
        "value": -9.63634636155092e+37,
        "type": "const"
      },
      "starkware.cairo.common.ec.StarkCurve.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.ec.StarkCurve.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.ec.ec_add": {
        "pc": 261,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.ec.ec_add.Args": {
        "size": 4,
        "full_name": "starkware.cairo.common.ec.ec_add.Args",
        "members": {
          "p": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          },
          "q": {
            "offset": 2,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.ec.ec_add.ImplicitArgs": {
        "size": 0,
        "full_name": "starkware.cairo.common.ec.ec_add.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.common.ec.ec_add.Return": {
        "cairo_type": "(r: starkware.cairo.common.ec_point.EcPoint)",
        "type": "type_definition"
      },
      "starkware.cairo.common.ec.ec_add.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.ec.ec_double": {
        "pc": 238,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.ec.ec_double.Args": {
        "size": 2,
        "full_name": "starkware.cairo.common.ec.ec_double.Args",
        "members": {
          "p": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.ec.ec_double.ImplicitArgs": {
        "size": 0,
        "full_name": "starkware.cairo.common.ec.ec_double.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.common.ec.ec_double.Return": {
        "cairo_type": "(r: starkware.cairo.common.ec_point.EcPoint)",
        "type": "type_definition"
      },
      "starkware.cairo.common.ec.ec_double.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.ec.ec_op": {
        "pc": 298,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.ec.ec_op.Args": {
        "size": 5,
        "full_name": "starkware.cairo.common.ec.ec_op.Args",
        "members": {
          "p": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          },
          "m": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "q": {
            "offset": 3,
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.ec.ec_op.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.cairo.common.ec.ec_op.ImplicitArgs",
        "members": {
          "ec_op_ptr": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.cairo_builtins.EcOpBuiltin*"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.ec.ec_op.Return": {
        "cairo_type": "(r: starkware.cairo.common.ec_point.EcPoint)",
        "type": "type_definition"
      },
      "starkware.cairo.common.ec.ec_op.SIZEOF_LOCALS": {
        "value": 2,
        "type": "const"
      },
      "starkware.cairo.common.ec.ec_op.m": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.ec.ec_op.m",
        "references": [
          {
            "pc": 298,
            "ap_tracking_data": {
              "offset": 0,
              "group": 29
            },
            "value": "[cast(fp + (-5), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.ec.ec_op.p": {
        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
        "full_name": "starkware.cairo.common.ec.ec_op.p",
        "references": [
          {
            "pc": 298,
            "ap_tracking_data": {
              "offset": 0,
              "group": 29
            },
            "value": "[cast(fp + (-7), starkware.cairo.common.ec_point.EcPoint*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.ec.ec_op.q": {
        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
        "full_name": "starkware.cairo.common.ec.ec_op.q",
        "references": [
          {
            "pc": 298,
            "ap_tracking_data": {
              "offset": 0,
              "group": 29
            },
            "value": "[cast(fp + (-4), starkware.cairo.common.ec_point.EcPoint*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.ec.ec_op.s": {
        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
        "full_name": "starkware.cairo.common.ec.ec_op.s",
        "references": [
          {
            "pc": 306,
            "ap_tracking_data": {
              "offset": 2,
              "group": 29
            },
            "value": "[cast(fp, starkware.cairo.common.ec_point.EcPoint*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.ec.is_quad_residue": {
        "destination": "starkware.cairo.common.math.is_quad_residue",
        "type": "alias"
      },
      "starkware.cairo.common.ec_point.EcPoint": {
        "size": 2,
        "full_name": "starkware.cairo.common.ec_point.EcPoint",
        "members": {
          "x": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "y": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.hash.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.hash.hash2": {
        "pc": 3,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.hash.hash2.Args": {
        "size": 2,
        "full_name": "starkware.cairo.common.hash.hash2.Args",
        "members": {
          "x": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "y": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
        "members": {
          "hash_ptr": {
            "offset": 0,
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.Return": {
        "cairo_type": "(result: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
        "size": 8,
        "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
        "members": {
          "s0": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "s1": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "s2": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "s3": {
            "offset": 3,
            "cairo_type": "felt"
          },
          "s4": {
            "offset": 4,
            "cairo_type": "felt"
          },
          "s5": {
            "offset": 5,
            "cairo_type": "felt"
          },
          "s6": {
            "offset": 6,
            "cairo_type": "felt"
          },
          "s7": {
            "offset": 7,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.FALSE": {
        "destination": "starkware.cairo.common.bool.FALSE",
        "type": "alias"
      },
      "starkware.cairo.common.math.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "starkware.cairo.common.math.assert_250_bit": {
        "pc": 179,
        "decorators": [
          "known_ap_change"
        ],
        "type": "function"
      },
      "starkware.cairo.common.math.assert_250_bit.Args": {
        "size": 1,
        "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
        "members": {
          "value": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
        "value": 5.316911983139664e+36,
        "type": "const"
      },
      "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_250_bit.SHIFT": {
        "value": 3.402823669209385e+38,
        "type": "const"
      },
      "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
        "value": 1.8092513943330656e+75,
        "type": "const"
      },
      "starkware.cairo.common.math.assert_250_bit.high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.high",
        "references": [
          {
            "pc": 179,
            "ap_tracking_data": {
              "offset": 0,
              "group": 23
            },
            "value": "[cast([fp + (-4)] + 1, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.low",
        "references": [
          {
            "pc": 179,
            "ap_tracking_data": {
              "offset": 0,
              "group": 23
            },
            "value": "[cast([fp + (-4)], felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.value",
        "references": [
          {
            "pc": 179,
            "ap_tracking_data": {
              "offset": 0,
              "group": 23
            },
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le": {
        "pc": 165,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.math.assert_le.Args": {
        "size": 2,
        "full_name": "starkware.cairo.common.math.assert_le.Args",
        "members": {
          "a": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "b": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.math.assert_nn": {
        "pc": 161,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.math.assert_nn.Args": {
        "size": 1,
        "full_name": "starkware.cairo.common.math.assert_nn.Args",
        "members": {
          "a": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.math.assert_nn.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_nn.a",
        "references": [
          {
            "pc": 161,
            "ap_tracking_data": {
              "offset": 0,
              "group": 20
            },
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_nn_le": {
        "pc": 170,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.math.assert_nn_le.Args": {
        "size": 2,
        "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
        "members": {
          "a": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "b": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn_le.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.math.assert_not_zero": {
        "pc": 156,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.math.assert_not_zero.Args": {
        "size": 1,
        "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
        "members": {
          "value": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
        "size": 0,
        "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.math.assert_not_zero.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_zero.value",
        "references": [
          {
            "pc": 156,
            "ap_tracking_data": {
              "offset": 0,
              "group": 19
            },
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy": {
        "pc": 9,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.common.memcpy.memcpy.Args": {
        "size": 3,
        "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
        "members": {
          "dst": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "src": {
            "offset": 1,
            "cairo_type": "felt*"
          },
          "len": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
        "size": 0,
        "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
        "size": 2,
        "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
        "members": {
          "dst": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "src": {
            "offset": 1,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.cairo.common.memcpy.memcpy.continue_copying": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
        "references": [
          {
            "pc": 16,
            "ap_tracking_data": {
              "offset": 3,
              "group": 2
            },
            "value": "[cast(ap, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy.len": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.memcpy.memcpy.len",
        "references": [
          {
            "pc": 9,
            "ap_tracking_data": {
              "offset": 0,
              "group": 2
            },
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy.loop": {
        "pc": 14,
        "type": "label"
      },
      "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
        "size": 3,
        "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
        "members": {
          "s0": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "s1": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "s2": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.cairo.common.registers.get_ap": {
        "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.registers.get_fp_and_pc": {
        "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
        "pc": 24,
        "decorators": [],
        "type": "function"
      },
      "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
        "size": 0,
        "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
        "size": 0,
        "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
        "cairo_type": "(fp_val: felt*, pc_val: felt*)",
        "type": "type_definition"
      },
      "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.messages.SEND_MESSAGE_TO_L1_SELECTOR": {
        "destination": "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR",
        "type": "alias"
      },
      "starkware.starknet.common.messages.SendMessageToL1SysCall": {
        "destination": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
        "type": "alias"
      },
      "starkware.starknet.common.messages.send_message_to_l1": {
        "pc": 329,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.messages.send_message_to_l1.Args": {
        "size": 3,
        "full_name": "starkware.starknet.common.messages.send_message_to_l1.Args",
        "members": {
          "to_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "payload_size": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "payload": {
            "offset": 2,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.messages.send_message_to_l1.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.messages.send_message_to_l1.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.messages.send_message_to_l1.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.messages.send_message_to_l1.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.messages.send_message_to_l1.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.messages.send_message_to_l1.syscall_ptr",
        "references": [
          {
            "pc": 329,
            "ap_tracking_data": {
              "offset": 0,
              "group": 32
            },
            "value": "[cast(fp + (-6), felt**)]"
          },
          {
            "pc": 335,
            "ap_tracking_data": {
              "offset": 1,
              "group": 32
            },
            "value": "cast([fp + (-6)] + 4, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.ADDR_BOUND": {
        "value": -1.0671072950157357e+59,
        "type": "const"
      },
      "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
        "value": 256,
        "type": "const"
      },
      "starkware.starknet.common.storage.assert_250_bit": {
        "destination": "starkware.cairo.common.math.assert_250_bit",
        "type": "alias"
      },
      "starkware.starknet.common.storage.normalize_address": {
        "pc": 192,
        "decorators": [
          "known_ap_change"
        ],
        "type": "function"
      },
      "starkware.starknet.common.storage.normalize_address.Args": {
        "size": 1,
        "full_name": "starkware.starknet.common.storage.normalize_address.Args",
        "members": {
          "addr": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.storage.normalize_address.addr": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.addr",
        "references": [
          {
            "pc": 192,
            "ap_tracking_data": {
              "offset": 0,
              "group": 24
            },
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_250": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
        "references": [
          {
            "pc": 212,
            "ap_tracking_data": {
              "offset": 2,
              "group": 24
            },
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_small": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
        "references": [
          {
            "pc": 194,
            "ap_tracking_data": {
              "offset": 1,
              "group": 24
            },
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
        "value": 2.0853273475220474e+28,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.CallContract": {
        "size": 7,
        "full_name": "starkware.starknet.common.syscalls.CallContract",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest"
          },
          "response": {
            "offset": 5,
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractRequest": {
        "size": 5,
        "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "contract_address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "function_selector": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata_size": {
            "offset": 3,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 4,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractResponse": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
        "members": {
          "retdata_size": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "retdata": {
            "offset": 1,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
        "value": 2.1167594061783206e+28,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
        "value": 2.3274015802972845e+40,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
        "value": 75202468540281,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.Deploy": {
        "size": 9,
        "full_name": "starkware.starknet.common.syscalls.Deploy",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.DeployRequest"
          },
          "response": {
            "offset": 6,
            "cairo_type": "starkware.starknet.common.syscalls.DeployResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployRequest": {
        "size": 6,
        "full_name": "starkware.starknet.common.syscalls.DeployRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "class_hash": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "contract_address_salt": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "constructor_calldata_size": {
            "offset": 3,
            "cairo_type": "felt"
          },
          "constructor_calldata": {
            "offset": 4,
            "cairo_type": "felt*"
          },
          "deploy_from_zero": {
            "offset": 5,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployResponse": {
        "size": 3,
        "full_name": "starkware.starknet.common.syscalls.DeployResponse",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "constructor_retdata_size": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "constructor_retdata": {
            "offset": 2,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DictAccess": {
        "destination": "starkware.cairo.common.dict_access.DictAccess",
        "type": "alias"
      },
      "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
        "value": 1.2807093015503357e+21,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.EmitEvent": {
        "size": 5,
        "full_name": "starkware.starknet.common.syscalls.EmitEvent",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "keys_len": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "keys": {
            "offset": 2,
            "cairo_type": "felt*"
          },
          "data_len": {
            "offset": 3,
            "cairo_type": "felt"
          },
          "data": {
            "offset": 4,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
        "value": 1.448089106835523e+33,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
        "value": 2.4294903732626647e+40,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
        "value": 9.490196778139308e+37,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
        "value": 6.219495360805491e+42,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
        "value": 1.5921908335819916e+45,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
        "value": 1.3170293902041122e+21,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
        "value": 1.44808912865234e+33,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.GetBlockNumber": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest"
          },
          "response": {
            "offset": 1,
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
        "members": {
          "block_number": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestamp": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest"
          },
          "response": {
            "offset": 1,
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
        "members": {
          "block_timestamp": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddress": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest"
          },
          "response": {
            "offset": 1,
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
        "members": {
          "caller_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddress": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest"
          },
          "response": {
            "offset": 1,
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressRequest": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressResponse": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddress": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest"
          },
          "response": {
            "offset": 1,
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
        "members": {
          "sequencer_address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfo": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest"
          },
          "response": {
            "offset": 1,
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoRequest": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoResponse": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
        "members": {
          "tx_info": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.TxInfo*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignature": {
        "size": 3,
        "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest"
          },
          "response": {
            "offset": 1,
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
        "members": {
          "signature_len": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "signature": {
            "offset": 1,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
        "value": 4.362334527541981e+47,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
        "value": 9.2376026794327e+25,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.LibraryCall": {
        "size": 7,
        "full_name": "starkware.starknet.common.syscalls.LibraryCall",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest"
          },
          "response": {
            "offset": 5,
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LibraryCallRequest": {
        "size": 5,
        "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "class_hash": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "function_selector": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata_size": {
            "offset": 3,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 4,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
        "value": 2.5500403217443377e+28,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.ReplaceClass": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "class_hash": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
        "value": 4.3301790876830345e+35,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
        "value": 1.0089069337060175e+26,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
        "value": 2.582801750287405e+28,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
        "size": 4,
        "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "to_address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "payload_size": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "payload_ptr": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageRead": {
        "size": 3,
        "full_name": "starkware.starknet.common.syscalls.StorageRead",
        "members": {
          "request": {
            "offset": 0,
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest"
          },
          "response": {
            "offset": 2,
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadRequest": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "address": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadResponse": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
        "members": {
          "value": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageWrite": {
        "size": 3,
        "full_name": "starkware.starknet.common.syscalls.StorageWrite",
        "members": {
          "selector": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.TxInfo": {
        "size": 8,
        "full_name": "starkware.starknet.common.syscalls.TxInfo",
        "members": {
          "version": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "account_contract_address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "max_fee": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "signature_len": {
            "offset": 3,
            "cairo_type": "felt"
          },
          "signature": {
            "offset": 4,
            "cairo_type": "felt*"
          },
          "transaction_hash": {
            "offset": 5,
            "cairo_type": "felt"
          },
          "chain_id": {
            "offset": 6,
            "cairo_type": "felt"
          },
          "nonce": {
            "offset": 7,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract": {
        "pc": 25,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.call_contract.Args": {
        "size": 4,
        "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "function_selector": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "calldata_size": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract.Return": {
        "cairo_type": "(retdata_size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
        "references": [
          {
            "pc": 25,
            "ap_tracking_data": {
              "offset": 0,
              "group": 4
            },
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "pc": 32,
            "ap_tracking_data": {
              "offset": 1,
              "group": 4
            },
            "value": "cast([fp + (-7)] + 7, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.deploy": {
        "pc": 61,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.deploy.Args": {
        "size": 5,
        "full_name": "starkware.starknet.common.syscalls.deploy.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "contract_address_salt": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "constructor_calldata_size": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "constructor_calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          },
          "deploy_from_zero": {
            "offset": 4,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.deploy.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.deploy.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.deploy.Return": {
        "cairo_type": "(contract_address: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.deploy.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.deploy.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.deploy.syscall_ptr",
        "references": [
          {
            "pc": 61,
            "ap_tracking_data": {
              "offset": 0,
              "group": 7
            },
            "value": "[cast(fp + (-8), felt**)]"
          },
          {
            "pc": 69,
            "ap_tracking_data": {
              "offset": 1,
              "group": 7
            },
            "value": "cast([fp + (-8)] + 9, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.emit_event": {
        "pc": 132,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.emit_event.Args": {
        "size": 4,
        "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
        "members": {
          "keys_len": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "keys": {
            "offset": 1,
            "cairo_type": "felt*"
          },
          "data_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "data": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
        "references": [
          {
            "pc": 132,
            "ap_tracking_data": {
              "offset": 0,
              "group": 16
            },
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "pc": 139,
            "ap_tracking_data": {
              "offset": 1,
              "group": 16
            },
            "value": "cast([fp + (-7)] + 5, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_block_number": {
        "pc": 87,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_block_number.Args": {
        "size": 0,
        "full_name": "starkware.starknet.common.syscalls.get_block_number.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_block_number.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.get_block_number.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_block_number.Return": {
        "cairo_type": "(block_number: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_block_number.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.get_block_number.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_block_number.syscall_ptr",
        "references": [
          {
            "pc": 87,
            "ap_tracking_data": {
              "offset": 0,
              "group": 10
            },
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "pc": 90,
            "ap_tracking_data": {
              "offset": 1,
              "group": 10
            },
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_block_timestamp": {
        "pc": 101,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_block_timestamp.Args": {
        "size": 0,
        "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_block_timestamp.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_block_timestamp.Return": {
        "cairo_type": "(block_timestamp: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_block_timestamp.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr",
        "references": [
          {
            "pc": 101,
            "ap_tracking_data": {
              "offset": 0,
              "group": 12
            },
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "pc": 104,
            "ap_tracking_data": {
              "offset": 1,
              "group": 12
            },
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_caller_address": {
        "pc": 73,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Args": {
        "size": 0,
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Return": {
        "cairo_type": "(caller_address: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
        "references": [
          {
            "pc": 73,
            "ap_tracking_data": {
              "offset": 0,
              "group": 8
            },
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "pc": 76,
            "ap_tracking_data": {
              "offset": 1,
              "group": 8
            },
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_contract_address": {
        "pc": 94,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_contract_address.Args": {
        "size": 0,
        "full_name": "starkware.starknet.common.syscalls.get_contract_address.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_contract_address.Return": {
        "cairo_type": "(contract_address: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_contract_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr",
        "references": [
          {
            "pc": 94,
            "ap_tracking_data": {
              "offset": 0,
              "group": 11
            },
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "pc": 97,
            "ap_tracking_data": {
              "offset": 1,
              "group": 11
            },
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_sequencer_address": {
        "pc": 80,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_sequencer_address.Args": {
        "size": 0,
        "full_name": "starkware.starknet.common.syscalls.get_sequencer_address.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_sequencer_address.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.get_sequencer_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_sequencer_address.Return": {
        "cairo_type": "(sequencer_address: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_sequencer_address.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.get_sequencer_address.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_sequencer_address.syscall_ptr",
        "references": [
          {
            "pc": 80,
            "ap_tracking_data": {
              "offset": 0,
              "group": 9
            },
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "pc": 83,
            "ap_tracking_data": {
              "offset": 1,
              "group": 9
            },
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_tx_info": {
        "pc": 142,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_tx_info.Args": {
        "size": 0,
        "full_name": "starkware.starknet.common.syscalls.get_tx_info.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_tx_info.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.get_tx_info.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_tx_info.Return": {
        "cairo_type": "(tx_info: starkware.starknet.common.syscalls.TxInfo*)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_tx_info.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr",
        "references": [
          {
            "pc": 142,
            "ap_tracking_data": {
              "offset": 0,
              "group": 17
            },
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "pc": 145,
            "ap_tracking_data": {
              "offset": 1,
              "group": 17
            },
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_tx_signature": {
        "pc": 108,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_tx_signature.Args": {
        "size": 0,
        "full_name": "starkware.starknet.common.syscalls.get_tx_signature.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_tx_signature.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.get_tx_signature.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_tx_signature.Return": {
        "cairo_type": "(signature_len: felt, signature: felt*)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_tx_signature.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.get_tx_signature.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_tx_signature.syscall_ptr",
        "references": [
          {
            "pc": 108,
            "ap_tracking_data": {
              "offset": 0,
              "group": 13
            },
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "pc": 111,
            "ap_tracking_data": {
              "offset": 1,
              "group": 13
            },
            "value": "cast([fp + (-3)] + 3, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.library_call": {
        "pc": 37,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.library_call.Args": {
        "size": 4,
        "full_name": "starkware.starknet.common.syscalls.library_call.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "function_selector": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "calldata_size": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.library_call.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.library_call.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.library_call.Return": {
        "cairo_type": "(retdata_size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.library_call.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.library_call.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.library_call.syscall_ptr",
        "references": [
          {
            "pc": 37,
            "ap_tracking_data": {
              "offset": 0,
              "group": 5
            },
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "pc": 44,
            "ap_tracking_data": {
              "offset": 1,
              "group": 5
            },
            "value": "cast([fp + (-7)] + 7, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.library_call_l1_handler": {
        "pc": 49,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.library_call_l1_handler.Args": {
        "size": 4,
        "full_name": "starkware.starknet.common.syscalls.library_call_l1_handler.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "function_selector": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "calldata_size": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.library_call_l1_handler.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.library_call_l1_handler.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.library_call_l1_handler.Return": {
        "cairo_type": "(retdata_size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.library_call_l1_handler.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.library_call_l1_handler.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.library_call_l1_handler.syscall_ptr",
        "references": [
          {
            "pc": 49,
            "ap_tracking_data": {
              "offset": 0,
              "group": 6
            },
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "pc": 56,
            "ap_tracking_data": {
              "offset": 1,
              "group": 6
            },
            "value": "cast([fp + (-7)] + 7, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.replace_class": {
        "pc": 149,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.replace_class.Args": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.replace_class.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.replace_class.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.replace_class.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.replace_class.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.replace_class.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.replace_class.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.replace_class.syscall_ptr",
        "references": [
          {
            "pc": 149,
            "ap_tracking_data": {
              "offset": 0,
              "group": 18
            },
            "value": "[cast(fp + (-4), felt**)]"
          },
          {
            "pc": 153,
            "ap_tracking_data": {
              "offset": 1,
              "group": 18
            },
            "value": "cast([fp + (-4)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_read": {
        "pc": 116,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_read.Args": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
        "members": {
          "address": {
            "offset": 0,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.Return": {
        "cairo_type": "(value: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
        "references": [
          {
            "pc": 116,
            "ap_tracking_data": {
              "offset": 0,
              "group": 14
            },
            "value": "[cast(fp + (-4), felt**)]"
          },
          {
            "pc": 120,
            "ap_tracking_data": {
              "offset": 1,
              "group": 14
            },
            "value": "cast([fp + (-4)] + 3, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_write": {
        "pc": 124,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_write.Args": {
        "size": 2,
        "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
        "members": {
          "address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
        "references": [
          {
            "pc": 124,
            "ap_tracking_data": {
              "offset": 0,
              "group": 15
            },
            "value": "[cast(fp + (-5), felt**)]"
          },
          {
            "pc": 129,
            "ap_tracking_data": {
              "offset": 1,
              "group": 15
            },
            "value": "cast([fp + (-5)] + 3, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.core.os.constants.CONSTRUCTOR_ENTRY_POINT_SELECTOR": {
        "value": 1.1590400262122783e+75,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.DECLARE_VERSION": {
        "value": 2,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.DEFAULT_ENTRY_POINT_SELECTOR": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.EMIT_EVENT_GAS_COST": {
        "value": 11000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.ENTRY_POINT_GAS_COST": {
        "value": 60000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.ENTRY_POINT_INITIAL_BUDGET": {
        "value": 10000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.ENTRY_POINT_TYPE_CONSTRUCTOR": {
        "value": 2,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.ENTRY_POINT_TYPE_EXTERNAL": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.ENTRY_POINT_TYPE_L1_HANDLER": {
        "value": 1,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.ERROR_OUT_OF_GAS": {
        "value": 3.7523358901391806e+23,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.EXECUTE_ENTRY_POINT_SELECTOR": {
        "value": 6.170757544651546e+74,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.FEE_TRANSFER_GAS_COST": {
        "value": 70000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.GET_CALLER_ADDRESS_GAS_COST": {
        "value": 11000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.INITIAL_GAS_COST": {
        "value": 10000000000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.L1_HANDLER_VERSION": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.NOP_ENTRY_POINT_OFFSET": {
        "value": -1,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.STEP_GAS_COST": {
        "value": 100,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.STORAGE_READ_GAS_COST": {
        "value": 15000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.STORAGE_WRITE_GAS_COST": {
        "value": 15000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.SYSCALL_BASE_GAS_COST": {
        "value": 10000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.TRANSACTION_GAS_COST": {
        "value": 200000,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.TRANSACTION_VERSION": {
        "value": 1,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.TRANSFER_ENTRY_POINT_SELECTOR": {
        "value": 2.326704854250827e+74,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.VALIDATE_DECLARE_ENTRY_POINT_SELECTOR": {
        "value": 1.1481893917741139e+75,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.VALIDATE_DEPLOY_ENTRY_POINT_SELECTOR": {
        "value": 1.554466106298962e+75,
        "type": "const"
      },
      "starkware.starknet.core.os.constants.VALIDATE_ENTRY_POINT_SELECTOR": {
        "value": 6.269698338999873e+74,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.CallContract": {
        "destination": "starkware.starknet.common.syscalls.CallContract",
        "type": "alias"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.CallContractRequest": {
        "destination": "starkware.starknet.common.syscalls.CallContractRequest",
        "type": "alias"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.DELEGATE_CALL_SELECTOR": {
        "destination": "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR",
        "type": "alias"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
        "destination": "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR",
        "type": "alias"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call": {
        "pc": 338,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.Args": {
        "size": 4,
        "full_name": "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "function_selector": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "calldata_size": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "calldata": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.ImplicitArgs": {
        "size": 1,
        "full_name": "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.Return": {
        "cairo_type": "(retdata_size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.core.test_contract.deprecated_syscalls.delegate_call.syscall_ptr",
        "references": [
          {
            "pc": 338,
            "ap_tracking_data": {
              "offset": 0,
              "group": 33
            },
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "pc": 345,
            "ap_tracking_data": {
              "offset": 1,
              "group": 33
            },
            "value": "cast([fp + (-7)] + 7, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.StorageCell": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.StorageCell",
        "members": {
          "key": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract": {
        "type": "namespace"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.ADD_VALUE_SELECTOR": {
        "value": 2.4411612835849817e+74,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.Args": {
        "size": 0,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.Args",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.GET_VALUE_SELECTOR": {
        "value": 1.0885146295340279e+75,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.ImplicitArgs": {
        "size": 0,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.ImplicitArgs",
        "members": {},
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.RECURSIVE_ADD_VALUE_SELECTOR": {
        "value": 7.654053920263021e+74,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.SET_VALUE_SELECTOR": {
        "value": 1.73780683489166e+75,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.SIZEOF_LOCALS": {
        "value": 0,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.TEST_CALL_WITH_ARRAY_SELECTOR": {
        "value": 1.6915849605193468e+74,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.TEST_CALL_WITH_STRUCT_ARRAY_SELECTOR": {
        "value": 3.457412645344925e+74,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.add_value": {
        "pc": 413,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.add_value.Args": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.add_value.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.add_value.ImplicitArgs": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.add_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.add_value.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.add_value.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.get_value": {
        "pc": 390,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.get_value.Args": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.get_value.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "address": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.get_value.ImplicitArgs": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.get_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.get_value.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.get_value.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.library_call_set_value": {
        "pc": 370,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.library_call_set_value.Args": {
        "size": 3,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.library_call_set_value.Args",
        "members": {
          "class_hash": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.library_call_set_value.ImplicitArgs": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.library_call_set_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.library_call_set_value.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.library_call_set_value.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.recursive_add_value": {
        "pc": 432,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.recursive_add_value.Args": {
        "size": 3,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.recursive_add_value.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "self_address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.recursive_add_value.ImplicitArgs": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.recursive_add_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.recursive_add_value.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.recursive_add_value.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.set_value": {
        "pc": 350,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.set_value.Args": {
        "size": 3,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.set_value.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "value": {
            "offset": 2,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.set_value.ImplicitArgs": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.set_value.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.set_value.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.set_value.SIZEOF_LOCALS": {
        "value": 1,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_array": {
        "pc": 452,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_array.Args": {
        "size": 4,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_array.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "self_address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "arr_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "arr": {
            "offset": 3,
            "cairo_type": "felt*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_array.ImplicitArgs": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_array.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_array.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_array.SIZEOF_LOCALS": {
        "value": 3,
        "type": "const"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_struct_array": {
        "pc": 482,
        "decorators": [],
        "type": "function"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_struct_array.Args": {
        "size": 4,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_struct_array.Args",
        "members": {
          "contract_address": {
            "offset": 0,
            "cairo_type": "felt"
          },
          "self_address": {
            "offset": 1,
            "cairo_type": "felt"
          },
          "arr_len": {
            "offset": 2,
            "cairo_type": "felt"
          },
          "arr": {
            "offset": 3,
            "cairo_type": "starkware.starknet.core.test_contract.test_contract_interface.StorageCell*"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_struct_array.ImplicitArgs": {
        "size": 2,
        "full_name": "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_struct_array.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "offset": 0,
            "cairo_type": "felt*"
          },
          "range_check_ptr": {
            "offset": 1,
            "cairo_type": "felt"
          }
        },
        "type": "struct"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_struct_array.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.core.test_contract.test_contract_interface.TestContract.test_call_with_struct_array.SIZEOF_LOCALS": {
        "value": 3,
        "type": "const"
      }
    },
    "builtins": [
      "pedersen",
      "range_check",
      "bitwise",
      "ec_op"
    ],
    "data": [
      "0x40780017fff7fff",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x480280027ffb8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480080007fff8000",
      "0x400080007ffd7fff",
      "0x482480017ffd8001",
      "0x1",
      "0x482480017ffd8001",
      "0x1",
      "0xa0680017fff7ffe",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
      "0x402a7ffc7ffd7fff",
      "0x208b7fff7fff7ffe",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x43616c6c436f6e7472616374",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x7",
      "0x480280057ff98000",
      "0x480280067ff98000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x4c69627261727943616c6c",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x7",
      "0x480280057ff98000",
      "0x480280067ff98000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x4c69627261727943616c6c4c3148616e646c6572",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x7",
      "0x480280057ff98000",
      "0x480280067ff98000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x4465706c6f79",
      "0x400280007ff87fff",
      "0x400380017ff87ff9",
      "0x400380027ff87ffa",
      "0x400380037ff87ffb",
      "0x400380047ff87ffc",
      "0x400380057ff87ffd",
      "0x482680017ff88000",
      "0x9",
      "0x480280067ff88000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x47657443616c6c657241646472657373",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x47657453657175656e63657241646472657373",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x476574426c6f636b4e756d626572",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x476574436f6e747261637441646472657373",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x476574426c6f636b54696d657374616d70",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x47657454785369676e6174757265",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x3",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f7261676552656164",
      "0x400280007ffc7fff",
      "0x400380017ffc7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x480280027ffc8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f726167655772697465",
      "0x400280007ffb7fff",
      "0x400380017ffb7ffc",
      "0x400380027ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x456d69744576656e74",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x5",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x4765745478496e666f",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x5265706c616365436c617373",
      "0x400280007ffc7fff",
      "0x400380017ffc7ffd",
      "0x482680017ffc8000",
      "0x2",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x4",
      "0x400780017fff7ffd",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffc7ffd",
      "0x482680017ffc8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x48297ffc80007ffd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x3ffffffffffffffffffffffffffffff",
      "0x480280017ffc8000",
      "0x48307fff80007ffe",
      "0x400280027ffc7fff",
      "0x480280017ffc8000",
      "0x484480017fff8000",
      "0x100000000000000000000000000000000",
      "0x480280007ffc8000",
      "0x40317fff7ffe7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0x10",
      "0x480a7ffc7fff8000",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48127ffe7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0xc",
      "0x40780017fff7fff",
      "0xa",
      "0x480680017fff8000",
      "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
      "0x480a7ffc7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
      "0x10780017fff7fff",
      "0x8",
      "0x40780017fff7fff",
      "0xb",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x5",
      "0x480280037ffb8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x5",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x3",
      "0x48487ffc7fff8000",
      "0x48487ffc7fff8000",
      "0x482480017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x2",
      "0x48487ffd7fff8000",
      "0x48507fff80007ffd",
      "0x48507fff7fff8000",
      "0x48287ffc80007fff",
      "0x48287ffc80007fff",
      "0x48317fff80007ffc",
      "0x48507fff7ffb8000",
      "0x48127ffd7fff8000",
      "0x48287ffd80007ffe",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffb",
      "0x5",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x5",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x48297ffc80007ffa",
      "0x20680017fff7fff",
      "0xf",
      "0x48297ffd80007ffb",
      "0x20680017fff7fff",
      "0x7",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x0",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x48297ffd80007ffb",
      "0x48297ffc80007ffa",
      "0x48507fff80007ffe",
      "0x48507fff7fff8000",
      "0x48287ffa80007fff",
      "0x48287ffc80007fff",
      "0x48317fff80007ffa",
      "0x48507fff7ffb8000",
      "0x48127ffd7fff8000",
      "0x48287ffb80007ffe",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x20780017fff7ffd",
      "0x6",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
      "0x400280007ff87ffe",
      "0x400280017ff87fff",
      "0x400380047ff87ffb",
      "0x400380027ff87ffc",
      "0x400380037ff87ffd",
      "0x480280057ff88000",
      "0x480280067ff88000",
      "0x480a80007fff8000",
      "0x4846800180018000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
      "0x482680017ff88000",
      "0x7",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53656e644d657373616765546f4c31",
      "0x400280007ffa7fff",
      "0x400380017ffa7ffb",
      "0x400380027ffa7ffc",
      "0x400380037ffa7ffd",
      "0x482680017ffa8000",
      "0x4",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x44656c656761746543616c6c",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x7",
      "0x480280057ff98000",
      "0x480280067ff98000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea1",
      "0x40137fff7fff8000",
      "0x4003800080007ffc",
      "0x4003800180007ffd",
      "0x4826800180008000",
      "0x2",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x3d7905601c217734671143d457f0db37f7f8883112abd34b92c4abfeafde0c3",
      "0x4828800080007ffc",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffead",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8d",
      "0x40137fff7fff8000",
      "0x4003800080007ffc",
      "0x4003800180007ffd",
      "0x4826800180008000",
      "0x2",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x3d7905601c217734671143d457f0db37f7f8883112abd34b92c4abfeafde0c3",
      "0x4828800080007ffc",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea5",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe79",
      "0x40137fff7fff8000",
      "0x4003800080007ffd",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x26813d396fdb198e9ead934e4f7a592a8b88a059e45ab0eb6ee53494e8d45b0",
      "0x4828800080007ffc",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe86",
      "0x482480017fff8000",
      "0x1",
      "0x40307ffe7ffd7fff",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480080007ffc8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe62",
      "0x40137fff7fff8000",
      "0x4003800080007ffd",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x8a2a3272a92492ded6c04f7c85df9c53134cef398564465f12af3c9c986d41",
      "0x4828800080007ffc",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe6f",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4f",
      "0x40137fff7fff8000",
      "0x4003800080007ffc",
      "0x4003800180007ffd",
      "0x4826800180008000",
      "0x2",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x1b1343fe0f4a16bed5e5133b5ca9f03ab15976bb2df2b6d263ac3170b8b6a13",
      "0x4828800080007ffc",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5b",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3b",
      "0x40137fff7fff8000",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x400380007ff97ffc",
      "0x402780017ff98001",
      "0x1",
      "0x4826800180008000",
      "0x2",
      "0x40297ffc7fff8002",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe35",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x5fbd85570830519219bb4ad6951316f96fce363f86909d1f8adb1fdc836471",
      "0x4829800080008002",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3d",
      "0x48127ffd7fff8000",
      "0x480a80017fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe1d",
      "0x40137fff7fff8000",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x400380007ff97ffc",
      "0x402780017ff98001",
      "0x1",
      "0x4826800180008000",
      "0x2",
      "0x484680017ffc8000",
      "0x2",
      "0x40317fff7ffe8002",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x484680017ffc8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe14",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0xc3aec03fe455b8a64bf01ebad1b32252b107e07bc075631c513bb581ea3ee4",
      "0x4829800080008002",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe1c",
      "0x48127ffd7fff8000",
      "0x480a80017fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x2691cb735b18f3f656c3b82bd97a32b65d15019b64117513f8604d1e06fe58b",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdfd",
      "0x480a7ffc7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb6",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5d",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe58",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe50",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4b",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x400780017fff7ffc",
      "0x2",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd5",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x48307ffa7ff88000",
      "0x48307ffa7ff88000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280017ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x482680017ffd8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe12",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff89",
      "0x480a7ffa7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5b",
      "0x48127ffe7fff8000",
      "0x48127ff77fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe56",
      "0x48127fed7fff8000",
      "0x48127fed7fff8000",
      "0x48127fed7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ff47fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8b",
      "0x48127fbb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x7b",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x161bc82433cf4a92809836390ccd14921dfc4dc410cf3d2adbfee5e21ecfec8",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda1",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9c",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x654fd7e67a123dd13868093b3b7777f1ffef596c2e324f25ceaf9146698482c",
      "0x480680017fff8000",
      "0x4fad269cbf860980e38768fe9cb6b0b9ab03ee3fe84cfde2eccce597c874fd8",
      "0x480680017fff8000",
      "0x6d232c016ef1b12aec4b7f88cc0b3ab662be3b7dd7adbce5209fcfdbd42a504",
      "0x480680017fff8000",
      "0x3dbce56de34e1cfe252ead5a1f14fd261d520d343ff6b7652174e62976ef44d",
      "0x480680017fff8000",
      "0x4b5810004d9272776dec83ecc20c19353453b956e594188890b48467cb53c19",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3a",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
      "0x48127fe07fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280047ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x48127ffa7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf1",
      "0x40137fff7fff8000",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4003800280007ffd",
      "0x4826800180008000",
      "0x3",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x7772be8b80a8a33dc6c1f9a6ab820c02e537c73e859de67f288c70f92571bb",
      "0x4828800080007ffc",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcfc",
      "0x48127ffd7fff8000",
      "0x480a7ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdc",
      "0x40137fff7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x1b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d",
      "0x4829800080008000",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcec",
      "0x482480017fff8000",
      "0x1",
      "0x40307ffe7ffd7fff",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480080007ffc8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x4",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x480280037ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd16",
      "0x400680017fff7ffe",
      "0x2",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb3",
      "0x480080007fba8000",
      "0x480080017fb98000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x480a7ffd7fff8000",
      "0x48307ffa7ff88000",
      "0x48307ffa7ff88000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebd",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf9",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd9",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x48127ff67fff8000",
      "0x480280017ffb8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0xf",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb8",
      "0x48127ffe7fff8000",
      "0x480680017fff8000",
      "0xf",
      "0x482480017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb9",
      "0x480680017fff8000",
      "0xf",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcad",
      "0x402480017ff27fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x11",
      "0x480680017fff8000",
      "0x55",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc7",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc19",
      "0x400680017fff7fff",
      "0x5bb9440e27889a364bcb678b1f679ecd1347acdedcbf36e83494f857cc58026",
      "0x48127ffe7fff8000",
      "0x48127ff77fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff2",
      "0x480280007ffb8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x400780017fff8000",
      "0xc",
      "0x400780017fff8001",
      "0x22",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc07",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x2",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd31",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc52",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x48307fff7ffe8000",
      "0x480280027ffb8000",
      "0x480080007ffe8000",
      "0x400080017ffe7fff",
      "0x482480017ffd8000",
      "0x1",
      "0x480080007ffc8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x482680017ffd8000",
      "0x1",
      "0x480080007ff78000",
      "0x482480017ff68000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
      "0x40780017fff7fff",
      "0x1",
      "0x480280027ffb8000",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x2",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff87fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x4",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba4",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0xb069ee48dec2703b6a4149dcf9c0b0ef3fe34f98506d57646ae98605bf9117",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9e",
      "0x40137fff7fff8001",
      "0x4003800080017ffc",
      "0x400380007ffb7ffc",
      "0x402780017ffb8002",
      "0x1",
      "0x4826800180018000",
      "0x1",
      "0x484680017ffc8000",
      "0x2",
      "0x40317fff7ffe8003",
      "0x4826800180018000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x484680017ffc8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb96",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4829800180008003",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc09",
      "0x480a80027fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x484480017fff8000",
      "0x2",
      "0x48307fff7ffd8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x482480017ffe8000",
      "0x1",
      "0x480280007ffd8000",
      "0x482680017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb70",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280027ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x3",
      "0x480280027ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x482680017ffd8000",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
      "0x40780017fff7fff",
      "0x1",
      "0x480280027ffb8000",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff87fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6c",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280027ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x3",
      "0x480280027ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x482680017ffd8000",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
      "0x480280027ffb8000",
      "0x48127ffe7fff8000",
      "0x482480017ffe8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
      "0x48127ff47fff8000",
      "0x480280017ffb8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff57fff8000",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb3c",
      "0x48127ffe7fff8000",
      "0x480a7ff67fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc56",
      "0x48127fe67fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280037ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x4",
      "0x480280037ffd8000",
      "0x48307fff7ffe8000",
      "0x482480017fff8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x482480017ffe8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x480280037ffd8000",
      "0x482680017ffd8000",
      "0x4",
      "0x480080007ff68000",
      "0x480080017ff58000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
      "0x48127ff57fff8000",
      "0x480280017ffb8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac8",
      "0x400180007fff7ffd",
      "0x480680017fff8000",
      "0x0",
      "0x400080017ffe7fff",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x2",
      "0x48127ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf2",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280017ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae8",
      "0x400a7ffd7fff7fff",
      "0x48127ffe7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad7",
      "0x400a7ffd7fff7fff",
      "0x48127ffe7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad4",
      "0x400a7ffd7fff7fff",
      "0x48127ffe7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab5",
      "0x400a7ffd7fff7fff",
      "0x48127ffe7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa96",
      "0x400a7ffd7fff7fff",
      "0x48127ffe7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x7c7",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda5",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x7e5",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7b",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb3",
      "0x400680017fff7fff",
      "0x7c7",
      "0x48127ffe7fff8000",
      "0x48127ff37fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb97",
      "0x400680017fff7fff",
      "0x7e5",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x5",
      "0x480680017fff8000",
      "0x64",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd72",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb89",
      "0x48127ffe7fff8000",
      "0x480680017fff8000",
      "0x5",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd81",
      "0x402680017ffd7fff",
      "0x64",
      "0x48127ffe7fff8000",
      "0x48127ff37fff8000",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x5",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb64",
      "0x480680017fff8000",
      "0x22b",
      "0x40487ffd7fff7ffe",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa0a",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa5b",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb68",
      "0x480680017fff8000",
      "0x22b",
      "0x48127ffd7fff8000",
      "0x480680017fff8000",
      "0x5",
      "0x48487ffd7ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd31",
      "0x48127ff27fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x5",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x5",
      "0x1104800180018000",
      "0x23",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x482680017ffd8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb3a",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd92",
      "0x48127fef7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e0",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x482480017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e2",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffc",
      "0x5",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x482680017ffc8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb09",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280017ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x482480017ffe8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x482680017ffd8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffc",
      "0x5",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc9e",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x482680017ffc8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x482680017ffd8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf6",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280017ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x484480017fff8000",
      "0x2",
      "0x48307fff7ffd8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x482480017ffe8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x482680017ffd8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x1bc",
      "0x480680017fff8000",
      "0x22b",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6e",
      "0x480680017fff8000",
      "0x1bc",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff95d",
      "0x400680017fff7fff",
      "0x22b",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x1bc",
      "0x480680017fff8000",
      "0x29a",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa50",
      "0x48127ffe7fff8000",
      "0x480680017fff8000",
      "0x1bc",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff94d",
      "0x400680017fff7fff",
      "0x29a",
      "0x48127ffe7fff8000",
      "0x48127ff77fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff94c",
      "0x480080007fff8000",
      "0x480080017ffe8000",
      "0x480080027ffd8000",
      "0x480080037ffc8000",
      "0x480080047ffb8000",
      "0x480080057ffa8000",
      "0x480080067ff98000",
      "0x480080077ff88000",
      "0x480080007ffc8000",
      "0x400680017fff7ff7",
      "0x1",
      "0x400a7ffd7fff7ff8",
      "0x400680017fff7ff9",
      "0x10000000000000000000000000",
      "0x400680017fff7ffa",
      "0x1",
      "0x400680017fff7fff",
      "0x64",
      "0x48127ff57fff8000",
      "0x480680017fff8000",
      "0x12c",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff922",
      "0x480680017fff8000",
      "0x137",
      "0x48127ff57fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff91d",
      "0x480680017fff8000",
      "0x142",
      "0x48127ff07fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff918",
      "0x480a7ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x480280017ffb8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff912",
      "0x400180007fff7ffd",
      "0x48127ffe7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ba",
      "0x48127ffd7fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280027ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x3",
      "0x480280027ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x482680017ffd8000",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff864",
      "0x48127ffd7fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280027ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x3",
      "0x480280027ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x482680017ffd8000",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff847",
      "0x48127ffd7fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280027ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x3",
      "0x480280027ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x482680017ffd8000",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0xf",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff868",
      "0x480680017fff8000",
      "0xf",
      "0x480680017fff8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff862",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff82f",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaef",
      "0x400680017fff7fff",
      "0x7b",
      "0x48127ffd7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff85b",
      "0x48127ff87fff8000",
      "0x48127fe07fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae5",
      "0x400680017fff7fff",
      "0xea",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa74",
      "0x400680017fff7fff",
      "0x7b",
      "0x48127ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff835",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff7",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x480280047ffb8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff97fff8000",
      "0x208b7fff7fff7ffe"
    ],
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
      "references": [
        {
          "pc": 9,
          "ap_tracking_data": {
            "offset": 0,
            "group": 2
          },
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "pc": 16,
          "ap_tracking_data": {
            "offset": 3,
            "group": 2
          },
          "value": "[cast(ap, felt*)]"
        },
        {
          "pc": 25,
          "ap_tracking_data": {
            "offset": 0,
            "group": 4
          },
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "pc": 37,
          "ap_tracking_data": {
            "offset": 0,
            "group": 5
          },
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "pc": 49,
          "ap_tracking_data": {
            "offset": 0,
            "group": 6
          },
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "pc": 61,
          "ap_tracking_data": {
            "offset": 0,
            "group": 7
          },
          "value": "[cast(fp + (-8), felt**)]"
        },
        {
          "pc": 73,
          "ap_tracking_data": {
            "offset": 0,
            "group": 8
          },
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "pc": 80,
          "ap_tracking_data": {
            "offset": 0,
            "group": 9
          },
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "pc": 87,
          "ap_tracking_data": {
            "offset": 0,
            "group": 10
          },
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "pc": 94,
          "ap_tracking_data": {
            "offset": 0,
            "group": 11
          },
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "pc": 101,
          "ap_tracking_data": {
            "offset": 0,
            "group": 12
          },
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "pc": 108,
          "ap_tracking_data": {
            "offset": 0,
            "group": 13
          },
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "pc": 116,
          "ap_tracking_data": {
            "offset": 0,
            "group": 14
          },
          "value": "[cast(fp + (-4), felt**)]"
        },
        {
          "pc": 124,
          "ap_tracking_data": {
            "offset": 0,
            "group": 15
          },
          "value": "[cast(fp + (-5), felt**)]"
        },
        {
          "pc": 132,
          "ap_tracking_data": {
            "offset": 0,
            "group": 16
          },
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "pc": 142,
          "ap_tracking_data": {
            "offset": 0,
            "group": 17
          },
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "pc": 149,
          "ap_tracking_data": {
            "offset": 0,
            "group": 18
          },
          "value": "[cast(fp + (-4), felt**)]"
        },
        {
          "pc": 156,
          "ap_tracking_data": {
            "offset": 0,
            "group": 19
          },
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "pc": 161,
          "ap_tracking_data": {
            "offset": 0,
            "group": 20
          },
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "pc": 179,
          "ap_tracking_data": {
            "offset": 0,
            "group": 23
          },
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "pc": 179,
          "ap_tracking_data": {
            "offset": 0,
            "group": 23
          },
          "value": "[cast([fp + (-4)], felt*)]"
        },
        {
          "pc": 179,
          "ap_tracking_data": {
            "offset": 0,
            "group": 23
          },
          "value": "[cast([fp + (-4)] + 1, felt*)]"
        },
        {
          "pc": 192,
          "ap_tracking_data": {
            "offset": 0,
            "group": 24
          },
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "pc": 194,
          "ap_tracking_data": {
            "offset": 1,
            "group": 24
          },
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "pc": 212,
          "ap_tracking_data": {
            "offset": 2,
            "group": 24
          },
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "pc": 298,
          "ap_tracking_data": {
            "offset": 0,
            "group": 29
          },
          "value": "[cast(fp + (-7), starkware.cairo.common.ec_point.EcPoint*)]"
        },
        {
          "pc": 298,
          "ap_tracking_data": {
            "offset": 0,
            "group": 29
          },
          "value": "[cast(fp + (-5), felt*)]"
        },
        {
          "pc": 298,
          "ap_tracking_data": {
            "offset": 0,
            "group": 29
          },
          "value": "[cast(fp + (-4), starkware.cairo.common.ec_point.EcPoint*)]"
        },
        {
          "pc": 306,
          "ap_tracking_data": {
            "offset": 2,
            "group": 29
          },
          "value": "[cast(fp, starkware.cairo.common.ec_point.EcPoint*)]"
        },
        {
          "pc": 329,
          "ap_tracking_data": {
            "offset": 0,
            "group": 32
          },
          "value": "[cast(fp + (-6), felt**)]"
        },
        {
          "pc": 338,
          "ap_tracking_data": {
            "offset": 0,
            "group": 33
          },
          "value": "[cast(fp + (-7), felt**)]"
        }
      ]
    }
  },
  "entry_points_by_type": {
    "CONSTRUCTOR": [
      {
        "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194",
        "offset": "0x270"
      }
    ],
    "EXTERNAL": [
      {
        "selector": "0x5fbd85570830519219bb4ad6951316f96fce363f86909d1f8adb1fdc836471",
        "offset": "0x6bf"
      },
      {
        "selector": "0x679c22735055a10db4f275395763a3752a1e3a3043c192299ab6b574fba8d6",
        "offset": "0x2fc"
      },
      {
        "selector": "0x7772be8b80a8a33dc6c1f9a6ab820c02e537c73e859de67f288c70f92571bb",
        "offset": "0x29f"
      },
      {
        "selector": "0x8692275a885fee8890c5eaa075cc627d4755e3a1c8a2f1d557f7f97743761a",
        "offset": "0x516"
      },
      {
        "selector": "0x8a2a3272a92492ded6c04f7c85df9c53134cef398564465f12af3c9c986d41",
        "offset": "0x655"
      },
      {
        "selector": "0xbd7daa40535813d892224da817610f4c7e6fe8983abe588a4227586262d9d3",
        "offset": "0x5af"
      },
      {
        "selector": "0xc3aec03fe455b8a64bf01ebad1b32252b107e07bc075631c513bb581ea3ee4",
        "offset": "0x6f0"
      },
      {
        "selector": "0xd47144c49bce05b6de6bce9d5ff0cc8da9420f8945453e20ef779cbea13ad4",
        "offset": "0x81f"
      },
      {
        "selector": "0xd5e8843577a4b0aa2c4408c543dd466ece9a2611a140c26c004169cb123e43",
        "offset": "0x72f"
      },
      {
        "selector": "0xe7510edcf6e9f1b70f7bd1f488767b50f0363422f3c563160ab77adf62467b",
        "offset": "0x84b"
      },
      {
        "selector": "0xe8f69bd941db5b0bff2e416c63d46f067fcdfad558c528f9fd102ba368cb5f",
        "offset": "0x567"
      },
      {
        "selector": "0x127a04cfe41aceb22fc022bce0c5c70f2d860a7c7c054681bd821cdc18e6dbc",
        "offset": "0x782"
      },
      {
        "selector": "0x12ead94ae9d3f9d2bdb6b847cf255f1f398193a1f88884a0ae8e18f24a037b6",
        "offset": "0x41c"
      },
      {
        "selector": "0x167ac610845cc0ab1501b38169a7e50f1bf60602d3c2a961b30987454f97812",
        "offset": "0x597"
      },
      {
        "selector": "0x169f135eddda5ab51886052d777a57f2ea9c162d713691b5e04a6d4ed71d47f",
        "offset": "0x4de"
      },
      {
        "selector": "0x19a35a6e95cb7a3318dbb244f20975a1cd8587cc6b5259f15f61d7beb7ee43b",
        "offset": "0x5f7"
      },
      {
        "selector": "0x1ae1a515cf2d214b29bdf63a79ee2d490efd4dd1acc99d383a8e549c3cecb5d",
        "offset": "0x36d"
      },
      {
        "selector": "0x1b1343fe0f4a16bed5e5133b5ca9f03ab15976bb2df2b6d263ac3170b8b6a13",
        "offset": "0x67f"
      },
      {
        "selector": "0x1b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d",
        "offset": "0x2c2"
      },
      {
        "selector": "0x1cad42b55a5b2c7366b371db59448730766dfef74c0156c9c6f332c8c5e34d9",
        "offset": "0x3cf"
      },
      {
        "selector": "0x1de4779362d5ca708d55fe1d4d499501b7f692730d2e01656e9180708985e07",
        "offset": "0x769"
      },
      {
        "selector": "0x1eaab699414d786ce9dbfd4e86815f66680647efd13f9334ac97148e4e30e82",
        "offset": "0x3fc"
      },
      {
        "selector": "0x218f305395474a84a39307fa5297be118fe17bf65e27ac5e2de6617baa44c64",
        "offset": "0x62b"
      },
      {
        "selector": "0x26813d396fdb198e9ead934e4f7a592a8b88a059e45ab0eb6ee53494e8d45b0",
        "offset": "0x3a8"
      },
      {
        "selector": "0x27c3334165536f239cfd400ed956eabff55fc60de4fb56728b6a4f6b87db01c",
        "offset": "0x4ae"
      },
      {
        "selector": "0x2913ee03e5e3308c41e308bd391ea4faac9b9cb5062c76a6b3ab4f65397e106",
        "offset": "0x436"
      },
      {
        "selector": "0x29cef374bfc7ad2628f04d9a18ac3c3a259c1eb3ce3d3c77bbab281c42649fc",
        "offset": "0x7a1"
      },
      {
        "selector": "0x30f842021fbf02caf80d09a113997c1e00a32870eee0c6136bed27acb348bea",
        "offset": "0x340"
      },
      {
        "selector": "0x317eb442b72a9fae758d4fb26830ed0d9f31c8e7da4dbff4e8c59ea6a158e7f",
        "offset": "0x24a"
      },
      {
        "selector": "0x330a77821de972bb6bd8a5eeb87efdf645a609a3057cfc0b3de7bdfaf887c85",
        "offset": "0x487"
      },
      {
        "selector": "0x33ce93a3eececa5c9fc70da05f4aff3b00e1820b79587924d514bc76788991a",
        "offset": "0x57f"
      },
      {
        "selector": "0x34c4c150632e67baf44fc50e9a685184d72a822510a26a66f72058b5e7b2892",
        "offset": "0x69e"
      },
      {
        "selector": "0x3604cea1cdb094a73a31144f14a3e5861613c008e1e879939ebc4827d10cd50",
        "offset": "0x7ca"
      },
      {
        "selector": "0x3639fffddc860618a5a5cb4e4c1562999b4b0ee1c648dcdecd1a905482d6ac2",
        "offset": "0x7f1"
      },
      {
        "selector": "0x398cb6c6170250c323a37586d08047d637f53b06360fa0268de8ee3ae3e52a2",
        "offset": "0x864"
      },
      {
        "selector": "0x3d7905601c217734671143d457f0db37f7f8883112abd34b92c4abfeafde0c3",
        "offset": "0x387"
      },
      {
        "selector": "0x3dc5da2d6d1275aeed57f43461d31967b0fed58bfe739b4ffad4091e89c4b03",
        "offset": "0x5c7"
      }
    ],
    "L1_HANDLER": [
      {
        "selector": "0xc73f681176fc7b3f9693986fd7b14581e8d540519e27400e88b8713932be01",
        "offset": "0x54c"
      }
    ]
  },
  "abi": [
    {
      "members": [
        {
          "name": "index",
          "offset": 0,
          "type": "felt"
        },
        {
          "name": "values",
          "offset": 1,
          "type": "(x: felt, y: felt)"
        }
      ],
      "name": "IndexAndValues",
      "size": 3,
      "type": "struct"
    },
    {
      "members": [
        {
          "name": "key",
          "offset": 0,
          "type": "felt"
        },
        {
          "name": "value",
          "offset": 1,
          "type": "felt"
        }
      ],
      "name": "StorageCell",
      "size": 2,
      "type": "struct"
    },
    {
      "inputs": [
        {
          "name": "index",
          "type": "felt"
        },
        {
          "name": "diffs_len",
          "type": "felt"
        },
        {
          "name": "diffs",
          "type": "felt*"
        }
      ],
      "name": "advance_counter",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "address",
          "type": "felt"
        },
        {
          "name": "value",
          "type": "felt"
        }
      ],
      "name": "constructor",
      "outputs": [],
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "name": "index_and_x",
          "type": "IndexAndValues"
        }
      ],
      "name": "xor_counters",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [],
      "name": "foo",
      "outputs": [
        {
          "name": "res",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ec_op",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "address",
          "type": "felt"
        },
        {
          "name": "index_and_x",
          "type": "IndexAndValues"
        }
      ],
      "name": "call_xor_counters",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "index",
          "type": "felt"
        }
      ],
      "name": "add_signature_to_counters",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "address",
          "type": "felt"
        },
        {
          "name": "value",
          "type": "felt"
        }
      ],
      "name": "set_value",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "address",
          "type": "felt"
        }
      ],
      "name": "get_value",
      "outputs": [
        {
          "name": "res",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entry_point",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_builtins",
      "outputs": [
        {
          "name": "result",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "to_address",
          "type": "felt"
        }
      ],
      "name": "send_message",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "keys_len",
          "type": "felt"
        },
        {
          "name": "keys",
          "type": "felt*"
        },
        {
          "name": "data_len",
          "type": "felt"
        },
        {
          "name": "data",
          "type": "felt*"
        }
      ],
      "name": "test_emit_event",
      "outputs": [],
      "type": "function"
    },
    {
      "data": [
        {
          "name": "storage_cells_len",
          "type": "felt"
        },
        {
          "name": "storage_cells",
          "type": "StorageCell*"
        }
      ],
      "keys": [],
      "name": "log_storage_cells",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "storage_cells_len",
          "type": "felt"
        },
        {
          "name": "storage_cells",
          "type": "StorageCell*"
        }
      ],
      "name": "test_high_level_event",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contract_address",
          "type": "felt"
        },
        {
          "name": "function_selector",
          "type": "felt"
        },
        {
          "name": "calldata_len",
          "type": "felt"
        },
        {
          "name": "calldata",
          "type": "felt*"
        }
      ],
      "name": "test_call_contract",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "class_hash",
          "type": "felt"
        },
        {
          "name": "contract_address_salt",
          "type": "felt"
        },
        {
          "name": "constructor_calldata_len",
          "type": "felt"
        },
        {
          "name": "constructor_calldata",
          "type": "felt*"
        }
      ],
      "name": "test_deploy",
      "outputs": [
        {
          "name": "contract_address",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "class_hash",
          "type": "felt"
        },
        {
          "name": "contract_address_salt",
          "type": "felt"
        },
        {
          "name": "deploy_from_zero",
          "type": "felt"
        },
        {
          "name": "constructor_calldata_len",
          "type": "felt"
        },
        {
          "name": "constructor_calldata",
          "type": "felt*"
        },
        {
          "name": "key",
          "type": "felt"
        },
        {
          "name": "value",
          "type": "felt"
        }
      ],
      "name": "test_deploy_and_call",
      "outputs": [
        {
          "name": "contract_address",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "from_address",
          "type": "felt"
        },
        {
          "name": "amount",
          "type": "felt"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "type": "l1_handler"
    },
    {
      "inputs": [
        {
          "name": "expected_address",
          "type": "felt"
        }
      ],
      "name": "test_get_caller_address",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "expected_address",
          "type": "felt"
        }
      ],
      "name": "test_get_sequencer_address",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "expected_timestamp",
          "type": "felt"
        }
      ],
      "name": "test_get_block_timestamp",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "expected_address",
          "type": "felt"
        }
      ],
      "name": "test_get_contract_address",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "expected_block_number",
          "type": "felt"
        }
      ],
      "name": "test_get_block_number",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "other_contract_address",
          "type": "felt"
        },
        {
          "name": "address",
          "type": "felt"
        }
      ],
      "name": "test_call_storage_consistency",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "other_contract_address",
          "type": "felt"
        },
        {
          "name": "depth",
          "type": "felt"
        }
      ],
      "name": "test_re_entrance",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "value",
          "type": "felt"
        }
      ],
      "name": "add_value",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "self_address",
          "type": "felt"
        },
        {
          "name": "value",
          "type": "felt"
        }
      ],
      "name": "recursive_add_value",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "address",
          "type": "felt"
        }
      ],
      "name": "increase_value",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "self_address",
          "type": "felt"
        },
        {
          "name": "arr_len",
          "type": "felt"
        },
        {
          "name": "arr",
          "type": "felt*"
        }
      ],
      "name": "test_call_with_array",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "self_address",
          "type": "felt"
        },
        {
          "name": "arr_len",
          "type": "felt"
        },
        {
          "name": "arr",
          "type": "StorageCell*"
        }
      ],
      "name": "test_call_with_struct_array",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "class_hash",
          "type": "felt"
        }
      ],
      "name": "test_library_call_syntactic_sugar",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "expected_account_contract_address",
          "type": "felt"
        }
      ],
      "name": "test_get_tx_info",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "expected_version",
          "type": "felt"
        }
      ],
      "name": "test_tx_version",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "code_address",
          "type": "felt"
        },
        {
          "name": "selector",
          "type": "felt"
        },
        {
          "name": "calldata_len",
          "type": "felt"
        },
        {
          "name": "calldata",
          "type": "felt*"
        }
      ],
      "name": "test_delegate_call",
      "outputs": [
        {
          "name": "retdata_size",
          "type": "felt"
        },
        {
          "name": "retdata",
          "type": "felt*"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "class_hash",
          "type": "felt"
        },
        {
          "name": "selector",
          "type": "felt"
        },
        {
          "name": "calldata_len",
          "type": "felt"
        },
        {
          "name": "calldata",
          "type": "felt*"
        }
      ],
      "name": "test_library_call",
      "outputs": [
        {
          "name": "retdata_size",
          "type": "felt"
        },
        {
          "name": "retdata",
          "type": "felt*"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "class_hash",
          "type": "felt"
        },
        {
          "name": "selector",
          "type": "felt"
        },
        {
          "name": "calldata_len",
          "type": "felt"
        },
        {
          "name": "calldata",
          "type": "felt*"
        }
      ],
      "name": "test_library_call_l1_handler",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_count_actual_storage_changes",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "class_hash",
          "type": "felt"
        }
      ],
      "name": "test_replace_class",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "class_hash",
          "type": "felt"
        }
      ],
      "name": "execute_replace_class",
      "outputs": [],
      "type": "function"
    }
  ]
}