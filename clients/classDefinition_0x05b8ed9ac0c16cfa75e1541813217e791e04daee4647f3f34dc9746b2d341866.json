{
    "abi": [
        {
            "members": [
                {
                    "name": "low",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "high",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "Uint256",
            "size": 2,
            "type": "struct"
        },
        {
            "data": [
                {
                    "name": "from_",
                    "type": "felt"
                },
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "Transfer",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "spender",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "Approval",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "constructor",
            "outputs": [],
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "name",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "symbol",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "totalSupply",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "name": "decimals",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "account",
                    "type": "felt"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "balance",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "spender",
                    "type": "felt"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "name": "remaining",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "amount",
                    "type": "Uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "amount",
                    "type": "Uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "spender",
                    "type": "felt"
                },
                {
                    "name": "amount",
                    "type": "Uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "spender",
                    "type": "felt"
                },
                {
                    "name": "added_value",
                    "type": "Uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "spender",
                    "type": "felt"
                },
                {
                    "name": "subtracted_value",
                    "type": "Uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [
            {
                "offset": "0x3c9",
                "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194"
            }
        ],
        "EXTERNAL": [
            {
                "offset": "0x4d2",
                "selector": "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20"
            },
            {
                "offset": "0x442",
                "selector": "0x4c4fb1ab068f6039d5780c68dd0fa2f8742cceb3426d19667778ca7f3518a9"
            },
            {
                "offset": "0x424",
                "selector": "0x80aa9fdbfaf9615e4afc7f5f722e265daca5ccc655360fa5ccacf9c267936d"
            },
            {
                "offset": "0x4ab",
                "selector": "0x83afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e"
            },
            {
                "offset": "0x51f",
                "selector": "0x16cc063b8338363cf388ce7fe1df408bf10f16cd51635d392e21d852fafb683"
            },
            {
                "offset": "0x545",
                "selector": "0x1aaf3e6107dd1349c81543ff4221a326814f77dadcc5810807b74f1a49ded4e"
            },
            {
                "offset": "0x486",
                "selector": "0x1e888a1026b19c8c0b57c72d63ed1737106aa10034105b980ba117bd0c29fe1"
            },
            {
                "offset": "0x405",
                "selector": "0x216b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4"
            },
            {
                "offset": "0x4f9",
                "selector": "0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c"
            },
            {
                "offset": "0x462",
                "selector": "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e"
            },
            {
                "offset": "0x3e7",
                "selector": "0x361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 35,
                        "group": 22
                    },
                    "reference_ids": {}
                },
                "start_pc": 324,
                "end_pc": 326,
                "value": "SafeUint256: addition overflow",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.security.safemath.library",
                    "openzeppelin.security.safemath.library.SafeUint256",
                    "openzeppelin.security.safemath.library.SafeUint256.add"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 60,
                        "group": 23
                    },
                    "reference_ids": {}
                },
                "start_pc": 347,
                "end_pc": 349,
                "value": "SafeUint256: subtraction overflow",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.security.safemath.library",
                    "openzeppelin.security.safemath.library.SafeUint256",
                    "openzeppelin.security.safemath.library.SafeUint256.sub_le"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 41,
                        "group": 43
                    },
                    "reference_ids": {}
                },
                "start_pc": 643,
                "end_pc": 648,
                "value": "ERC20: decimals exceed 2^8",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20.initializer"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 0,
                        "group": 55
                    },
                    "reference_ids": {}
                },
                "start_pc": 730,
                "end_pc": 735,
                "value": "ERC20: amount is not a valid Uint256",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20.approve"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 0,
                        "group": 57
                    },
                    "reference_ids": {}
                },
                "start_pc": 750,
                "end_pc": 755,
                "value": "ERC20: added_value is not a valid Uint256",
                "name": "error",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20.increase_allowance"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 88,
                        "group": 57
                    },
                    "reference_ids": {}
                },
                "start_pc": 765,
                "end_pc": 769,
                "value": "ERC20: allowance overflow",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20.increase_allowance"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 0,
                        "group": 59
                    },
                    "reference_ids": {}
                },
                "start_pc": 783,
                "end_pc": 788,
                "value": "ERC20: subtracted_value is not a valid Uint256",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20.decrease_allowance"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 88,
                        "group": 59
                    },
                    "reference_ids": {}
                },
                "start_pc": 798,
                "end_pc": 802,
                "value": "ERC20: allowance below zero",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20.decrease_allowance"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 0,
                        "group": 61
                    },
                    "reference_ids": {}
                },
                "start_pc": 814,
                "end_pc": 819,
                "value": "ERC20: amount is not a valid Uint256",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._transfer"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 6,
                        "group": 61
                    },
                    "reference_ids": {}
                },
                "start_pc": 819,
                "end_pc": 822,
                "value": "ERC20: cannot transfer from the zero address",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._transfer"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 9,
                        "group": 61
                    },
                    "reference_ids": {}
                },
                "start_pc": 822,
                "end_pc": 825,
                "value": "ERC20: cannot transfer to the zero address",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._transfer"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 81,
                        "group": 61
                    },
                    "reference_ids": {}
                },
                "start_pc": 831,
                "end_pc": 835,
                "value": "ERC20: transfer amount exceeds balance",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._transfer"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 0,
                        "group": 62
                    },
                    "reference_ids": {}
                },
                "start_pc": 870,
                "end_pc": 875,
                "value": "ERC20: amount is not a valid Uint256",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._approve"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 6,
                        "group": 62
                    },
                    "reference_ids": {}
                },
                "start_pc": 875,
                "end_pc": 878,
                "value": "ERC20: cannot approve from the zero address",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._approve"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 9,
                        "group": 62
                    },
                    "reference_ids": {}
                },
                "start_pc": 878,
                "end_pc": 881,
                "value": "ERC20: cannot approve to the zero address",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._approve"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 4,
                        "group": 63
                    },
                    "reference_ids": {}
                },
                "start_pc": 904,
                "end_pc": 909,
                "value": "ERC20: amount is not a valid Uint256",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._spend_allowance"
                ]
            },
            {
                "flow_tracking_data": {
                    "ap_tracking": {
                        "offset": 0,
                        "group": 64
                    },
                    "reference_ids": {}
                },
                "start_pc": 936,
                "end_pc": 943,
                "value": "ERC20: insufficient allowance",
                "name": "error_message",
                "accessible_scopes": [
                    "openzeppelin.token.erc20.library",
                    "openzeppelin.token.erc20.library.ERC20",
                    "openzeppelin.token.erc20.library.ERC20._spend_allowance"
                ]
            }
        ],
        "main_scope": "__main__",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc0",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffab",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa3",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xa",
            "0x400380007ffc7ffd",
            "0x40780017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xe",
            "0x484680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400280007ffc7fff",
            "0x40780017fff7fff",
            "0x11",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6f",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x2",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x404b800280028002",
            "0x404b800380038003",
            "0x482a7ffc7ffa8000",
            "0x4846800180028000",
            "0x100000000000000000000000000000000",
            "0x40327fff80007ffe",
            "0x482a7ffd7ffb8000",
            "0x482880027fff8000",
            "0x4846800180038000",
            "0x100000000000000000000000000000000",
            "0x40327fff80017ffe",
            "0x480a7ff97fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80037fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffb",
            "0x20680017fff7fff",
            "0x9",
            "0x480a7ff97fff8000",
            "0x482680017ffa8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48307ffd80007ffe",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0xffffffffffffffffffffffffffffffff",
            "0x480680017fff8000",
            "0xffffffffffffffffffffffffffffffff",
            "0x480a7ffb7fff8000",
            "0x48287ffc80007ffd",
            "0x48287ffd80007ffd",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbd",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffb",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x6",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x48297ffc80007ffa",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x6",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff89",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff85",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff72",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6e",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff94",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffae",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9a",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe94",
            "0x40137fff7fff8001",
            "0x4003800080017ffa",
            "0x4003800180017ffb",
            "0x4003800280017ffc",
            "0x4003800380017ffd",
            "0x4826800180018000",
            "0x4",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff15",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7f",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x134692b230b9e1ffa39098904722134159652b09c5bc41d88d6698779d228ff",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe79",
            "0x40137fff7fff8001",
            "0x4003800080017ffa",
            "0x4003800180017ffb",
            "0x4003800280017ffc",
            "0x4003800380017ffd",
            "0x4826800180018000",
            "0x4",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefa",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x341c1bdfd89f69748aa00b5742b03adbffd79b8e80cab5c50d91cd8c2a79be1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffedb",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed5",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xb6ce5410fca59d078ee9b2a4371a9d684c530d697c64fbef0ae6d5e8f0ac72",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebd",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb7",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1f0d4aa99431d246bac9b8e48c33e888245b15e9678f64f9bdfc8823dc8f979",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9f",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe99",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x110e2f729c9c2b988559994a3daccd838cf52faf88e18101373e67dd061455a",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe81",
            "0x48127ffe7fff8000",
            "0x482480017ff78000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7c",
            "0x48127ffe7fff8000",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x3a4e8ec16e258a799fe707996fd5d21d42b29adc1499a370edf7f809d8c458a",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf3",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3d",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5f",
            "0x48127ffe7fff8000",
            "0x482480017ff78000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5a",
            "0x48127ffe7fff8000",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe52",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4d",
            "0x48127ff07fff8000",
            "0x48127ff07fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x3c87bf42ed4f01f11883bf54f43d91d2cbbd5fec26d1df9c74c57ae138800a4",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbf",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbc",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe06",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe27",
            "0x48127ffe7fff8000",
            "0x482480017ff78000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe22",
            "0x48127ffe7fff8000",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x480a7ff77fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe19",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe14",
            "0x48127ff07fff8000",
            "0x48127ff07fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff30",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4b",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8d",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5e",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0f",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff27",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5d",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff39",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff71",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa0",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc3",
            "0x48127ffe7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x6e",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb4",
            "0x48127ffe7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xb7",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x59",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde4",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9a",
            "0x48127ffe7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x7d",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd0",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd86",
            "0x48127ffe7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff58",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe37",
            "0x48127fd17fff8000",
            "0x48127fd17fff8000",
            "0x48127ffb7fff8000",
            "0x48127f867fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x5e",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdaf",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd65",
            "0x48127ffe7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff37",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2b",
            "0x48127f707fff8000",
            "0x48127f707fff8000",
            "0x48127ffb7fff8000",
            "0x48127f257fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x3d",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd90",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd6",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd3",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffedf",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0a",
            "0x48127f707fff8000",
            "0x48127f707fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee7",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed0",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde6",
            "0x48127fd17fff8000",
            "0x48127fd17fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed8",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe06",
            "0x48127ffe7fff8000",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd58",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc9e",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc9b",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef0",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe01",
            "0x48127ffe7fff8000",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd36",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec1",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x40137ffb7fff8002",
            "0x40137ffc7fff8003",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5c",
            "0x48127ffd7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7c",
            "0x20680017fff7fff",
            "0x13",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9e",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb1",
            "0x208b7fff7fff7ffe",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x566f546f6b656e3230",
            "0x480680017fff8000",
            "0x564f47",
            "0x480680017fff8000",
            "0x12",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb5",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9d",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe85",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe6c",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe53",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe36",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe18",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe00",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdee",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffddc",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ]
                }
            ],
            "9": [
                {
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 2
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 0
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ]
                }
            ],
            "14": [
                {
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 3
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 1
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ]
                }
            ],
            "23": [
                {
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 4,
                            "starkware.cairo.common.math.assert_250_bit.low": 3,
                            "starkware.cairo.common.math.assert_250_bit.value": 2
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ]
                }
            ],
            "36": [
                {
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 6
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 5,
                            "starkware.cairo.common.math.assert_le_felt.b": 6,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 7
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ]
                }
            ],
            "46": [
                {
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 8,
                            "group": 6
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ]
                }
            ],
            "60": [
                {
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 9,
                            "group": 6
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ]
                }
            ],
            "72": [
                {
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 10,
                            "group": 6
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ]
                }
            ],
            "83": [
                {
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 1,
                            "group": 7
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 8,
                            "starkware.starknet.common.storage.normalize_address.is_small": 9
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ]
                }
            ],
            "101": [
                {
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 2,
                            "group": 7
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 8,
                            "starkware.starknet.common.storage.normalize_address.is_250": 10
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ]
                }
            ],
            "124": [
                {
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 1,
                            "group": 8
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 11
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ]
                }
            ],
            "132": [
                {
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 1,
                            "group": 9
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 12
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ]
                }
            ],
            "141": [
                {
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 1,
                            "group": 10
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 13
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ]
                }
            ],
            "151": [
                {
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 1,
                            "group": 11
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 14
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ]
                }
            ],
            "154": [
                {
                    "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 12
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 15
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ]
                }
            ],
            "164": [
                {
                    "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 1,
                            "group": 12
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 15
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ]
                }
            ],
            "199": [
                {
                    "code": "sum_low = ids.a.low + ids.b.low\nids.carry_low = 1 if sum_low >= ids.SHIFT else 0\nsum_high = ids.a.high + ids.b.high + ids.carry_low\nids.carry_high = 1 if sum_high >= ids.SHIFT else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 4,
                            "group": 15
                        },
                        "reference_ids": {
                            "starkware.cairo.common.uint256.uint256_add.a": 16,
                            "starkware.cairo.common.uint256.uint256_add.b": 17,
                            "starkware.cairo.common.uint256.uint256_add.carry_high": 19,
                            "starkware.cairo.common.uint256.uint256_add.carry_low": 18
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.uint256",
                        "starkware.cairo.common.uint256.uint256_add"
                    ]
                }
            ],
            "975": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 85,
                            "group": 66
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.constructor"
                    ]
                }
            ],
            "990": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 68
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.name_encode_return"
                    ]
                }
            ],
            "1020": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 71
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.symbol_encode_return"
                    ]
                }
            ],
            "1050": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 74
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.totalSupply_encode_return"
                    ]
                }
            ],
            "1081": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 77
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.decimals_encode_return"
                    ]
                }
            ],
            "1112": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 80
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.balanceOf_encode_return"
                    ]
                }
            ],
            "1148": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 83
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.allowance_encode_return"
                    ]
                }
            ],
            "1186": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 87
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.transfer_encode_return"
                    ]
                }
            ],
            "1225": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 92
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.transferFrom_encode_return"
                    ]
                }
            ],
            "1264": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 97
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.approve_encode_return"
                    ]
                }
            ],
            "1302": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 102
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.increaseAllowance_encode_return"
                    ]
                }
            ],
            "1340": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "offset": 0,
                            "group": 107
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.decreaseAllowance_encode_return"
                    ]
                }
            ]
        },
        "compiler_version": "0.10.1",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 2
                    },
                    "pc": 9,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 3
                    },
                    "pc": 14,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 5
                    },
                    "pc": 23,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 5
                    },
                    "pc": 23,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 5
                    },
                    "pc": 23,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 6
                    },
                    "pc": 36,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 6
                    },
                    "pc": 36,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 6
                    },
                    "pc": 36,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 7
                    },
                    "pc": 81,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 1,
                        "group": 7
                    },
                    "pc": 83,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 2,
                        "group": 7
                    },
                    "pc": 101,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 8
                    },
                    "pc": 121,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 9
                    },
                    "pc": 128,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 10
                    },
                    "pc": 136,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 11
                    },
                    "pc": 144,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 12
                    },
                    "pc": 154,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 15
                    },
                    "pc": 197,
                    "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 0,
                        "group": 15
                    },
                    "pc": 197,
                    "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 4,
                        "group": 15
                    },
                    "pc": 199,
                    "value": "[cast(fp + 2, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "offset": 4,
                        "group": 15
                    },
                    "pc": 199,
                    "value": "[cast(fp + 3, felt*)]"
                }
            ]
        },
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "identifiers": {
            "__main__.ERC20": {
                "destination": "openzeppelin.token.erc20.library.ERC20",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "__main__.allowance": {
                "decorators": [
                    "view"
                ],
                "pc": 1140,
                "type": "function"
            },
            "__main__.allowance.Args": {
                "size": 2,
                "full_name": "__main__.allowance.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__main__.allowance.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.allowance.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.allowance.Return": {
                "cairo_type": "(remaining: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.allowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.approve": {
                "decorators": [
                    "external"
                ],
                "pc": 1255,
                "type": "function"
            },
            "__main__.approve.Args": {
                "size": 3,
                "full_name": "__main__.approve.Args",
                "members": {
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__main__.approve.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.approve.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.approve.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "__main__.approve.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 1105,
                "type": "function"
            },
            "__main__.balanceOf.Args": {
                "size": 1,
                "full_name": "__main__.balanceOf.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "__main__.balanceOf.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.balanceOf.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.balanceOf.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.balanceOf.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 957,
                "type": "function"
            },
            "__main__.constructor.Args": {
                "size": 0,
                "full_name": "__main__.constructor.Args",
                "members": {},
                "type": "struct"
            },
            "__main__.constructor.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.constructor.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.constructor.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.constructor.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.decimals": {
                "decorators": [
                    "view"
                ],
                "pc": 1075,
                "type": "function"
            },
            "__main__.decimals.Args": {
                "size": 0,
                "full_name": "__main__.decimals.Args",
                "members": {},
                "type": "struct"
            },
            "__main__.decimals.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.decimals.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.decimals.Return": {
                "cairo_type": "(decimals: felt)",
                "type": "type_definition"
            },
            "__main__.decimals.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.decreaseAllowance": {
                "decorators": [
                    "external"
                ],
                "pc": 1331,
                "type": "function"
            },
            "__main__.decreaseAllowance.Args": {
                "size": 3,
                "full_name": "__main__.decreaseAllowance.Args",
                "members": {
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "subtracted_value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__main__.decreaseAllowance.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.decreaseAllowance.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.decreaseAllowance.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "__main__.decreaseAllowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.increaseAllowance": {
                "decorators": [
                    "external"
                ],
                "pc": 1293,
                "type": "function"
            },
            "__main__.increaseAllowance.Args": {
                "size": 3,
                "full_name": "__main__.increaseAllowance.Args",
                "members": {
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "added_value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__main__.increaseAllowance.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.increaseAllowance.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.increaseAllowance.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "__main__.increaseAllowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.name": {
                "decorators": [
                    "view"
                ],
                "pc": 984,
                "type": "function"
            },
            "__main__.name.Args": {
                "size": 0,
                "full_name": "__main__.name.Args",
                "members": {},
                "type": "struct"
            },
            "__main__.name.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.name.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.name.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "__main__.name.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.symbol": {
                "decorators": [
                    "view"
                ],
                "pc": 1014,
                "type": "function"
            },
            "__main__.symbol.Args": {
                "size": 0,
                "full_name": "__main__.symbol.Args",
                "members": {},
                "type": "struct"
            },
            "__main__.symbol.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.symbol.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.symbol.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "__main__.symbol.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.totalSupply": {
                "decorators": [
                    "view"
                ],
                "pc": 1044,
                "type": "function"
            },
            "__main__.totalSupply.Args": {
                "size": 0,
                "full_name": "__main__.totalSupply.Args",
                "members": {},
                "type": "struct"
            },
            "__main__.totalSupply.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.totalSupply.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.totalSupply.Return": {
                "cairo_type": "(totalSupply: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.totalSupply.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.transfer": {
                "decorators": [
                    "external"
                ],
                "pc": 1177,
                "type": "function"
            },
            "__main__.transfer.Args": {
                "size": 3,
                "full_name": "__main__.transfer.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__main__.transfer.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.transfer.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.transfer.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "__main__.transfer.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.transferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 1215,
                "type": "function"
            },
            "__main__.transferFrom.Args": {
                "size": 4,
                "full_name": "__main__.transferFrom.Args",
                "members": {
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.transferFrom.ImplicitArgs": {
                "size": 3,
                "full_name": "__main__.transferFrom.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__main__.transferFrom.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "__main__.transferFrom.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.allowance": {
                "decorators": [
                    "view"
                ],
                "pc": 1158,
                "type": "function"
            },
            "__wrappers__.allowance.Args": {
                "size": 0,
                "full_name": "__wrappers__.allowance.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.allowance.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.allowance.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.allowance.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.allowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.allowance.__wrapped_func": {
                "destination": "__main__.allowance",
                "type": "alias"
            },
            "__wrappers__.allowance_encode_return": {
                "decorators": [],
                "pc": 1148,
                "type": "function"
            },
            "__wrappers__.allowance_encode_return.Args": {
                "size": 3,
                "full_name": "__wrappers__.allowance_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(remaining: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__wrappers__.allowance_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.allowance_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.allowance_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.allowance_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.allowance_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.approve": {
                "decorators": [
                    "external"
                ],
                "pc": 1273,
                "type": "function"
            },
            "__wrappers__.approve.Args": {
                "size": 0,
                "full_name": "__wrappers__.approve.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.approve.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.approve.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.approve.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.approve.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.approve.__wrapped_func": {
                "destination": "__main__.approve",
                "type": "alias"
            },
            "__wrappers__.approve_encode_return": {
                "decorators": [],
                "pc": 1264,
                "type": "function"
            },
            "__wrappers__.approve_encode_return.Args": {
                "size": 2,
                "full_name": "__wrappers__.approve_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__wrappers__.approve_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.approve_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.approve_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.approve_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.approve_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 1122,
                "type": "function"
            },
            "__wrappers__.balanceOf.Args": {
                "size": 0,
                "full_name": "__wrappers__.balanceOf.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.balanceOf.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.balanceOf.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.balanceOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.balanceOf.__wrapped_func": {
                "destination": "__main__.balanceOf",
                "type": "alias"
            },
            "__wrappers__.balanceOf_encode_return": {
                "decorators": [],
                "pc": 1112,
                "type": "function"
            },
            "__wrappers__.balanceOf_encode_return.Args": {
                "size": 3,
                "full_name": "__wrappers__.balanceOf_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.balanceOf_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.balanceOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 969,
                "type": "function"
            },
            "__wrappers__.constructor.Args": {
                "size": 0,
                "full_name": "__wrappers__.constructor.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.constructor.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.constructor.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.constructor.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.constructor.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.constructor.__wrapped_func": {
                "destination": "__main__.constructor",
                "type": "alias"
            },
            "__wrappers__.constructor_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.decimals": {
                "decorators": [
                    "view"
                ],
                "pc": 1090,
                "type": "function"
            },
            "__wrappers__.decimals.Args": {
                "size": 0,
                "full_name": "__wrappers__.decimals.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.decimals.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.decimals.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.decimals.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.decimals.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.decimals.__wrapped_func": {
                "destination": "__main__.decimals",
                "type": "alias"
            },
            "__wrappers__.decimals_encode_return": {
                "decorators": [],
                "pc": 1081,
                "type": "function"
            },
            "__wrappers__.decimals_encode_return.Args": {
                "size": 2,
                "full_name": "__wrappers__.decimals_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(decimals: felt)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__wrappers__.decimals_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.decimals_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.decimals_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.decimals_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.decimals_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.decreaseAllowance": {
                "decorators": [
                    "external"
                ],
                "pc": 1349,
                "type": "function"
            },
            "__wrappers__.decreaseAllowance.Args": {
                "size": 0,
                "full_name": "__wrappers__.decreaseAllowance.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.decreaseAllowance.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.decreaseAllowance.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.decreaseAllowance.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.decreaseAllowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.decreaseAllowance.__wrapped_func": {
                "destination": "__main__.decreaseAllowance",
                "type": "alias"
            },
            "__wrappers__.decreaseAllowance_encode_return": {
                "decorators": [],
                "pc": 1340,
                "type": "function"
            },
            "__wrappers__.decreaseAllowance_encode_return.Args": {
                "size": 2,
                "full_name": "__wrappers__.decreaseAllowance_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__wrappers__.decreaseAllowance_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.decreaseAllowance_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.decreaseAllowance_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.decreaseAllowance_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.decreaseAllowance_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.increaseAllowance": {
                "decorators": [
                    "external"
                ],
                "pc": 1311,
                "type": "function"
            },
            "__wrappers__.increaseAllowance.Args": {
                "size": 0,
                "full_name": "__wrappers__.increaseAllowance.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.increaseAllowance.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.increaseAllowance.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.increaseAllowance.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.increaseAllowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.increaseAllowance.__wrapped_func": {
                "destination": "__main__.increaseAllowance",
                "type": "alias"
            },
            "__wrappers__.increaseAllowance_encode_return": {
                "decorators": [],
                "pc": 1302,
                "type": "function"
            },
            "__wrappers__.increaseAllowance_encode_return.Args": {
                "size": 2,
                "full_name": "__wrappers__.increaseAllowance_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__wrappers__.increaseAllowance_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.increaseAllowance_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.increaseAllowance_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.increaseAllowance_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.increaseAllowance_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.name": {
                "decorators": [
                    "view"
                ],
                "pc": 999,
                "type": "function"
            },
            "__wrappers__.name.Args": {
                "size": 0,
                "full_name": "__wrappers__.name.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.name.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.name.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.name.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.name.__wrapped_func": {
                "destination": "__main__.name",
                "type": "alias"
            },
            "__wrappers__.name_encode_return": {
                "decorators": [],
                "pc": 990,
                "type": "function"
            },
            "__wrappers__.name_encode_return.Args": {
                "size": 2,
                "full_name": "__wrappers__.name_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(name: felt)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__wrappers__.name_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.name_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.name_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.name_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.symbol": {
                "decorators": [
                    "view"
                ],
                "pc": 1029,
                "type": "function"
            },
            "__wrappers__.symbol.Args": {
                "size": 0,
                "full_name": "__wrappers__.symbol.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.symbol.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.symbol.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.symbol.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.symbol.__wrapped_func": {
                "destination": "__main__.symbol",
                "type": "alias"
            },
            "__wrappers__.symbol_encode_return": {
                "decorators": [],
                "pc": 1020,
                "type": "function"
            },
            "__wrappers__.symbol_encode_return.Args": {
                "size": 2,
                "full_name": "__wrappers__.symbol_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(symbol: felt)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__wrappers__.symbol_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.symbol_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.symbol_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.symbol_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.totalSupply": {
                "decorators": [
                    "view"
                ],
                "pc": 1060,
                "type": "function"
            },
            "__wrappers__.totalSupply.Args": {
                "size": 0,
                "full_name": "__wrappers__.totalSupply.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.totalSupply.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.totalSupply.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.totalSupply.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.totalSupply.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.totalSupply.__wrapped_func": {
                "destination": "__main__.totalSupply",
                "type": "alias"
            },
            "__wrappers__.totalSupply_encode_return": {
                "decorators": [],
                "pc": 1050,
                "type": "function"
            },
            "__wrappers__.totalSupply_encode_return.Args": {
                "size": 3,
                "full_name": "__wrappers__.totalSupply_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(totalSupply: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "__wrappers__.totalSupply_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.totalSupply_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.totalSupply_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.totalSupply_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.totalSupply_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transfer": {
                "decorators": [
                    "external"
                ],
                "pc": 1195,
                "type": "function"
            },
            "__wrappers__.transfer.Args": {
                "size": 0,
                "full_name": "__wrappers__.transfer.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.transfer.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.transfer.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.transfer.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transfer.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.transfer.__wrapped_func": {
                "destination": "__main__.transfer",
                "type": "alias"
            },
            "__wrappers__.transferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 1234,
                "type": "function"
            },
            "__wrappers__.transferFrom.Args": {
                "size": 0,
                "full_name": "__wrappers__.transferFrom.Args",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.transferFrom.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.transferFrom.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.transferFrom.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferFrom.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.transferFrom.__wrapped_func": {
                "destination": "__main__.transferFrom",
                "type": "alias"
            },
            "__wrappers__.transferFrom_encode_return": {
                "decorators": [],
                "pc": 1225,
                "type": "function"
            },
            "__wrappers__.transferFrom_encode_return.Args": {
                "size": 2,
                "full_name": "__wrappers__.transferFrom_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__wrappers__.transferFrom_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.transferFrom_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.transferFrom_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferFrom_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.transferFrom_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transfer_encode_return": {
                "decorators": [],
                "pc": 1186,
                "type": "function"
            },
            "__wrappers__.transfer_encode_return.Args": {
                "size": 2,
                "full_name": "__wrappers__.transfer_encode_return.Args",
                "members": {
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "__wrappers__.transfer_encode_return.ImplicitArgs": {
                "size": 0,
                "full_name": "__wrappers__.transfer_encode_return.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "__wrappers__.transfer_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transfer_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.transfer_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.SafeUint256": {
                "type": "namespace"
            },
            "openzeppelin.security.safemath.library.SafeUint256.Args": {
                "size": 0,
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.safemath.library.SafeUint256.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add": {
                "decorators": [],
                "pc": 309,
                "type": "function"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add.Args": {
                "size": 4,
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.add.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add.ImplicitArgs": {
                "size": 1,
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.add.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add.Return": {
                "cairo_type": "(c: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le": {
                "decorators": [],
                "pc": 330,
                "type": "function"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le.Args": {
                "size": 4,
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.sub_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le.ImplicitArgs": {
                "size": 1,
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.sub_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le.Return": {
                "cairo_type": "(c: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.security.safemath.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_add": {
                "destination": "starkware.cairo.common.uint256.uint256_add",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_eq": {
                "destination": "starkware.cairo.common.uint256.uint256_eq",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_le": {
                "destination": "starkware.cairo.common.uint256.uint256_le",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_lt": {
                "destination": "starkware.cairo.common.uint256.uint256_lt",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_mul": {
                "destination": "starkware.cairo.common.uint256.uint256_mul",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_sub": {
                "destination": "starkware.cairo.common.uint256.uint256_sub",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_unsigned_div_rem": {
                "destination": "starkware.cairo.common.uint256.uint256_unsigned_div_rem",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.Approval": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.Approval.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.Approval.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.Approval.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.Approval.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.Approval.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.Approval.SELECTOR": {
                "value": 544914742286571513055574265148471203182105283038408585630116262969508767999,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.Approval.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.Approval.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.Approval.emit": {
                "decorators": [],
                "pc": 384,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.Approval.emit.Args": {
                "size": 4,
                "full_name": "openzeppelin.token.erc20.library.Approval.emit.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.Approval.emit.ImplicitArgs": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.Approval.emit.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.Approval.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.Approval.emit.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.Approval.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.Approval.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.ERC20.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20._approve": {
                "decorators": [],
                "pc": 870,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20._approve.Args": {
                "size": 4,
                "full_name": "openzeppelin.token.erc20.library.ERC20._approve.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20._approve.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20._approve.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20._approve.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20._approve.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20._spend_allowance": {
                "decorators": [],
                "pc": 902,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20._spend_allowance.Args": {
                "size": 4,
                "full_name": "openzeppelin.token.erc20.library.ERC20._spend_allowance.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20._spend_allowance.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20._spend_allowance.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20._spend_allowance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20._spend_allowance.SIZEOF_LOCALS": {
                "value": 4,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20._transfer": {
                "decorators": [],
                "pc": 814,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20._transfer.Args": {
                "size": 4,
                "full_name": "openzeppelin.token.erc20.library.ERC20._transfer.Args",
                "members": {
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20._transfer.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20._transfer.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20._transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20._transfer.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.allowance": {
                "decorators": [],
                "pc": 686,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.allowance.Args": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20.allowance.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.allowance.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.allowance.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.allowance.Return": {
                "cairo_type": "(remaining: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.allowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.approve": {
                "decorators": [],
                "pc": 730,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.approve.Args": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.approve.Args",
                "members": {
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.approve.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.approve.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.approve.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.approve.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.balance_of": {
                "decorators": [],
                "pc": 679,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.balance_of.Args": {
                "size": 1,
                "full_name": "openzeppelin.token.erc20.library.ERC20.balance_of.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.balance_of.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.balance_of.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.balance_of.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.balance_of.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.decimals": {
                "decorators": [],
                "pc": 673,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.decimals.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20.decimals.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.decimals.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.decimals.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.decimals.Return": {
                "cairo_type": "(decimals: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.decimals.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.decrease_allowance": {
                "decorators": [],
                "pc": 781,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.decrease_allowance.Args": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.decrease_allowance.Args",
                "members": {
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "subtracted_value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.decrease_allowance.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.decrease_allowance.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.decrease_allowance.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.decrease_allowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.increase_allowance": {
                "decorators": [],
                "pc": 750,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.increase_allowance.Args": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.increase_allowance.Args",
                "members": {
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "added_value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.increase_allowance.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.increase_allowance.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.increase_allowance.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.increase_allowance.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.initializer": {
                "decorators": [],
                "pc": 634,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.initializer.Args": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.initializer.Args",
                "members": {
                    "name": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "symbol": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "decimals": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.initializer.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.initializer.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.initializer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.initializer.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.name": {
                "decorators": [],
                "pc": 655,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.name.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20.name.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.name.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.name.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.name.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.name.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.symbol": {
                "decorators": [],
                "pc": 661,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.symbol.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20.symbol.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.symbol.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.symbol.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.symbol.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.symbol.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.total_supply": {
                "decorators": [],
                "pc": 667,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.total_supply.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20.total_supply.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.total_supply.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.total_supply.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.total_supply.Return": {
                "cairo_type": "(total_supply: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.total_supply.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer": {
                "decorators": [],
                "pc": 694,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer.Args": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.transfer.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.transfer.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer_from": {
                "decorators": [],
                "pc": 709,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer_from.Args": {
                "size": 4,
                "full_name": "openzeppelin.token.erc20.library.ERC20.transfer_from.Args",
                "members": {
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer_from.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20.transfer_from.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer_from.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20.transfer_from.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_allowances.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_allowances.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.addr": {
                "decorators": [],
                "pc": 577,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.addr.Args": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20_allowances.addr.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.addr.ImplicitArgs": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20_allowances.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.read": {
                "decorators": [],
                "pc": 594,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.read.Args": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20_allowances.read.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.read.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_allowances.read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.read.Return": {
                "cairo_type": "(remaining: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.write": {
                "decorators": [],
                "pc": 615,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.write.Args": {
                "size": 4,
                "full_name": "openzeppelin.token.erc20.library.ERC20_allowances.write.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.write.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_allowances.write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_allowances.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_balances": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_balances.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_balances.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.addr": {
                "decorators": [],
                "pc": 525,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.addr.Args": {
                "size": 1,
                "full_name": "openzeppelin.token.erc20.library.ERC20_balances.addr.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.addr.ImplicitArgs": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20_balances.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.read": {
                "decorators": [],
                "pc": 539,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.read.Args": {
                "size": 1,
                "full_name": "openzeppelin.token.erc20.library.ERC20_balances.read.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.read.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_balances.read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.read.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.write": {
                "decorators": [],
                "pc": 559,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.write.Args": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_balances.write.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.write.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_balances.write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_balances.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_decimals.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_decimals.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.addr": {
                "decorators": [],
                "pc": 471,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.addr.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_decimals.addr.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.addr.ImplicitArgs": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20_decimals.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.read": {
                "decorators": [],
                "pc": 476,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.read.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_decimals.read.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.read.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_decimals.read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.read.Return": {
                "cairo_type": "(decimals: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.write": {
                "decorators": [],
                "pc": 489,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.write.Args": {
                "size": 1,
                "full_name": "openzeppelin.token.erc20.library.ERC20_decimals.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.write.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_decimals.write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_decimals.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_name": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.ERC20_name.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_name.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_name.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_name.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_name.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_name.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_name.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_name.addr": {
                "decorators": [],
                "pc": 411,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_name.addr.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_name.addr.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_name.addr.ImplicitArgs": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20_name.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_name.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_name.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_name.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_name.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_name.read": {
                "decorators": [],
                "pc": 416,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_name.read.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_name.read.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_name.read.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_name.read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_name.read.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_name.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_name.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_name.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_name.write": {
                "decorators": [],
                "pc": 429,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_name.write.Args": {
                "size": 1,
                "full_name": "openzeppelin.token.erc20.library.ERC20_name.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_name.write.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_name.write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_name.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_name.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_symbol.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_symbol.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.addr": {
                "decorators": [],
                "pc": 441,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.addr.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_symbol.addr.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.addr.ImplicitArgs": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20_symbol.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.read": {
                "decorators": [],
                "pc": 446,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.read.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_symbol.read.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.read.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_symbol.read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.read.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.write": {
                "decorators": [],
                "pc": 459,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.write.Args": {
                "size": 1,
                "full_name": "openzeppelin.token.erc20.library.ERC20_symbol.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.write.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_symbol.write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_symbol.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_total_supply.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_total_supply.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.addr": {
                "decorators": [],
                "pc": 501,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.addr.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_total_supply.addr.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.addr.ImplicitArgs": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.ERC20_total_supply.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.read": {
                "decorators": [],
                "pc": 506,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.read.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.ERC20_total_supply.read.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.read.ImplicitArgs": {
                "size": 3,
                "full_name": "openzeppelin.token.erc20.library.ERC20_total_supply.read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.read.Return": {
                "cairo_type": "(total_supply: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.ERC20_total_supply.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.SafeUint256": {
                "destination": "openzeppelin.security.safemath.library.SafeUint256",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.Transfer": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.library.Transfer.Args": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.Transfer.Args",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.Transfer.ImplicitArgs": {
                "size": 0,
                "full_name": "openzeppelin.token.erc20.library.Transfer.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.Transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.Transfer.SELECTOR": {
                "value": 271746229759260285552388728919865295615886751538523744128730118297934206697,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.Transfer.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.Transfer.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.Transfer.emit": {
                "decorators": [],
                "pc": 357,
                "type": "function"
            },
            "openzeppelin.token.erc20.library.Transfer.emit.Args": {
                "size": 4,
                "full_name": "openzeppelin.token.erc20.library.Transfer.emit.Args",
                "members": {
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.Transfer.emit.ImplicitArgs": {
                "size": 2,
                "full_name": "openzeppelin.token.erc20.library.Transfer.emit.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "openzeppelin.token.erc20.library.Transfer.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.library.Transfer.emit.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "openzeppelin.token.erc20.library.Transfer.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.Transfer.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.UINT8_MAX": {
                "destination": "openzeppelin.utils.constants.library.UINT8_MAX",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.uint256_eq": {
                "destination": "starkware.cairo.common.uint256.uint256_eq",
                "type": "alias"
            },
            "openzeppelin.token.erc20.library.uint256_not": {
                "destination": "starkware.cairo.common.uint256.uint256_not",
                "type": "alias"
            },
            "openzeppelin.utils.constants.library.DEFAULT_ADMIN_ROLE": {
                "value": 0,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IACCESSCONTROL_ID": {
                "value": 2036718347,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IACCOUNT_ID": {
                "value": 2792084853,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IERC1155_ID": {
                "value": 3652614694,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IERC1155_METADATA_ID": {
                "value": 243872796,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IERC1155_RECEIVER_ID": {
                "value": 1310921440,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IERC165_ID": {
                "value": 33540519,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IERC721_ENUMERABLE_ID": {
                "value": 2014223715,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IERC721_ID": {
                "value": 2158778573,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IERC721_METADATA_ID": {
                "value": 1532892063,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.IERC721_RECEIVER_ID": {
                "value": 353073666,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.INVALID_ID": {
                "value": 4294967295,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.ON_ERC1155_BATCH_RECEIVED_SELECTOR": {
                "value": 3155786881,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.ON_ERC1155_RECEIVED_SELECTOR": {
                "value": 4063915617,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.TRANSACTION_VERSION": {
                "value": 1,
                "type": "const"
            },
            "openzeppelin.utils.constants.library.UINT8_MAX": {
                "value": 255,
                "type": "const"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "size": 0,
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "size": 0,
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "value": -106710729501573572985208420194530329073740042555888586719234,
                "type": "const"
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bool.FALSE": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.bool.TRUE": {
                "value": 1,
                "type": "const"
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "size": 5,
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "size": 7,
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "size": 3,
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "size": 16,
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "size": 2,
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "size": 3,
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "size": 2,
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "size": 2,
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "size": 8,
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 23,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "size": 1,
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "value": 5316911983139663491615228241121378304,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "value": 340282366920938463463374607431768211456,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 5
                        },
                        "pc": 23,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 5
                        },
                        "pc": 23,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 5
                        },
                        "pc": 23,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 18,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "size": 2,
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 36,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "size": 2,
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "value": 5316911983139663648412552867652567041,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "value": 3544607988759775765608368578435044694,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 6
                        },
                        "pc": 36,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 6
                        },
                        "pc": 36,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 6
                        },
                        "pc": 36,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "offset": 8,
                            "group": 6
                        },
                        "pc": 46,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 60,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 72,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 14,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "size": 1,
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 3
                        },
                        "pc": 14,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "size": 1,
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "size": 0,
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 2
                        },
                        "pc": 9,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "value": 340282366920938463463374607431768211456,
                "type": "const"
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 187,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le.Args": {
                "size": 2,
                "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math_cmp.is_nn": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 154,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_nn.Args": {
                "size": 1,
                "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math_cmp.is_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 12
                        },
                        "pc": 154,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
                "pc": 178,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
                "pc": 164,
                "type": "label"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "value": 340282366920938463463374607431768211455,
                "type": "const"
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "value": 18446744073709551616,
                "type": "const"
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "value": 340282366920938463463374607431768211456,
                "type": "const"
            },
            "starkware.cairo.common.uint256.Uint256": {
                "size": 2,
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.uint256_add": {
                "decorators": [],
                "pc": 197,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_add.Args": {
                "size": 4,
                "full_name": "starkware.cairo.common.uint256.uint256_add.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_add.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.uint256.uint256_add.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_add.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256, carry: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_add.SIZEOF_LOCALS": {
                "value": 4,
                "type": "const"
            },
            "starkware.cairo.common.uint256.uint256_add.a": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_add.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 15
                        },
                        "pc": 197,
                        "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_add.b": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_add.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 15
                        },
                        "pc": 197,
                        "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_add.carry_high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.uint256.uint256_add.carry_high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 4,
                            "group": 15
                        },
                        "pc": 199,
                        "value": "[cast(fp + 3, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_add.carry_low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.uint256.uint256_add.carry_low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 4,
                            "group": 15
                        },
                        "pc": 199,
                        "value": "[cast(fp + 2, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_check": {
                "decorators": [],
                "pc": 192,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_check.Args": {
                "size": 2,
                "full_name": "starkware.cairo.common.uint256.uint256_check.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.uint256.uint256_check.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_check.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.uint256.uint256_eq": {
                "decorators": [],
                "pc": 287,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_eq.Args": {
                "size": 4,
                "full_name": "starkware.cairo.common.uint256.uint256_eq.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_eq.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.uint256.uint256_eq.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_eq.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_eq.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.uint256.uint256_le": {
                "decorators": [],
                "pc": 236,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_le.Args": {
                "size": 4,
                "full_name": "starkware.cairo.common.uint256.uint256_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_le.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.uint256.uint256_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_le.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_le.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.uint256.uint256_lt": {
                "decorators": [],
                "pc": 219,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_lt.Args": {
                "size": 4,
                "full_name": "starkware.cairo.common.uint256.uint256_lt.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_lt.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_lt.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.uint256.uint256_neg": {
                "decorators": [],
                "pc": 256,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_neg.Args": {
                "size": 2,
                "full_name": "starkware.cairo.common.uint256.uint256_neg.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_neg.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_neg.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.uint256.uint256_not": {
                "decorators": [],
                "pc": 248,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_not.Args": {
                "size": 2,
                "full_name": "starkware.cairo.common.uint256.uint256_not.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_not.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.uint256.uint256_not.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_not.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_not.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.uint256.uint256_sub": {
                "decorators": [],
                "pc": 271,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_sub.Args": {
                "size": 4,
                "full_name": "starkware.cairo.common.uint256.uint256_sub.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_sub.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_sub.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "value": -106710729501573572985208420194530329073740042555888586719489,
                "type": "const"
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "value": 256,
                "type": "const"
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 81,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "size": 1,
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "members": {
                    "addr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 7
                        },
                        "pc": 81,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 2,
                            "group": 7
                        },
                        "pc": 101,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 1,
                            "group": 7
                        },
                        "pc": 83,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "value": 20853273475220472486191784820,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "size": 7,
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "size": 5,
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "value": 21167594061783206823196716140,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "value": 23274015802972845247556842986379118667122,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "value": 75202468540281,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "size": 9,
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "size": 6,
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "size": 3,
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "value": 1280709301550335749748,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "size": 5,
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "value": 1448089106835523001438702345020786,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "value": 24294903732626645868215235778792757751152,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "value": 94901967781393078444254803017658102643,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "value": 6219495360805491471215297013070624192820083,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "value": 1592190833581991703053805829594610833820054387,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "value": 1317029390204112103023,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "value": 1448089128652340074717162277007973,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "size": 3,
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "value": 436233452754198157705746250789557519228244616562,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "value": 92376026794327011772951660,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "size": 7,
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "size": 5,
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "value": 433017908768303439907196859243777073,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "value": 100890693370601760042082660,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "value": 25828017502874050592466629733,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "size": 4,
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "size": 3,
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "size": 3,
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "size": 8,
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 144,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "size": 4,
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 11
                        },
                        "pc": 144,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "offset": 1,
                            "group": 11
                        },
                        "pc": 151,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 121,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "size": 0,
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 8
                        },
                        "pc": 121,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "offset": 1,
                            "group": 8
                        },
                        "pc": 124,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 128,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 9
                        },
                        "pc": 128,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "offset": 1,
                            "group": 9
                        },
                        "pc": 132,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 136,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "size": 2,
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "size": 1,
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "offset": 0,
                            "group": 10
                        },
                        "pc": 136,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "offset": 1,
                            "group": 10
                        },
                        "pc": 141,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "builtins": [
            "pedersen",
            "range_check"
        ]
    }
}