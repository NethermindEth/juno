// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NethermindEth/juno/consensus/db (interfaces: TendermintDB)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_db.go -package=mocks github.com/NethermindEth/juno/consensus/db TendermintDB
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	db "github.com/NethermindEth/juno/consensus/db"
	types "github.com/NethermindEth/juno/consensus/types"
	gomock "go.uber.org/mock/gomock"
)

// MockTendermintDB is a mock of TendermintDB interface.
type MockTendermintDB[V types.Hashable] struct {
	ctrl     *gomock.Controller
	recorder *MockTendermintDBMockRecorder[V]
	isgomock struct{}
}

// MockTendermintDBMockRecorder is the mock recorder for MockTendermintDB.
type MockTendermintDBMockRecorder[V types.Hashable] struct {
	mock *MockTendermintDB[V]
}

// NewMockTendermintDB creates a new mock instance.
func NewMockTendermintDB[V types.Hashable](ctrl *gomock.Controller) *MockTendermintDB[V] {
	mock := &MockTendermintDB[V]{ctrl: ctrl}
	mock.recorder = &MockTendermintDBMockRecorder[V]{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTendermintDB[V]) EXPECT() *MockTendermintDBMockRecorder[V] {
	return m.recorder
}

// DeleteWALEntries mocks base method.
func (m *MockTendermintDB[V]) DeleteWALEntries(height types.Height) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWALEntries", height)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWALEntries indicates an expected call of DeleteWALEntries.
func (mr *MockTendermintDBMockRecorder[V]) DeleteWALEntries(height any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWALEntries", reflect.TypeOf((*MockTendermintDB[V])(nil).DeleteWALEntries), height)
}

// Flush mocks base method.
func (m *MockTendermintDB[V]) Flush() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Flush")
	ret0, _ := ret[0].(error)
	return ret0
}

// Flush indicates an expected call of Flush.
func (mr *MockTendermintDBMockRecorder[V]) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockTendermintDB[V])(nil).Flush))
}

// GetWALEntries mocks base method.
func (m *MockTendermintDB[V]) GetWALEntries(height types.Height) ([]db.WalEntry[V], error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWALEntries", height)
	ret0, _ := ret[0].([]db.WalEntry[V])
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWALEntries indicates an expected call of GetWALEntries.
func (mr *MockTendermintDBMockRecorder[V]) GetWALEntries(height any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWALEntries", reflect.TypeOf((*MockTendermintDB[V])(nil).GetWALEntries), height)
}

// SetWALEntry mocks base method.
func (m *MockTendermintDB[V]) SetWALEntry(entry types.Message[V]) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetWALEntry", entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetWALEntry indicates an expected call of SetWALEntry.
func (mr *MockTendermintDBMockRecorder[V]) SetWALEntry(entry any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWALEntry", reflect.TypeOf((*MockTendermintDB[V])(nil).SetWALEntry), entry)
}
