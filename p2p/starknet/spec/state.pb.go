// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.25.1
// source: p2p/proto/state.proto

package spec

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// optimized for flat storage, not through a trie (not sharing key prefixes)
type ContractStoredValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *Felt252 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *Felt252 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContractStoredValue) Reset() {
	*x = ContractStoredValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractStoredValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractStoredValue) ProtoMessage() {}

func (x *ContractStoredValue) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractStoredValue.ProtoReflect.Descriptor instead.
func (*ContractStoredValue) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{0}
}

func (x *ContractStoredValue) GetKey() *Felt252 {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ContractStoredValue) GetValue() *Felt252 {
	if x != nil {
		return x.Value
	}
	return nil
}

type ContractDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   *Address               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Nonce     *Felt252               `protobuf:"bytes,2,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`                          // Present only if the nonce was updated
	ClassHash *Hash                  `protobuf:"bytes,3,opt,name=class_hash,json=classHash,proto3,oneof" json:"class_hash,omitempty"` // Present only if the contract was deployed or replaced in this block.
	Values    []*ContractStoredValue `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	Domain    VolitionDomain         `protobuf:"varint,5,opt,name=domain,proto3,enum=VolitionDomain" json:"domain,omitempty"`
}

func (x *ContractDiff) Reset() {
	*x = ContractDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractDiff) ProtoMessage() {}

func (x *ContractDiff) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractDiff.ProtoReflect.Descriptor instead.
func (*ContractDiff) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{1}
}

func (x *ContractDiff) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ContractDiff) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *ContractDiff) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *ContractDiff) GetValues() []*ContractStoredValue {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ContractDiff) GetDomain() VolitionDomain {
	if x != nil {
		return x.Domain
	}
	return VolitionDomain_L1
}

type DeclaredClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassHash         *Hash `protobuf:"bytes,1,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	CompiledClassHash *Hash `protobuf:"bytes,2,opt,name=compiled_class_hash,json=compiledClassHash,proto3,oneof" json:"compiled_class_hash,omitempty"` // Present only if the class is Cairo1
}

func (x *DeclaredClass) Reset() {
	*x = DeclaredClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclaredClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclaredClass) ProtoMessage() {}

func (x *DeclaredClass) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclaredClass.ProtoReflect.Descriptor instead.
func (*DeclaredClass) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{2}
}

func (x *DeclaredClass) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *DeclaredClass) GetCompiledClassHash() *Hash {
	if x != nil {
		return x.CompiledClassHash
	}
	return nil
}

type StateDiffsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iteration *Iteration `protobuf:"bytes,1,opt,name=iteration,proto3" json:"iteration,omitempty"`
}

func (x *StateDiffsRequest) Reset() {
	*x = StateDiffsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDiffsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDiffsRequest) ProtoMessage() {}

func (x *StateDiffsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDiffsRequest.ProtoReflect.Descriptor instead.
func (*StateDiffsRequest) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{3}
}

func (x *StateDiffsRequest) GetIteration() *Iteration {
	if x != nil {
		return x.Iteration
	}
	return nil
}

// Responses are sent ordered by the order given in the request.
type StateDiffsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All of the messages related to a block need to be sent before a message from the next block is sent.
	//
	// Types that are assignable to StateDiffMessage:
	//
	//	*StateDiffsResponse_ContractDiff
	//	*StateDiffsResponse_DeclaredClass
	//	*StateDiffsResponse_Fin
	StateDiffMessage isStateDiffsResponse_StateDiffMessage `protobuf_oneof:"state_diff_message"`
}

func (x *StateDiffsResponse) Reset() {
	*x = StateDiffsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDiffsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDiffsResponse) ProtoMessage() {}

func (x *StateDiffsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDiffsResponse.ProtoReflect.Descriptor instead.
func (*StateDiffsResponse) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{4}
}

func (m *StateDiffsResponse) GetStateDiffMessage() isStateDiffsResponse_StateDiffMessage {
	if m != nil {
		return m.StateDiffMessage
	}
	return nil
}

func (x *StateDiffsResponse) GetContractDiff() *ContractDiff {
	if x, ok := x.GetStateDiffMessage().(*StateDiffsResponse_ContractDiff); ok {
		return x.ContractDiff
	}
	return nil
}

func (x *StateDiffsResponse) GetDeclaredClass() *DeclaredClass {
	if x, ok := x.GetStateDiffMessage().(*StateDiffsResponse_DeclaredClass); ok {
		return x.DeclaredClass
	}
	return nil
}

func (x *StateDiffsResponse) GetFin() *Fin {
	if x, ok := x.GetStateDiffMessage().(*StateDiffsResponse_Fin); ok {
		return x.Fin
	}
	return nil
}

type isStateDiffsResponse_StateDiffMessage interface {
	isStateDiffsResponse_StateDiffMessage()
}

type StateDiffsResponse_ContractDiff struct {
	ContractDiff *ContractDiff `protobuf:"bytes,1,opt,name=contract_diff,json=contractDiff,proto3,oneof"` // Multiple contract diffs for the same contract may appear continuously if the diff is too large or if it's more convenient.
}

type StateDiffsResponse_DeclaredClass struct {
	DeclaredClass *DeclaredClass `protobuf:"bytes,2,opt,name=declared_class,json=declaredClass,proto3,oneof"`
}

type StateDiffsResponse_Fin struct {
	Fin *Fin `protobuf:"bytes,3,opt,name=fin,proto3,oneof"` // Fin is sent after the peer sent all the data or when it encountered a block that it doesn't have its state diff.
}

func (*StateDiffsResponse_ContractDiff) isStateDiffsResponse_StateDiffMessage() {}

func (*StateDiffsResponse_DeclaredClass) isStateDiffsResponse_StateDiffMessage() {}

func (*StateDiffsResponse_Fin) isStateDiffsResponse_StateDiffMessage() {}

var File_p2p_proto_state_proto protoreflect.FileDescriptor

var file_p2p_proto_state_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x32, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x32, 0x70, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x51, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32,
	0x48, 0x00, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x56, 0x6f, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x6c,
	0x61, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0a, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x3a, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x3d, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x49, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x69, 0x66, 0x66, 0x48,
	0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x69, 0x66, 0x66, 0x12,
	0x37, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72,
	0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x6c, 0x61,
	0x72, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x03, 0x66, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x46, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x66,
	0x69, 0x6e, 0x42, 0x14, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x64, 0x45, 0x74, 0x68, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x2f, 0x70, 0x32, 0x70, 0x2f, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_p2p_proto_state_proto_rawDescOnce sync.Once
	file_p2p_proto_state_proto_rawDescData = file_p2p_proto_state_proto_rawDesc
)

func file_p2p_proto_state_proto_rawDescGZIP() []byte {
	file_p2p_proto_state_proto_rawDescOnce.Do(func() {
		file_p2p_proto_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_p2p_proto_state_proto_rawDescData)
	})
	return file_p2p_proto_state_proto_rawDescData
}

var (
	file_p2p_proto_state_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
	file_p2p_proto_state_proto_goTypes  = []interface{}{
		(*ContractStoredValue)(nil), // 0: ContractStoredValue
		(*ContractDiff)(nil),        // 1: ContractDiff
		(*DeclaredClass)(nil),       // 2: DeclaredClass
		(*StateDiffsRequest)(nil),   // 3: StateDiffsRequest
		(*StateDiffsResponse)(nil),  // 4: StateDiffsResponse
		(*Felt252)(nil),             // 5: Felt252
		(*Address)(nil),             // 6: Address
		(*Hash)(nil),                // 7: Hash
		(VolitionDomain)(0),         // 8: VolitionDomain
		(*Iteration)(nil),           // 9: Iteration
		(*Fin)(nil),                 // 10: Fin
	}
)
var file_p2p_proto_state_proto_depIdxs = []int32{
	5,  // 0: ContractStoredValue.key:type_name -> Felt252
	5,  // 1: ContractStoredValue.value:type_name -> Felt252
	6,  // 2: ContractDiff.address:type_name -> Address
	5,  // 3: ContractDiff.nonce:type_name -> Felt252
	7,  // 4: ContractDiff.class_hash:type_name -> Hash
	0,  // 5: ContractDiff.values:type_name -> ContractStoredValue
	8,  // 6: ContractDiff.domain:type_name -> VolitionDomain
	7,  // 7: DeclaredClass.class_hash:type_name -> Hash
	7,  // 8: DeclaredClass.compiled_class_hash:type_name -> Hash
	9,  // 9: StateDiffsRequest.iteration:type_name -> Iteration
	1,  // 10: StateDiffsResponse.contract_diff:type_name -> ContractDiff
	2,  // 11: StateDiffsResponse.declared_class:type_name -> DeclaredClass
	10, // 12: StateDiffsResponse.fin:type_name -> Fin
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_p2p_proto_state_proto_init() }
func file_p2p_proto_state_proto_init() {
	if File_p2p_proto_state_proto != nil {
		return
	}
	file_p2p_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_p2p_proto_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractStoredValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclaredClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDiffsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDiffsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_p2p_proto_state_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_p2p_proto_state_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_p2p_proto_state_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*StateDiffsResponse_ContractDiff)(nil),
		(*StateDiffsResponse_DeclaredClass)(nil),
		(*StateDiffsResponse_Fin)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p2p_proto_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_proto_state_proto_goTypes,
		DependencyIndexes: file_p2p_proto_state_proto_depIdxs,
		MessageInfos:      file_p2p_proto_state_proto_msgTypes,
	}.Build()
	File_p2p_proto_state_proto = out.File
	file_p2p_proto_state_proto_rawDesc = nil
	file_p2p_proto_state_proto_goTypes = nil
	file_p2p_proto_state_proto_depIdxs = nil
}
