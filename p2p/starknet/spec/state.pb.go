// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: p2p/proto/state.proto

package spec

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// optimized for flat storage, not through a trie (not sharing key prefixes)
type ContractStoredValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *Felt252 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *Felt252 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContractStoredValue) Reset() {
	*x = ContractStoredValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractStoredValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractStoredValue) ProtoMessage() {}

func (x *ContractStoredValue) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractStoredValue.ProtoReflect.Descriptor instead.
func (*ContractStoredValue) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{0}
}

func (x *ContractStoredValue) GetKey() *Felt252 {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ContractStoredValue) GetValue() *Felt252 {
	if x != nil {
		return x.Value
	}
	return nil
}

type StateDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain        uint32                    `protobuf:"varint,1,opt,name=domain,proto3" json:"domain,omitempty"` // volition state domain
	ContractDiffs []*StateDiff_ContractDiff `protobuf:"bytes,2,rep,name=contract_diffs,json=contractDiffs,proto3" json:"contract_diffs,omitempty"`
}

func (x *StateDiff) Reset() {
	*x = StateDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDiff) ProtoMessage() {}

func (x *StateDiff) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDiff.ProtoReflect.Descriptor instead.
func (*StateDiff) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{1}
}

func (x *StateDiff) GetDomain() uint32 {
	if x != nil {
		return x.Domain
	}
	return 0
}

func (x *StateDiff) GetContractDiffs() []*StateDiff_ContractDiff {
	if x != nil {
		return x.ContractDiffs
	}
	return nil
}

// is it better to separate the definition from the hashes? (will need to repeate the hashes
// for the definitions stream)
// or, make the definitions optional? maybe it is enough to know only that a class exists, not its definition
// which may be fetched lazily later.
type Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompiledHash *Hash   `protobuf:"bytes,2,opt,name=compiled_hash,json=compiledHash,proto3" json:"compiled_hash,omitempty"`  // TBD: add also/instead CASM definition (instead of every node compiling)?
	Definition   []byte  `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`                          // compressed? size limit or split to chunks.
	TotalParts   *uint32 `protobuf:"varint,4,opt,name=total_parts,json=totalParts,proto3,oneof" json:"total_parts,omitempty"` // if a class is too large to be sent in one message
	PartNum      *uint32 `protobuf:"varint,5,opt,name=part_num,json=partNum,proto3,oneof" json:"part_num,omitempty"`          // 0 based
}

func (x *Class) Reset() {
	*x = Class{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Class) ProtoMessage() {}

func (x *Class) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Class.ProtoReflect.Descriptor instead.
func (*Class) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{2}
}

func (x *Class) GetCompiledHash() *Hash {
	if x != nil {
		return x.CompiledHash
	}
	return nil
}

func (x *Class) GetDefinition() []byte {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *Class) GetTotalParts() uint32 {
	if x != nil && x.TotalParts != nil {
		return *x.TotalParts
	}
	return 0
}

func (x *Class) GetPartNum() uint32 {
	if x != nil && x.PartNum != nil {
		return *x.PartNum
	}
	return 0
}

type Classes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain  uint32   `protobuf:"varint,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Classes []*Class `protobuf:"bytes,2,rep,name=classes,proto3" json:"classes,omitempty"`
}

func (x *Classes) Reset() {
	*x = Classes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Classes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Classes) ProtoMessage() {}

func (x *Classes) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Classes.ProtoReflect.Descriptor instead.
func (*Classes) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{3}
}

func (x *Classes) GetDomain() uint32 {
	if x != nil {
		return x.Domain
	}
	return 0
}

func (x *Classes) GetClasses() []*Class {
	if x != nil {
		return x.Classes
	}
	return nil
}

// a bit more efficient than the state sync separation
type StateDiff_ContractDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   *Address               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Nonce     *Felt252               `protobuf:"bytes,2,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	ClassHash *Felt252               `protobuf:"bytes,3,opt,name=class_hash,json=classHash,proto3,oneof" json:"class_hash,omitempty"` // can change for replace_class or new contract
	Values    []*ContractStoredValue `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StateDiff_ContractDiff) Reset() {
	*x = StateDiff_ContractDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDiff_ContractDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDiff_ContractDiff) ProtoMessage() {}

func (x *StateDiff_ContractDiff) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDiff_ContractDiff.ProtoReflect.Descriptor instead.
func (*StateDiff_ContractDiff) Descriptor() ([]byte, []int) {
	return file_p2p_proto_state_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StateDiff_ContractDiff) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StateDiff_ContractDiff) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *StateDiff_ContractDiff) GetClassHash() *Felt252 {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *StateDiff_ContractDiff) GetValues() []*ContractStoredValue {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_p2p_proto_state_proto protoreflect.FileDescriptor

var file_p2p_proto_state_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x32, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x32, 0x70, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x51, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x69, 0x66, 0x66, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x44, 0x69, 0x66, 0x66, 0x73, 0x1a, 0xcc, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x69, 0x66, 0x66, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46,
	0x65, 0x6c, 0x74, 0x32, 0x35, 0x32, 0x48, 0x00, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32,
	0x48, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0xb6, 0x01, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x2a, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x22, 0x43, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_p2p_proto_state_proto_rawDescOnce sync.Once
	file_p2p_proto_state_proto_rawDescData = file_p2p_proto_state_proto_rawDesc
)

func file_p2p_proto_state_proto_rawDescGZIP() []byte {
	file_p2p_proto_state_proto_rawDescOnce.Do(func() {
		file_p2p_proto_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_p2p_proto_state_proto_rawDescData)
	})
	return file_p2p_proto_state_proto_rawDescData
}

var file_p2p_proto_state_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_p2p_proto_state_proto_goTypes = []interface{}{
	(*ContractStoredValue)(nil),    // 0: ContractStoredValue
	(*StateDiff)(nil),              // 1: StateDiff
	(*Class)(nil),                  // 2: Class
	(*Classes)(nil),                // 3: Classes
	(*StateDiff_ContractDiff)(nil), // 4: StateDiff.ContractDiff
	(*Felt252)(nil),                // 5: Felt252
	(*Hash)(nil),                   // 6: Hash
	(*Address)(nil),                // 7: Address
}
var file_p2p_proto_state_proto_depIdxs = []int32{
	5, // 0: ContractStoredValue.key:type_name -> Felt252
	5, // 1: ContractStoredValue.value:type_name -> Felt252
	4, // 2: StateDiff.contract_diffs:type_name -> StateDiff.ContractDiff
	6, // 3: Class.compiled_hash:type_name -> Hash
	2, // 4: Classes.classes:type_name -> Class
	7, // 5: StateDiff.ContractDiff.address:type_name -> Address
	5, // 6: StateDiff.ContractDiff.nonce:type_name -> Felt252
	5, // 7: StateDiff.ContractDiff.class_hash:type_name -> Felt252
	0, // 8: StateDiff.ContractDiff.values:type_name -> ContractStoredValue
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_p2p_proto_state_proto_init() }
func file_p2p_proto_state_proto_init() {
	if File_p2p_proto_state_proto != nil {
		return
	}
	file_p2p_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_p2p_proto_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractStoredValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Class); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Classes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDiff_ContractDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_p2p_proto_state_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_p2p_proto_state_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p2p_proto_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_proto_state_proto_goTypes,
		DependencyIndexes: file_p2p_proto_state_proto_depIdxs,
		MessageInfos:      file_p2p_proto_state_proto_msgTypes,
	}.Build()
	File_p2p_proto_state_proto = out.File
	file_p2p_proto_state_proto_rawDesc = nil
	file_p2p_proto_state_proto_goTypes = nil
	file_p2p_proto_state_proto_depIdxs = nil
}
