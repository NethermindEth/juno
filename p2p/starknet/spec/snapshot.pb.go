// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: p2p/proto/snapshot.proto

package spec

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PatriciaNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Node:
	//
	//	*PatriciaNode_Edge_
	//	*PatriciaNode_Binary_
	Node isPatriciaNode_Node `protobuf_oneof:"node"`
}

func (x *PatriciaNode) Reset() {
	*x = PatriciaNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatriciaNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatriciaNode) ProtoMessage() {}

func (x *PatriciaNode) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatriciaNode.ProtoReflect.Descriptor instead.
func (*PatriciaNode) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{0}
}

func (m *PatriciaNode) GetNode() isPatriciaNode_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (x *PatriciaNode) GetEdge() *PatriciaNode_Edge {
	if x, ok := x.GetNode().(*PatriciaNode_Edge_); ok {
		return x.Edge
	}
	return nil
}

func (x *PatriciaNode) GetBinary() *PatriciaNode_Binary {
	if x, ok := x.GetNode().(*PatriciaNode_Binary_); ok {
		return x.Binary
	}
	return nil
}

type isPatriciaNode_Node interface {
	isPatriciaNode_Node()
}

type PatriciaNode_Edge_ struct {
	Edge *PatriciaNode_Edge `protobuf:"bytes,1,opt,name=edge,proto3,oneof"`
}

type PatriciaNode_Binary_ struct {
	Binary *PatriciaNode_Binary `protobuf:"bytes,2,opt,name=binary,proto3,oneof"`
}

func (*PatriciaNode_Edge_) isPatriciaNode_Node() {}

func (*PatriciaNode_Binary_) isPatriciaNode_Node() {}

// non leaf nodes required to build the trie given the range (leaves)
type PatriciaRangeProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*PatriciaNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *PatriciaRangeProof) Reset() {
	*x = PatriciaRangeProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatriciaRangeProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatriciaRangeProof) ProtoMessage() {}

func (x *PatriciaRangeProof) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatriciaRangeProof.ProtoReflect.Descriptor instead.
func (*PatriciaRangeProof) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *PatriciaRangeProof) GetNodes() []*PatriciaNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// leafs of the contract state tre
type ContractState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *Hash  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // the key
	Class   *Hash  `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	Storage *Hash  `protobuf:"bytes,3,opt,name=storage,proto3" json:"storage,omitempty"` // patricia
	Nonce   uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *ContractState) Reset() {
	*x = ContractState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractState) ProtoMessage() {}

func (x *ContractState) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractState.ProtoReflect.Descriptor instead.
func (*ContractState) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{2}
}

func (x *ContractState) GetAddress() *Hash {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ContractState) GetClass() *Hash {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *ContractState) GetStorage() *Hash {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *ContractState) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// request a range from the contract state tree that matches the given root (block)
// starts at 'start' and ends no less than 'end'.
// the result is  (ContractRange+, PatriciaRangeProof)*
type GetContractRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root           *Hash  `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	Start          *Hash  `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End            *Hash  `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	ChunksPerProof uint32 `protobuf:"varint,5,opt,name=chunks_per_proof,json=chunksPerProof,proto3" json:"chunks_per_proof,omitempty"` // how many ContractRange items to send before sending a proof
}

func (x *GetContractRange) Reset() {
	*x = GetContractRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContractRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractRange) ProtoMessage() {}

func (x *GetContractRange) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractRange.ProtoReflect.Descriptor instead.
func (*GetContractRange) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{3}
}

func (x *GetContractRange) GetRoot() *Hash {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *GetContractRange) GetStart() *Hash {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetContractRange) GetEnd() *Hash {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetContractRange) GetChunksPerProof() uint32 {
	if x != nil {
		return x.ChunksPerProof
	}
	return 0
}

// stream of leaves in the contracts tree
type ContractRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State []*ContractState `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
}

func (x *ContractRange) Reset() {
	*x = ContractRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractRange) ProtoMessage() {}

func (x *ContractRange) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractRange.ProtoReflect.Descriptor instead.
func (*ContractRange) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{4}
}

func (x *ContractRange) GetState() []*ContractState {
	if x != nil {
		return x.State
	}
	return nil
}

// duplicate of GetContractRange. Can introduce a 'type' instead.
// result is (Classes+, PatriciaRangeProof)*
type GetClassRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root           *Hash  `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Start          *Hash  `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End            *Hash  `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	ChunksPerProof uint32 `protobuf:"varint,4,opt,name=chunks_per_proof,json=chunksPerProof,proto3" json:"chunks_per_proof,omitempty"`
}

func (x *GetClassRange) Reset() {
	*x = GetClassRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassRange) ProtoMessage() {}

func (x *GetClassRange) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassRange.ProtoReflect.Descriptor instead.
func (*GetClassRange) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{5}
}

func (x *GetClassRange) GetRoot() *Hash {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *GetClassRange) GetStart() *Hash {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetClassRange) GetEnd() *Hash {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetClassRange) GetChunksPerProof() uint32 {
	if x != nil {
		return x.ChunksPerProof
	}
	return 0
}

// A position in some contract's state tree is identified by the state tree's root and the key in it
type StorageLeafQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root *Hash    `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Key  *Felt252 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *StorageLeafQuery) Reset() {
	*x = StorageLeafQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageLeafQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageLeafQuery) ProtoMessage() {}

func (x *StorageLeafQuery) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageLeafQuery.ProtoReflect.Descriptor instead.
func (*StorageLeafQuery) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{6}
}

func (x *StorageLeafQuery) GetRoot() *Hash {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *StorageLeafQuery) GetKey() *Felt252 {
	if x != nil {
		return x.Key
	}
	return nil
}

type StorageRangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RangeId uint32            `protobuf:"varint,1,opt,name=range_id,json=rangeId,proto3" json:"range_id,omitempty"`
	Start   *StorageLeafQuery `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End     *StorageLeafQuery `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *StorageRangeQuery) Reset() {
	*x = StorageRangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageRangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageRangeQuery) ProtoMessage() {}

func (x *StorageRangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageRangeQuery.ProtoReflect.Descriptor instead.
func (*StorageRangeQuery) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{7}
}

func (x *StorageRangeQuery) GetRangeId() uint32 {
	if x != nil {
		return x.RangeId
	}
	return 0
}

func (x *StorageRangeQuery) GetStart() *StorageLeafQuery {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *StorageRangeQuery) GetEnd() *StorageLeafQuery {
	if x != nil {
		return x.End
	}
	return nil
}

// result is (ContractStorageRange+, PatriciaRangeProof)*
type GetContractStorageRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRoot *Hash                `protobuf:"bytes,1,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	Query     []*StorageRangeQuery `protobuf:"bytes,2,rep,name=query,proto3" json:"query,omitempty"`
}

func (x *GetContractStorageRange) Reset() {
	*x = GetContractStorageRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContractStorageRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractStorageRange) ProtoMessage() {}

func (x *GetContractStorageRange) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractStorageRange.ProtoReflect.Descriptor instead.
func (*GetContractStorageRange) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{8}
}

func (x *GetContractStorageRange) GetStateRoot() *Hash {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *GetContractStorageRange) GetQuery() []*StorageRangeQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ContractStorageRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RangeId  uint32                 `protobuf:"varint,1,opt,name=range_id,json=rangeId,proto3" json:"range_id,omitempty"`
	Root     *Hash                  `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	KeyValue []*ContractStoredValue `protobuf:"bytes,3,rep,name=keyValue,proto3" json:"keyValue,omitempty"`
}

func (x *ContractStorageRange) Reset() {
	*x = ContractStorageRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractStorageRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractStorageRange) ProtoMessage() {}

func (x *ContractStorageRange) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractStorageRange.ProtoReflect.Descriptor instead.
func (*ContractStorageRange) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{9}
}

func (x *ContractStorageRange) GetRangeId() uint32 {
	if x != nil {
		return x.RangeId
	}
	return 0
}

func (x *ContractStorageRange) GetRoot() *Hash {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *ContractStorageRange) GetKeyValue() []*ContractStoredValue {
	if x != nil {
		return x.KeyValue
	}
	return nil
}

type PatriciaNode_Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32   `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	Path   *Felt252 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"` // as bits of left/right
	Value  *Felt252 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PatriciaNode_Edge) Reset() {
	*x = PatriciaNode_Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatriciaNode_Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatriciaNode_Edge) ProtoMessage() {}

func (x *PatriciaNode_Edge) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatriciaNode_Edge.ProtoReflect.Descriptor instead.
func (*PatriciaNode_Edge) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PatriciaNode_Edge) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *PatriciaNode_Edge) GetPath() *Felt252 {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *PatriciaNode_Edge) GetValue() *Felt252 {
	if x != nil {
		return x.Value
	}
	return nil
}

type PatriciaNode_Binary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *Felt252 `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right *Felt252 `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *PatriciaNode_Binary) Reset() {
	*x = PatriciaNode_Binary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_proto_snapshot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatriciaNode_Binary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatriciaNode_Binary) ProtoMessage() {}

func (x *PatriciaNode_Binary) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_snapshot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatriciaNode_Binary.ProtoReflect.Descriptor instead.
func (*PatriciaNode_Binary) Descriptor() ([]byte, []int) {
	return file_p2p_proto_snapshot_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PatriciaNode_Binary) GetLeft() *Felt252 {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *PatriciaNode_Binary) GetRight() *Felt252 {
	if x != nil {
		return x.Right
	}
	return nil
}

var File_p2p_proto_snapshot_proto protoreflect.FileDescriptor

var file_p2p_proto_snapshot_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x32, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x32, 0x70, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x70, 0x32, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x0c, 0x50, 0x61,
	0x74, 0x72, 0x69, 0x63, 0x69, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x65, 0x64,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x61, 0x74, 0x72, 0x69,
	0x63, 0x69, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x65, 0x64, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x61, 0x74, 0x72, 0x69, 0x63, 0x69, 0x61, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x06, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x1a, 0x5c, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x46, 0x0a, 0x06, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x04,
	0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c,
	0x74, 0x32, 0x35, 0x32, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x1e, 0x0a, 0x05, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74,
	0x32, 0x35, 0x32, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x22, 0x39, 0x0a, 0x12, 0x50, 0x61, 0x74, 0x72, 0x69, 0x63, 0x69, 0x61, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x23, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x61, 0x74, 0x72, 0x69, 0x63,
	0x69, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x84, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1b, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x17, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x22, 0x35, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x50, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x49, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x6c, 0x74, 0x32, 0x35, 0x32, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x7c, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x66,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x22, 0x69, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x7e, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x6b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_p2p_proto_snapshot_proto_rawDescOnce sync.Once
	file_p2p_proto_snapshot_proto_rawDescData = file_p2p_proto_snapshot_proto_rawDesc
)

func file_p2p_proto_snapshot_proto_rawDescGZIP() []byte {
	file_p2p_proto_snapshot_proto_rawDescOnce.Do(func() {
		file_p2p_proto_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(file_p2p_proto_snapshot_proto_rawDescData)
	})
	return file_p2p_proto_snapshot_proto_rawDescData
}

var file_p2p_proto_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_p2p_proto_snapshot_proto_goTypes = []interface{}{
	(*PatriciaNode)(nil),            // 0: PatriciaNode
	(*PatriciaRangeProof)(nil),      // 1: PatriciaRangeProof
	(*ContractState)(nil),           // 2: ContractState
	(*GetContractRange)(nil),        // 3: GetContractRange
	(*ContractRange)(nil),           // 4: ContractRange
	(*GetClassRange)(nil),           // 5: GetClassRange
	(*StorageLeafQuery)(nil),        // 6: StorageLeafQuery
	(*StorageRangeQuery)(nil),       // 7: StorageRangeQuery
	(*GetContractStorageRange)(nil), // 8: GetContractStorageRange
	(*ContractStorageRange)(nil),    // 9: ContractStorageRange
	(*PatriciaNode_Edge)(nil),       // 10: PatriciaNode.Edge
	(*PatriciaNode_Binary)(nil),     // 11: PatriciaNode.Binary
	(*Hash)(nil),                    // 12: Hash
	(*Felt252)(nil),                 // 13: Felt252
	(*ContractStoredValue)(nil),     // 14: ContractStoredValue
}
var file_p2p_proto_snapshot_proto_depIdxs = []int32{
	10, // 0: PatriciaNode.edge:type_name -> PatriciaNode.Edge
	11, // 1: PatriciaNode.binary:type_name -> PatriciaNode.Binary
	0,  // 2: PatriciaRangeProof.nodes:type_name -> PatriciaNode
	12, // 3: ContractState.address:type_name -> Hash
	12, // 4: ContractState.class:type_name -> Hash
	12, // 5: ContractState.storage:type_name -> Hash
	12, // 6: GetContractRange.root:type_name -> Hash
	12, // 7: GetContractRange.start:type_name -> Hash
	12, // 8: GetContractRange.end:type_name -> Hash
	2,  // 9: ContractRange.state:type_name -> ContractState
	12, // 10: GetClassRange.root:type_name -> Hash
	12, // 11: GetClassRange.start:type_name -> Hash
	12, // 12: GetClassRange.end:type_name -> Hash
	12, // 13: StorageLeafQuery.root:type_name -> Hash
	13, // 14: StorageLeafQuery.key:type_name -> Felt252
	6,  // 15: StorageRangeQuery.start:type_name -> StorageLeafQuery
	6,  // 16: StorageRangeQuery.end:type_name -> StorageLeafQuery
	12, // 17: GetContractStorageRange.state_root:type_name -> Hash
	7,  // 18: GetContractStorageRange.query:type_name -> StorageRangeQuery
	12, // 19: ContractStorageRange.root:type_name -> Hash
	14, // 20: ContractStorageRange.keyValue:type_name -> ContractStoredValue
	13, // 21: PatriciaNode.Edge.path:type_name -> Felt252
	13, // 22: PatriciaNode.Edge.value:type_name -> Felt252
	13, // 23: PatriciaNode.Binary.left:type_name -> Felt252
	13, // 24: PatriciaNode.Binary.right:type_name -> Felt252
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_p2p_proto_snapshot_proto_init() }
func file_p2p_proto_snapshot_proto_init() {
	if File_p2p_proto_snapshot_proto != nil {
		return
	}
	file_p2p_proto_common_proto_init()
	file_p2p_proto_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_p2p_proto_snapshot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatriciaNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatriciaRangeProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContractRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageLeafQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageRangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContractStorageRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractStorageRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatriciaNode_Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_proto_snapshot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatriciaNode_Binary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_p2p_proto_snapshot_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PatriciaNode_Edge_)(nil),
		(*PatriciaNode_Binary_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p2p_proto_snapshot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_proto_snapshot_proto_goTypes,
		DependencyIndexes: file_p2p_proto_snapshot_proto_depIdxs,
		MessageInfos:      file_p2p_proto_snapshot_proto_msgTypes,
	}.Build()
	File_p2p_proto_snapshot_proto = out.File
	file_p2p_proto_snapshot_proto_rawDesc = nil
	file_p2p_proto_snapshot_proto_goTypes = nil
	file_p2p_proto_snapshot_proto_depIdxs = nil
}
