// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: p2p/proto/transaction.proto

package transaction

import (
	class "github.com/starknet-io/starknet-p2pspecs/p2p/proto/class"
	common "github.com/starknet-io/starknet-p2pspecs/p2p/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceLimits struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MaxAmount       *common.Felt252        `protobuf:"bytes,1,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	MaxPricePerUnit *common.Felt252        `protobuf:"bytes,2,opt,name=max_price_per_unit,json=maxPricePerUnit,proto3" json:"max_price_per_unit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_p2p_proto_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimits.ProtoReflect.Descriptor instead.
func (*ResourceLimits) Descriptor() ([]byte, []int) {
	return file_p2p_proto_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceLimits) GetMaxAmount() *common.Felt252 {
	if x != nil {
		return x.MaxAmount
	}
	return nil
}

func (x *ResourceLimits) GetMaxPricePerUnit() *common.Felt252 {
	if x != nil {
		return x.MaxPricePerUnit
	}
	return nil
}

type ResourceBounds struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	L1Gas *ResourceLimits        `protobuf:"bytes,1,opt,name=l1_gas,json=l1Gas,proto3" json:"l1_gas,omitempty"`
	// This can be None only in transactions that don't support l2 gas.
	// Starting from 0.14.0, MempoolTransaction and ConsensusTransaction shouldn't have None here.
	L1DataGas     *ResourceLimits `protobuf:"bytes,2,opt,name=l1_data_gas,json=l1DataGas,proto3,oneof" json:"l1_data_gas,omitempty"`
	L2Gas         *ResourceLimits `protobuf:"bytes,3,opt,name=l2_gas,json=l2Gas,proto3" json:"l2_gas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceBounds) Reset() {
	*x = ResourceBounds{}
	mi := &file_p2p_proto_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceBounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceBounds) ProtoMessage() {}

func (x *ResourceBounds) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceBounds.ProtoReflect.Descriptor instead.
func (*ResourceBounds) Descriptor() ([]byte, []int) {
	return file_p2p_proto_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceBounds) GetL1Gas() *ResourceLimits {
	if x != nil {
		return x.L1Gas
	}
	return nil
}

func (x *ResourceBounds) GetL1DataGas() *ResourceLimits {
	if x != nil {
		return x.L1DataGas
	}
	return nil
}

func (x *ResourceBounds) GetL2Gas() *ResourceLimits {
	if x != nil {
		return x.L2Gas
	}
	return nil
}

type AccountSignature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parts         []*common.Felt252      `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountSignature) Reset() {
	*x = AccountSignature{}
	mi := &file_p2p_proto_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSignature) ProtoMessage() {}

func (x *AccountSignature) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSignature.ProtoReflect.Descriptor instead.
func (*AccountSignature) Descriptor() ([]byte, []int) {
	return file_p2p_proto_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *AccountSignature) GetParts() []*common.Felt252 {
	if x != nil {
		return x.Parts
	}
	return nil
}

type L1HandlerV0 struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Nonce              *common.Felt252        `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Address            *common.Address        `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	EntryPointSelector *common.Felt252        `protobuf:"bytes,3,opt,name=entry_point_selector,json=entryPointSelector,proto3" json:"entry_point_selector,omitempty"`
	Calldata           []*common.Felt252      `protobuf:"bytes,4,rep,name=calldata,proto3" json:"calldata,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *L1HandlerV0) Reset() {
	*x = L1HandlerV0{}
	mi := &file_p2p_proto_transaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *L1HandlerV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L1HandlerV0) ProtoMessage() {}

func (x *L1HandlerV0) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_transaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L1HandlerV0.ProtoReflect.Descriptor instead.
func (*L1HandlerV0) Descriptor() ([]byte, []int) {
	return file_p2p_proto_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *L1HandlerV0) GetNonce() *common.Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *L1HandlerV0) GetAddress() *common.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *L1HandlerV0) GetEntryPointSelector() *common.Felt252 {
	if x != nil {
		return x.EntryPointSelector
	}
	return nil
}

func (x *L1HandlerV0) GetCalldata() []*common.Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

type DeclareV3Common struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Sender                    *common.Address        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Signature                 *AccountSignature      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Nonce                     *common.Felt252        `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	CompiledClassHash         *common.Hash           `protobuf:"bytes,5,opt,name=compiled_class_hash,json=compiledClassHash,proto3" json:"compiled_class_hash,omitempty"`
	ResourceBounds            *ResourceBounds        `protobuf:"bytes,6,opt,name=resource_bounds,json=resourceBounds,proto3" json:"resource_bounds,omitempty"`
	Tip                       uint64                 `protobuf:"varint,7,opt,name=tip,proto3" json:"tip,omitempty"`
	PaymasterData             []*common.Felt252      `protobuf:"bytes,8,rep,name=paymaster_data,json=paymasterData,proto3" json:"paymaster_data,omitempty"`
	AccountDeploymentData     []*common.Felt252      `protobuf:"bytes,9,rep,name=account_deployment_data,json=accountDeploymentData,proto3" json:"account_deployment_data,omitempty"`
	NonceDataAvailabilityMode common.VolitionDomain  `protobuf:"varint,10,opt,name=nonce_data_availability_mode,json=nonceDataAvailabilityMode,proto3,enum=VolitionDomain" json:"nonce_data_availability_mode,omitempty"`
	FeeDataAvailabilityMode   common.VolitionDomain  `protobuf:"varint,11,opt,name=fee_data_availability_mode,json=feeDataAvailabilityMode,proto3,enum=VolitionDomain" json:"fee_data_availability_mode,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DeclareV3Common) Reset() {
	*x = DeclareV3Common{}
	mi := &file_p2p_proto_transaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeclareV3Common) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareV3Common) ProtoMessage() {}

func (x *DeclareV3Common) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_transaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareV3Common.ProtoReflect.Descriptor instead.
func (*DeclareV3Common) Descriptor() ([]byte, []int) {
	return file_p2p_proto_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *DeclareV3Common) GetSender() *common.Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *DeclareV3Common) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DeclareV3Common) GetNonce() *common.Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *DeclareV3Common) GetCompiledClassHash() *common.Hash {
	if x != nil {
		return x.CompiledClassHash
	}
	return nil
}

func (x *DeclareV3Common) GetResourceBounds() *ResourceBounds {
	if x != nil {
		return x.ResourceBounds
	}
	return nil
}

func (x *DeclareV3Common) GetTip() uint64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *DeclareV3Common) GetPaymasterData() []*common.Felt252 {
	if x != nil {
		return x.PaymasterData
	}
	return nil
}

func (x *DeclareV3Common) GetAccountDeploymentData() []*common.Felt252 {
	if x != nil {
		return x.AccountDeploymentData
	}
	return nil
}

func (x *DeclareV3Common) GetNonceDataAvailabilityMode() common.VolitionDomain {
	if x != nil {
		return x.NonceDataAvailabilityMode
	}
	return common.VolitionDomain(0)
}

func (x *DeclareV3Common) GetFeeDataAvailabilityMode() common.VolitionDomain {
	if x != nil {
		return x.FeeDataAvailabilityMode
	}
	return common.VolitionDomain(0)
}

type DeclareV3WithClass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *DeclareV3Common       `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Class         *class.Cairo1Class     `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeclareV3WithClass) Reset() {
	*x = DeclareV3WithClass{}
	mi := &file_p2p_proto_transaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeclareV3WithClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareV3WithClass) ProtoMessage() {}

func (x *DeclareV3WithClass) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_transaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareV3WithClass.ProtoReflect.Descriptor instead.
func (*DeclareV3WithClass) Descriptor() ([]byte, []int) {
	return file_p2p_proto_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *DeclareV3WithClass) GetCommon() *DeclareV3Common {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *DeclareV3WithClass) GetClass() *class.Cairo1Class {
	if x != nil {
		return x.Class
	}
	return nil
}

// see https://external.integration.starknet.io/feeder_gateway/get_transaction?transactionHash=0x41906f1c314cca5f43170ea75d3b1904196a10101190d2b12a41cc61cfd17c
type InvokeV3 struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Sender                    *common.Address        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Signature                 *AccountSignature      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Calldata                  []*common.Felt252      `protobuf:"bytes,3,rep,name=calldata,proto3" json:"calldata,omitempty"`
	ResourceBounds            *ResourceBounds        `protobuf:"bytes,4,opt,name=resource_bounds,json=resourceBounds,proto3" json:"resource_bounds,omitempty"`
	Tip                       uint64                 `protobuf:"varint,5,opt,name=tip,proto3" json:"tip,omitempty"`
	PaymasterData             []*common.Felt252      `protobuf:"bytes,6,rep,name=paymaster_data,json=paymasterData,proto3" json:"paymaster_data,omitempty"`
	AccountDeploymentData     []*common.Felt252      `protobuf:"bytes,7,rep,name=account_deployment_data,json=accountDeploymentData,proto3" json:"account_deployment_data,omitempty"`
	NonceDataAvailabilityMode common.VolitionDomain  `protobuf:"varint,8,opt,name=nonce_data_availability_mode,json=nonceDataAvailabilityMode,proto3,enum=VolitionDomain" json:"nonce_data_availability_mode,omitempty"`
	FeeDataAvailabilityMode   common.VolitionDomain  `protobuf:"varint,9,opt,name=fee_data_availability_mode,json=feeDataAvailabilityMode,proto3,enum=VolitionDomain" json:"fee_data_availability_mode,omitempty"`
	Nonce                     *common.Felt252        `protobuf:"bytes,10,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *InvokeV3) Reset() {
	*x = InvokeV3{}
	mi := &file_p2p_proto_transaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeV3) ProtoMessage() {}

func (x *InvokeV3) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_transaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeV3.ProtoReflect.Descriptor instead.
func (*InvokeV3) Descriptor() ([]byte, []int) {
	return file_p2p_proto_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *InvokeV3) GetSender() *common.Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *InvokeV3) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *InvokeV3) GetCalldata() []*common.Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *InvokeV3) GetResourceBounds() *ResourceBounds {
	if x != nil {
		return x.ResourceBounds
	}
	return nil
}

func (x *InvokeV3) GetTip() uint64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *InvokeV3) GetPaymasterData() []*common.Felt252 {
	if x != nil {
		return x.PaymasterData
	}
	return nil
}

func (x *InvokeV3) GetAccountDeploymentData() []*common.Felt252 {
	if x != nil {
		return x.AccountDeploymentData
	}
	return nil
}

func (x *InvokeV3) GetNonceDataAvailabilityMode() common.VolitionDomain {
	if x != nil {
		return x.NonceDataAvailabilityMode
	}
	return common.VolitionDomain(0)
}

func (x *InvokeV3) GetFeeDataAvailabilityMode() common.VolitionDomain {
	if x != nil {
		return x.FeeDataAvailabilityMode
	}
	return common.VolitionDomain(0)
}

func (x *InvokeV3) GetNonce() *common.Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

// see https://external.integration.starknet.io/feeder_gateway/get_transaction?transactionHash=0x29fd7881f14380842414cdfdd8d6c0b1f2174f8916edcfeb1ede1eb26ac3ef0
type DeployAccountV3 struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Signature                 *AccountSignature      `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash                 *common.Hash           `protobuf:"bytes,2,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce                     *common.Felt252        `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	AddressSalt               *common.Felt252        `protobuf:"bytes,4,opt,name=address_salt,json=addressSalt,proto3" json:"address_salt,omitempty"`
	Calldata                  []*common.Felt252      `protobuf:"bytes,5,rep,name=calldata,proto3" json:"calldata,omitempty"`
	ResourceBounds            *ResourceBounds        `protobuf:"bytes,6,opt,name=resource_bounds,json=resourceBounds,proto3" json:"resource_bounds,omitempty"`
	Tip                       uint64                 `protobuf:"varint,7,opt,name=tip,proto3" json:"tip,omitempty"`
	PaymasterData             []*common.Felt252      `protobuf:"bytes,8,rep,name=paymaster_data,json=paymasterData,proto3" json:"paymaster_data,omitempty"`
	NonceDataAvailabilityMode common.VolitionDomain  `protobuf:"varint,9,opt,name=nonce_data_availability_mode,json=nonceDataAvailabilityMode,proto3,enum=VolitionDomain" json:"nonce_data_availability_mode,omitempty"`
	FeeDataAvailabilityMode   common.VolitionDomain  `protobuf:"varint,10,opt,name=fee_data_availability_mode,json=feeDataAvailabilityMode,proto3,enum=VolitionDomain" json:"fee_data_availability_mode,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DeployAccountV3) Reset() {
	*x = DeployAccountV3{}
	mi := &file_p2p_proto_transaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployAccountV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployAccountV3) ProtoMessage() {}

func (x *DeployAccountV3) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_transaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployAccountV3.ProtoReflect.Descriptor instead.
func (*DeployAccountV3) Descriptor() ([]byte, []int) {
	return file_p2p_proto_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *DeployAccountV3) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DeployAccountV3) GetClassHash() *common.Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *DeployAccountV3) GetNonce() *common.Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *DeployAccountV3) GetAddressSalt() *common.Felt252 {
	if x != nil {
		return x.AddressSalt
	}
	return nil
}

func (x *DeployAccountV3) GetCalldata() []*common.Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *DeployAccountV3) GetResourceBounds() *ResourceBounds {
	if x != nil {
		return x.ResourceBounds
	}
	return nil
}

func (x *DeployAccountV3) GetTip() uint64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *DeployAccountV3) GetPaymasterData() []*common.Felt252 {
	if x != nil {
		return x.PaymasterData
	}
	return nil
}

func (x *DeployAccountV3) GetNonceDataAvailabilityMode() common.VolitionDomain {
	if x != nil {
		return x.NonceDataAvailabilityMode
	}
	return common.VolitionDomain(0)
}

func (x *DeployAccountV3) GetFeeDataAvailabilityMode() common.VolitionDomain {
	if x != nil {
		return x.FeeDataAvailabilityMode
	}
	return common.VolitionDomain(0)
}

var File_p2p_proto_transaction_proto protoreflect.FileDescriptor

const file_p2p_proto_transaction_proto_rawDesc = "" +
	"\n" +
	"\x1bp2p/proto/transaction.proto\x1a\x16p2p/proto/common.proto\x1a\x15p2p/proto/class.proto\"p\n" +
	"\x0eResourceLimits\x12'\n" +
	"\n" +
	"max_amount\x18\x01 \x01(\v2\b.Felt252R\tmaxAmount\x125\n" +
	"\x12max_price_per_unit\x18\x02 \x01(\v2\b.Felt252R\x0fmaxPricePerUnit\"\xa6\x01\n" +
	"\x0eResourceBounds\x12&\n" +
	"\x06l1_gas\x18\x01 \x01(\v2\x0f.ResourceLimitsR\x05l1Gas\x124\n" +
	"\vl1_data_gas\x18\x02 \x01(\v2\x0f.ResourceLimitsH\x00R\tl1DataGas\x88\x01\x01\x12&\n" +
	"\x06l2_gas\x18\x03 \x01(\v2\x0f.ResourceLimitsR\x05l2GasB\x0e\n" +
	"\f_l1_data_gas\"2\n" +
	"\x10AccountSignature\x12\x1e\n" +
	"\x05parts\x18\x01 \x03(\v2\b.Felt252R\x05parts\"\xb3\x01\n" +
	"\vL1HandlerV0\x12\x1e\n" +
	"\x05nonce\x18\x01 \x01(\v2\b.Felt252R\x05nonce\x12\"\n" +
	"\aaddress\x18\x02 \x01(\v2\b.AddressR\aaddress\x12:\n" +
	"\x14entry_point_selector\x18\x03 \x01(\v2\b.Felt252R\x12entryPointSelector\x12$\n" +
	"\bcalldata\x18\x04 \x03(\v2\b.Felt252R\bcalldata\"\x9a\x04\n" +
	"\x0fDeclareV3Common\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12/\n" +
	"\tsignature\x18\x02 \x01(\v2\x11.AccountSignatureR\tsignature\x12\x1e\n" +
	"\x05nonce\x18\x04 \x01(\v2\b.Felt252R\x05nonce\x125\n" +
	"\x13compiled_class_hash\x18\x05 \x01(\v2\x05.HashR\x11compiledClassHash\x128\n" +
	"\x0fresource_bounds\x18\x06 \x01(\v2\x0f.ResourceBoundsR\x0eresourceBounds\x12\x10\n" +
	"\x03tip\x18\a \x01(\x04R\x03tip\x12/\n" +
	"\x0epaymaster_data\x18\b \x03(\v2\b.Felt252R\rpaymasterData\x12@\n" +
	"\x17account_deployment_data\x18\t \x03(\v2\b.Felt252R\x15accountDeploymentData\x12P\n" +
	"\x1cnonce_data_availability_mode\x18\n" +
	" \x01(\x0e2\x0f.VolitionDomainR\x19nonceDataAvailabilityMode\x12L\n" +
	"\x1afee_data_availability_mode\x18\v \x01(\x0e2\x0f.VolitionDomainR\x17feeDataAvailabilityMode\"b\n" +
	"\x12DeclareV3WithClass\x12(\n" +
	"\x06common\x18\x01 \x01(\v2\x10.DeclareV3CommonR\x06common\x12\"\n" +
	"\x05class\x18\x02 \x01(\v2\f.Cairo1ClassR\x05class\"\x82\x04\n" +
	"\bInvokeV3\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12/\n" +
	"\tsignature\x18\x02 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\bcalldata\x18\x03 \x03(\v2\b.Felt252R\bcalldata\x128\n" +
	"\x0fresource_bounds\x18\x04 \x01(\v2\x0f.ResourceBoundsR\x0eresourceBounds\x12\x10\n" +
	"\x03tip\x18\x05 \x01(\x04R\x03tip\x12/\n" +
	"\x0epaymaster_data\x18\x06 \x03(\v2\b.Felt252R\rpaymasterData\x12@\n" +
	"\x17account_deployment_data\x18\a \x03(\v2\b.Felt252R\x15accountDeploymentData\x12P\n" +
	"\x1cnonce_data_availability_mode\x18\b \x01(\x0e2\x0f.VolitionDomainR\x19nonceDataAvailabilityMode\x12L\n" +
	"\x1afee_data_availability_mode\x18\t \x01(\x0e2\x0f.VolitionDomainR\x17feeDataAvailabilityMode\x12\x1e\n" +
	"\x05nonce\x18\n" +
	" \x01(\v2\b.Felt252R\x05nonce\"\xf8\x03\n" +
	"\x0fDeployAccountV3\x12/\n" +
	"\tsignature\x18\x01 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x02 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x03 \x01(\v2\b.Felt252R\x05nonce\x12+\n" +
	"\faddress_salt\x18\x04 \x01(\v2\b.Felt252R\vaddressSalt\x12$\n" +
	"\bcalldata\x18\x05 \x03(\v2\b.Felt252R\bcalldata\x128\n" +
	"\x0fresource_bounds\x18\x06 \x01(\v2\x0f.ResourceBoundsR\x0eresourceBounds\x12\x10\n" +
	"\x03tip\x18\a \x01(\x04R\x03tip\x12/\n" +
	"\x0epaymaster_data\x18\b \x03(\v2\b.Felt252R\rpaymasterData\x12P\n" +
	"\x1cnonce_data_availability_mode\x18\t \x01(\x0e2\x0f.VolitionDomainR\x19nonceDataAvailabilityMode\x12L\n" +
	"\x1afee_data_availability_mode\x18\n" +
	" \x01(\x0e2\x0f.VolitionDomainR\x17feeDataAvailabilityModeB@Z>github.com/starknet-io/starknet-p2pspecs/p2p/proto/transactionb\x06proto3"

var (
	file_p2p_proto_transaction_proto_rawDescOnce sync.Once
	file_p2p_proto_transaction_proto_rawDescData []byte
)

func file_p2p_proto_transaction_proto_rawDescGZIP() []byte {
	file_p2p_proto_transaction_proto_rawDescOnce.Do(func() {
		file_p2p_proto_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_p2p_proto_transaction_proto_rawDesc), len(file_p2p_proto_transaction_proto_rawDesc)))
	})
	return file_p2p_proto_transaction_proto_rawDescData
}

var file_p2p_proto_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_p2p_proto_transaction_proto_goTypes = []any{
	(*ResourceLimits)(nil),     // 0: ResourceLimits
	(*ResourceBounds)(nil),     // 1: ResourceBounds
	(*AccountSignature)(nil),   // 2: AccountSignature
	(*L1HandlerV0)(nil),        // 3: L1HandlerV0
	(*DeclareV3Common)(nil),    // 4: DeclareV3Common
	(*DeclareV3WithClass)(nil), // 5: DeclareV3WithClass
	(*InvokeV3)(nil),           // 6: InvokeV3
	(*DeployAccountV3)(nil),    // 7: DeployAccountV3
	(*common.Felt252)(nil),     // 8: Felt252
	(*common.Address)(nil),     // 9: Address
	(*common.Hash)(nil),        // 10: Hash
	(common.VolitionDomain)(0), // 11: VolitionDomain
	(*class.Cairo1Class)(nil),  // 12: Cairo1Class
}
var file_p2p_proto_transaction_proto_depIdxs = []int32{
	8,  // 0: ResourceLimits.max_amount:type_name -> Felt252
	8,  // 1: ResourceLimits.max_price_per_unit:type_name -> Felt252
	0,  // 2: ResourceBounds.l1_gas:type_name -> ResourceLimits
	0,  // 3: ResourceBounds.l1_data_gas:type_name -> ResourceLimits
	0,  // 4: ResourceBounds.l2_gas:type_name -> ResourceLimits
	8,  // 5: AccountSignature.parts:type_name -> Felt252
	8,  // 6: L1HandlerV0.nonce:type_name -> Felt252
	9,  // 7: L1HandlerV0.address:type_name -> Address
	8,  // 8: L1HandlerV0.entry_point_selector:type_name -> Felt252
	8,  // 9: L1HandlerV0.calldata:type_name -> Felt252
	9,  // 10: DeclareV3Common.sender:type_name -> Address
	2,  // 11: DeclareV3Common.signature:type_name -> AccountSignature
	8,  // 12: DeclareV3Common.nonce:type_name -> Felt252
	10, // 13: DeclareV3Common.compiled_class_hash:type_name -> Hash
	1,  // 14: DeclareV3Common.resource_bounds:type_name -> ResourceBounds
	8,  // 15: DeclareV3Common.paymaster_data:type_name -> Felt252
	8,  // 16: DeclareV3Common.account_deployment_data:type_name -> Felt252
	11, // 17: DeclareV3Common.nonce_data_availability_mode:type_name -> VolitionDomain
	11, // 18: DeclareV3Common.fee_data_availability_mode:type_name -> VolitionDomain
	4,  // 19: DeclareV3WithClass.common:type_name -> DeclareV3Common
	12, // 20: DeclareV3WithClass.class:type_name -> Cairo1Class
	9,  // 21: InvokeV3.sender:type_name -> Address
	2,  // 22: InvokeV3.signature:type_name -> AccountSignature
	8,  // 23: InvokeV3.calldata:type_name -> Felt252
	1,  // 24: InvokeV3.resource_bounds:type_name -> ResourceBounds
	8,  // 25: InvokeV3.paymaster_data:type_name -> Felt252
	8,  // 26: InvokeV3.account_deployment_data:type_name -> Felt252
	11, // 27: InvokeV3.nonce_data_availability_mode:type_name -> VolitionDomain
	11, // 28: InvokeV3.fee_data_availability_mode:type_name -> VolitionDomain
	8,  // 29: InvokeV3.nonce:type_name -> Felt252
	2,  // 30: DeployAccountV3.signature:type_name -> AccountSignature
	10, // 31: DeployAccountV3.class_hash:type_name -> Hash
	8,  // 32: DeployAccountV3.nonce:type_name -> Felt252
	8,  // 33: DeployAccountV3.address_salt:type_name -> Felt252
	8,  // 34: DeployAccountV3.calldata:type_name -> Felt252
	1,  // 35: DeployAccountV3.resource_bounds:type_name -> ResourceBounds
	8,  // 36: DeployAccountV3.paymaster_data:type_name -> Felt252
	11, // 37: DeployAccountV3.nonce_data_availability_mode:type_name -> VolitionDomain
	11, // 38: DeployAccountV3.fee_data_availability_mode:type_name -> VolitionDomain
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_p2p_proto_transaction_proto_init() }
func file_p2p_proto_transaction_proto_init() {
	if File_p2p_proto_transaction_proto != nil {
		return
	}
	file_p2p_proto_transaction_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_p2p_proto_transaction_proto_rawDesc), len(file_p2p_proto_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_proto_transaction_proto_goTypes,
		DependencyIndexes: file_p2p_proto_transaction_proto_depIdxs,
		MessageInfos:      file_p2p_proto_transaction_proto_msgTypes,
	}.Build()
	File_p2p_proto_transaction_proto = out.File
	file_p2p_proto_transaction_proto_goTypes = nil
	file_p2p_proto_transaction_proto_depIdxs = nil
}
