// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: transaction.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceLimits struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MaxAmount       *Felt252               `protobuf:"bytes,1,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	MaxPricePerUnit *Felt252               `protobuf:"bytes,2,opt,name=max_price_per_unit,json=maxPricePerUnit,proto3" json:"max_price_per_unit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimits.ProtoReflect.Descriptor instead.
func (*ResourceLimits) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceLimits) GetMaxAmount() *Felt252 {
	if x != nil {
		return x.MaxAmount
	}
	return nil
}

func (x *ResourceLimits) GetMaxPricePerUnit() *Felt252 {
	if x != nil {
		return x.MaxPricePerUnit
	}
	return nil
}

type ResourceBounds struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	L1Gas *ResourceLimits        `protobuf:"bytes,1,opt,name=l1_gas,json=l1Gas,proto3" json:"l1_gas,omitempty"`
	// This can be None only in transactions that don't support l2 gas.
	// Starting from 0.14.0, MempoolTransaction and ConsensusTransaction shouldn't have None here.
	L1DataGas     *ResourceLimits `protobuf:"bytes,2,opt,name=l1_data_gas,json=l1DataGas,proto3,oneof" json:"l1_data_gas,omitempty"`
	L2Gas         *ResourceLimits `protobuf:"bytes,3,opt,name=l2_gas,json=l2Gas,proto3" json:"l2_gas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceBounds) Reset() {
	*x = ResourceBounds{}
	mi := &file_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceBounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceBounds) ProtoMessage() {}

func (x *ResourceBounds) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceBounds.ProtoReflect.Descriptor instead.
func (*ResourceBounds) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceBounds) GetL1Gas() *ResourceLimits {
	if x != nil {
		return x.L1Gas
	}
	return nil
}

func (x *ResourceBounds) GetL1DataGas() *ResourceLimits {
	if x != nil {
		return x.L1DataGas
	}
	return nil
}

func (x *ResourceBounds) GetL2Gas() *ResourceLimits {
	if x != nil {
		return x.L2Gas
	}
	return nil
}

type AccountSignature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parts         []*Felt252             `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountSignature) Reset() {
	*x = AccountSignature{}
	mi := &file_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSignature) ProtoMessage() {}

func (x *AccountSignature) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSignature.ProtoReflect.Descriptor instead.
func (*AccountSignature) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *AccountSignature) GetParts() []*Felt252 {
	if x != nil {
		return x.Parts
	}
	return nil
}

// This is a transaction that is already accepted in a block. Once we have a mempool, we will define
// a separate message for BroadcastedTransaction.
type Transaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Txn:
	//
	//	*Transaction_DeclareV0_
	//	*Transaction_DeclareV1_
	//	*Transaction_DeclareV2_
	//	*Transaction_DeclareV3_
	//	*Transaction_Deploy_
	//	*Transaction_DeployAccountV1_
	//	*Transaction_DeployAccountV3_
	//	*Transaction_InvokeV0_
	//	*Transaction_InvokeV1_
	//	*Transaction_InvokeV3_
	//	*Transaction_L1Handler
	Txn             isTransaction_Txn `protobuf_oneof:"txn"`
	TransactionHash *Hash             `protobuf:"bytes,12,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_transaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *Transaction) GetTxn() isTransaction_Txn {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *Transaction) GetDeclareV0() *Transaction_DeclareV0 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_DeclareV0_); ok {
			return x.DeclareV0
		}
	}
	return nil
}

func (x *Transaction) GetDeclareV1() *Transaction_DeclareV1 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_DeclareV1_); ok {
			return x.DeclareV1
		}
	}
	return nil
}

func (x *Transaction) GetDeclareV2() *Transaction_DeclareV2 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_DeclareV2_); ok {
			return x.DeclareV2
		}
	}
	return nil
}

func (x *Transaction) GetDeclareV3() *Transaction_DeclareV3 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_DeclareV3_); ok {
			return x.DeclareV3
		}
	}
	return nil
}

func (x *Transaction) GetDeploy() *Transaction_Deploy {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_Deploy_); ok {
			return x.Deploy
		}
	}
	return nil
}

func (x *Transaction) GetDeployAccountV1() *Transaction_DeployAccountV1 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_DeployAccountV1_); ok {
			return x.DeployAccountV1
		}
	}
	return nil
}

func (x *Transaction) GetDeployAccountV3() *Transaction_DeployAccountV3 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_DeployAccountV3_); ok {
			return x.DeployAccountV3
		}
	}
	return nil
}

func (x *Transaction) GetInvokeV0() *Transaction_InvokeV0 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_InvokeV0_); ok {
			return x.InvokeV0
		}
	}
	return nil
}

func (x *Transaction) GetInvokeV1() *Transaction_InvokeV1 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_InvokeV1_); ok {
			return x.InvokeV1
		}
	}
	return nil
}

func (x *Transaction) GetInvokeV3() *Transaction_InvokeV3 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_InvokeV3_); ok {
			return x.InvokeV3
		}
	}
	return nil
}

func (x *Transaction) GetL1Handler() *Transaction_L1HandlerV0 {
	if x != nil {
		if x, ok := x.Txn.(*Transaction_L1Handler); ok {
			return x.L1Handler
		}
	}
	return nil
}

func (x *Transaction) GetTransactionHash() *Hash {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

type isTransaction_Txn interface {
	isTransaction_Txn()
}

type Transaction_DeclareV0_ struct {
	DeclareV0 *Transaction_DeclareV0 `protobuf:"bytes,1,opt,name=declare_v0,json=declareV0,proto3,oneof"`
}

type Transaction_DeclareV1_ struct {
	DeclareV1 *Transaction_DeclareV1 `protobuf:"bytes,2,opt,name=declare_v1,json=declareV1,proto3,oneof"`
}

type Transaction_DeclareV2_ struct {
	DeclareV2 *Transaction_DeclareV2 `protobuf:"bytes,3,opt,name=declare_v2,json=declareV2,proto3,oneof"`
}

type Transaction_DeclareV3_ struct {
	DeclareV3 *Transaction_DeclareV3 `protobuf:"bytes,4,opt,name=declare_v3,json=declareV3,proto3,oneof"`
}

type Transaction_Deploy_ struct {
	Deploy *Transaction_Deploy `protobuf:"bytes,5,opt,name=deploy,proto3,oneof"`
}

type Transaction_DeployAccountV1_ struct {
	DeployAccountV1 *Transaction_DeployAccountV1 `protobuf:"bytes,6,opt,name=deploy_account_v1,json=deployAccountV1,proto3,oneof"`
}

type Transaction_DeployAccountV3_ struct {
	DeployAccountV3 *Transaction_DeployAccountV3 `protobuf:"bytes,7,opt,name=deploy_account_v3,json=deployAccountV3,proto3,oneof"`
}

type Transaction_InvokeV0_ struct {
	InvokeV0 *Transaction_InvokeV0 `protobuf:"bytes,8,opt,name=invoke_v0,json=invokeV0,proto3,oneof"`
}

type Transaction_InvokeV1_ struct {
	InvokeV1 *Transaction_InvokeV1 `protobuf:"bytes,9,opt,name=invoke_v1,json=invokeV1,proto3,oneof"`
}

type Transaction_InvokeV3_ struct {
	InvokeV3 *Transaction_InvokeV3 `protobuf:"bytes,10,opt,name=invoke_v3,json=invokeV3,proto3,oneof"`
}

type Transaction_L1Handler struct {
	L1Handler *Transaction_L1HandlerV0 `protobuf:"bytes,11,opt,name=l1_handler,json=l1Handler,proto3,oneof"`
}

func (*Transaction_DeclareV0_) isTransaction_Txn() {}

func (*Transaction_DeclareV1_) isTransaction_Txn() {}

func (*Transaction_DeclareV2_) isTransaction_Txn() {}

func (*Transaction_DeclareV3_) isTransaction_Txn() {}

func (*Transaction_Deploy_) isTransaction_Txn() {}

func (*Transaction_DeployAccountV1_) isTransaction_Txn() {}

func (*Transaction_DeployAccountV3_) isTransaction_Txn() {}

func (*Transaction_InvokeV0_) isTransaction_Txn() {}

func (*Transaction_InvokeV1_) isTransaction_Txn() {}

func (*Transaction_InvokeV3_) isTransaction_Txn() {}

func (*Transaction_L1Handler) isTransaction_Txn() {}

type TransactionWithReceipt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Receipt       *Receipt               `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionWithReceipt) Reset() {
	*x = TransactionWithReceipt{}
	mi := &file_transaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionWithReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionWithReceipt) ProtoMessage() {}

func (x *TransactionWithReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionWithReceipt.ProtoReflect.Descriptor instead.
func (*TransactionWithReceipt) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionWithReceipt) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TransactionWithReceipt) GetReceipt() *Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

// TBD: can support a flag to return tx hashes only, good for standalone mempool to remove them,
// or any node that keeps track of transaction streaming in the consensus.
type TransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iteration     *Iteration             `protobuf:"bytes,1,opt,name=iteration,proto3" json:"iteration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionsRequest) Reset() {
	*x = TransactionsRequest{}
	mi := &file_transaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsRequest) ProtoMessage() {}

func (x *TransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsRequest.ProtoReflect.Descriptor instead.
func (*TransactionsRequest) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionsRequest) GetIteration() *Iteration {
	if x != nil {
		return x.Iteration
	}
	return nil
}

// Responses are sent ordered by the order given in the request. The order inside each block is
// according to the execution order.
type TransactionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to TransactionMessage:
	//
	//	*TransactionsResponse_TransactionWithReceipt
	//	*TransactionsResponse_Fin
	TransactionMessage isTransactionsResponse_TransactionMessage `protobuf_oneof:"transaction_message"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TransactionsResponse) Reset() {
	*x = TransactionsResponse{}
	mi := &file_transaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsResponse) ProtoMessage() {}

func (x *TransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsResponse.ProtoReflect.Descriptor instead.
func (*TransactionsResponse) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionsResponse) GetTransactionMessage() isTransactionsResponse_TransactionMessage {
	if x != nil {
		return x.TransactionMessage
	}
	return nil
}

func (x *TransactionsResponse) GetTransactionWithReceipt() *TransactionWithReceipt {
	if x != nil {
		if x, ok := x.TransactionMessage.(*TransactionsResponse_TransactionWithReceipt); ok {
			return x.TransactionWithReceipt
		}
	}
	return nil
}

func (x *TransactionsResponse) GetFin() *Fin {
	if x != nil {
		if x, ok := x.TransactionMessage.(*TransactionsResponse_Fin); ok {
			return x.Fin
		}
	}
	return nil
}

type isTransactionsResponse_TransactionMessage interface {
	isTransactionsResponse_TransactionMessage()
}

type TransactionsResponse_TransactionWithReceipt struct {
	TransactionWithReceipt *TransactionWithReceipt `protobuf:"bytes,1,opt,name=transaction_with_receipt,json=transactionWithReceipt,proto3,oneof"`
}

type TransactionsResponse_Fin struct {
	Fin *Fin `protobuf:"bytes,2,opt,name=fin,proto3,oneof"` // Fin is sent after the peer sent all the data or when it encountered a block that it doesn't have its transactions.
}

func (*TransactionsResponse_TransactionWithReceipt) isTransactionsResponse_TransactionMessage() {}

func (*TransactionsResponse_Fin) isTransactionsResponse_TransactionMessage() {}

type Transactions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*Transaction         `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transactions) Reset() {
	*x = Transactions{}
	mi := &file_transaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transactions) ProtoMessage() {}

func (x *Transactions) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transactions.ProtoReflect.Descriptor instead.
func (*Transactions) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *Transactions) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type Transaction_DeclareV0 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Address               `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxFee        *Felt252               `protobuf:"bytes,2,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature     *AccountSignature      `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash     *Hash                  `protobuf:"bytes,4,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction_DeclareV0) Reset() {
	*x = Transaction_DeclareV0{}
	mi := &file_transaction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_DeclareV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_DeclareV0) ProtoMessage() {}

func (x *Transaction_DeclareV0) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_DeclareV0.ProtoReflect.Descriptor instead.
func (*Transaction_DeclareV0) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Transaction_DeclareV0) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction_DeclareV0) GetMaxFee() *Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *Transaction_DeclareV0) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_DeclareV0) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

type Transaction_DeclareV1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Address               `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxFee        *Felt252               `protobuf:"bytes,2,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature     *AccountSignature      `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash     *Hash                  `protobuf:"bytes,4,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce         *Felt252               `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction_DeclareV1) Reset() {
	*x = Transaction_DeclareV1{}
	mi := &file_transaction_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_DeclareV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_DeclareV1) ProtoMessage() {}

func (x *Transaction_DeclareV1) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_DeclareV1.ProtoReflect.Descriptor instead.
func (*Transaction_DeclareV1) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Transaction_DeclareV1) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction_DeclareV1) GetMaxFee() *Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *Transaction_DeclareV1) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_DeclareV1) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *Transaction_DeclareV1) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type Transaction_DeclareV2 struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Sender            *Address               `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxFee            *Felt252               `protobuf:"bytes,2,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature         *AccountSignature      `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash         *Hash                  `protobuf:"bytes,4,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce             *Felt252               `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	CompiledClassHash *Hash                  `protobuf:"bytes,6,opt,name=compiled_class_hash,json=compiledClassHash,proto3" json:"compiled_class_hash,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Transaction_DeclareV2) Reset() {
	*x = Transaction_DeclareV2{}
	mi := &file_transaction_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_DeclareV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_DeclareV2) ProtoMessage() {}

func (x *Transaction_DeclareV2) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_DeclareV2.ProtoReflect.Descriptor instead.
func (*Transaction_DeclareV2) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Transaction_DeclareV2) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction_DeclareV2) GetMaxFee() *Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *Transaction_DeclareV2) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_DeclareV2) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *Transaction_DeclareV2) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Transaction_DeclareV2) GetCompiledClassHash() *Hash {
	if x != nil {
		return x.CompiledClassHash
	}
	return nil
}

// see https://external.integration.starknet.io/feeder_gateway/get_transaction?transactionHash=0x41d1f5206ef58a443e7d3d1ca073171ec25fa75313394318fc83a074a6631c3
type Transaction_DeclareV3 struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Sender                    *Address               `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Signature                 *AccountSignature      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash                 *Hash                  `protobuf:"bytes,3,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce                     *Felt252               `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	CompiledClassHash         *Hash                  `protobuf:"bytes,5,opt,name=compiled_class_hash,json=compiledClassHash,proto3" json:"compiled_class_hash,omitempty"`
	ResourceBounds            *ResourceBounds        `protobuf:"bytes,6,opt,name=resource_bounds,json=resourceBounds,proto3" json:"resource_bounds,omitempty"`
	Tip                       uint64                 `protobuf:"varint,7,opt,name=tip,proto3" json:"tip,omitempty"`
	PaymasterData             []*Felt252             `protobuf:"bytes,8,rep,name=paymaster_data,json=paymasterData,proto3" json:"paymaster_data,omitempty"`
	AccountDeploymentData     []*Felt252             `protobuf:"bytes,9,rep,name=account_deployment_data,json=accountDeploymentData,proto3" json:"account_deployment_data,omitempty"`
	NonceDataAvailabilityMode VolitionDomain         `protobuf:"varint,10,opt,name=nonce_data_availability_mode,json=nonceDataAvailabilityMode,proto3,enum=VolitionDomain" json:"nonce_data_availability_mode,omitempty"`
	FeeDataAvailabilityMode   VolitionDomain         `protobuf:"varint,11,opt,name=fee_data_availability_mode,json=feeDataAvailabilityMode,proto3,enum=VolitionDomain" json:"fee_data_availability_mode,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Transaction_DeclareV3) Reset() {
	*x = Transaction_DeclareV3{}
	mi := &file_transaction_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_DeclareV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_DeclareV3) ProtoMessage() {}

func (x *Transaction_DeclareV3) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_DeclareV3.ProtoReflect.Descriptor instead.
func (*Transaction_DeclareV3) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 3}
}

func (x *Transaction_DeclareV3) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction_DeclareV3) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_DeclareV3) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *Transaction_DeclareV3) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Transaction_DeclareV3) GetCompiledClassHash() *Hash {
	if x != nil {
		return x.CompiledClassHash
	}
	return nil
}

func (x *Transaction_DeclareV3) GetResourceBounds() *ResourceBounds {
	if x != nil {
		return x.ResourceBounds
	}
	return nil
}

func (x *Transaction_DeclareV3) GetTip() uint64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *Transaction_DeclareV3) GetPaymasterData() []*Felt252 {
	if x != nil {
		return x.PaymasterData
	}
	return nil
}

func (x *Transaction_DeclareV3) GetAccountDeploymentData() []*Felt252 {
	if x != nil {
		return x.AccountDeploymentData
	}
	return nil
}

func (x *Transaction_DeclareV3) GetNonceDataAvailabilityMode() VolitionDomain {
	if x != nil {
		return x.NonceDataAvailabilityMode
	}
	return VolitionDomain_L1
}

func (x *Transaction_DeclareV3) GetFeeDataAvailabilityMode() VolitionDomain {
	if x != nil {
		return x.FeeDataAvailabilityMode
	}
	return VolitionDomain_L1
}

type Transaction_Deploy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassHash     *Hash                  `protobuf:"bytes,1,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	AddressSalt   *Felt252               `protobuf:"bytes,2,opt,name=address_salt,json=addressSalt,proto3" json:"address_salt,omitempty"`
	Calldata      []*Felt252             `protobuf:"bytes,3,rep,name=calldata,proto3" json:"calldata,omitempty"`
	Version       uint32                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction_Deploy) Reset() {
	*x = Transaction_Deploy{}
	mi := &file_transaction_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_Deploy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Deploy) ProtoMessage() {}

func (x *Transaction_Deploy) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Deploy.ProtoReflect.Descriptor instead.
func (*Transaction_Deploy) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 4}
}

func (x *Transaction_Deploy) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *Transaction_Deploy) GetAddressSalt() *Felt252 {
	if x != nil {
		return x.AddressSalt
	}
	return nil
}

func (x *Transaction_Deploy) GetCalldata() []*Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *Transaction_Deploy) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type Transaction_DeployAccountV1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxFee        *Felt252               `protobuf:"bytes,1,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature     *AccountSignature      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash     *Hash                  `protobuf:"bytes,3,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce         *Felt252               `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	AddressSalt   *Felt252               `protobuf:"bytes,5,opt,name=address_salt,json=addressSalt,proto3" json:"address_salt,omitempty"`
	Calldata      []*Felt252             `protobuf:"bytes,6,rep,name=calldata,proto3" json:"calldata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction_DeployAccountV1) Reset() {
	*x = Transaction_DeployAccountV1{}
	mi := &file_transaction_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_DeployAccountV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_DeployAccountV1) ProtoMessage() {}

func (x *Transaction_DeployAccountV1) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_DeployAccountV1.ProtoReflect.Descriptor instead.
func (*Transaction_DeployAccountV1) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 5}
}

func (x *Transaction_DeployAccountV1) GetMaxFee() *Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *Transaction_DeployAccountV1) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_DeployAccountV1) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *Transaction_DeployAccountV1) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Transaction_DeployAccountV1) GetAddressSalt() *Felt252 {
	if x != nil {
		return x.AddressSalt
	}
	return nil
}

func (x *Transaction_DeployAccountV1) GetCalldata() []*Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

// see https://external.integration.starknet.io/feeder_gateway/get_transaction?transactionHash=0x29fd7881f14380842414cdfdd8d6c0b1f2174f8916edcfeb1ede1eb26ac3ef0
type Transaction_DeployAccountV3 struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Signature                 *AccountSignature      `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash                 *Hash                  `protobuf:"bytes,2,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce                     *Felt252               `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	AddressSalt               *Felt252               `protobuf:"bytes,4,opt,name=address_salt,json=addressSalt,proto3" json:"address_salt,omitempty"`
	Calldata                  []*Felt252             `protobuf:"bytes,5,rep,name=calldata,proto3" json:"calldata,omitempty"`
	ResourceBounds            *ResourceBounds        `protobuf:"bytes,6,opt,name=resource_bounds,json=resourceBounds,proto3" json:"resource_bounds,omitempty"`
	Tip                       uint64                 `protobuf:"varint,7,opt,name=tip,proto3" json:"tip,omitempty"`
	PaymasterData             []*Felt252             `protobuf:"bytes,8,rep,name=paymaster_data,json=paymasterData,proto3" json:"paymaster_data,omitempty"`
	NonceDataAvailabilityMode VolitionDomain         `protobuf:"varint,9,opt,name=nonce_data_availability_mode,json=nonceDataAvailabilityMode,proto3,enum=VolitionDomain" json:"nonce_data_availability_mode,omitempty"`
	FeeDataAvailabilityMode   VolitionDomain         `protobuf:"varint,10,opt,name=fee_data_availability_mode,json=feeDataAvailabilityMode,proto3,enum=VolitionDomain" json:"fee_data_availability_mode,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Transaction_DeployAccountV3) Reset() {
	*x = Transaction_DeployAccountV3{}
	mi := &file_transaction_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_DeployAccountV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_DeployAccountV3) ProtoMessage() {}

func (x *Transaction_DeployAccountV3) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_DeployAccountV3.ProtoReflect.Descriptor instead.
func (*Transaction_DeployAccountV3) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 6}
}

func (x *Transaction_DeployAccountV3) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_DeployAccountV3) GetClassHash() *Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *Transaction_DeployAccountV3) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Transaction_DeployAccountV3) GetAddressSalt() *Felt252 {
	if x != nil {
		return x.AddressSalt
	}
	return nil
}

func (x *Transaction_DeployAccountV3) GetCalldata() []*Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *Transaction_DeployAccountV3) GetResourceBounds() *ResourceBounds {
	if x != nil {
		return x.ResourceBounds
	}
	return nil
}

func (x *Transaction_DeployAccountV3) GetTip() uint64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *Transaction_DeployAccountV3) GetPaymasterData() []*Felt252 {
	if x != nil {
		return x.PaymasterData
	}
	return nil
}

func (x *Transaction_DeployAccountV3) GetNonceDataAvailabilityMode() VolitionDomain {
	if x != nil {
		return x.NonceDataAvailabilityMode
	}
	return VolitionDomain_L1
}

func (x *Transaction_DeployAccountV3) GetFeeDataAvailabilityMode() VolitionDomain {
	if x != nil {
		return x.FeeDataAvailabilityMode
	}
	return VolitionDomain_L1
}

type Transaction_InvokeV0 struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MaxFee             *Felt252               `protobuf:"bytes,1,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature          *AccountSignature      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Address            *Address               `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	EntryPointSelector *Felt252               `protobuf:"bytes,4,opt,name=entry_point_selector,json=entryPointSelector,proto3" json:"entry_point_selector,omitempty"`
	Calldata           []*Felt252             `protobuf:"bytes,5,rep,name=calldata,proto3" json:"calldata,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Transaction_InvokeV0) Reset() {
	*x = Transaction_InvokeV0{}
	mi := &file_transaction_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_InvokeV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_InvokeV0) ProtoMessage() {}

func (x *Transaction_InvokeV0) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_InvokeV0.ProtoReflect.Descriptor instead.
func (*Transaction_InvokeV0) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 7}
}

func (x *Transaction_InvokeV0) GetMaxFee() *Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *Transaction_InvokeV0) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_InvokeV0) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Transaction_InvokeV0) GetEntryPointSelector() *Felt252 {
	if x != nil {
		return x.EntryPointSelector
	}
	return nil
}

func (x *Transaction_InvokeV0) GetCalldata() []*Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

type Transaction_InvokeV1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Address               `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxFee        *Felt252               `protobuf:"bytes,2,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature     *AccountSignature      `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Calldata      []*Felt252             `protobuf:"bytes,4,rep,name=calldata,proto3" json:"calldata,omitempty"`
	Nonce         *Felt252               `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction_InvokeV1) Reset() {
	*x = Transaction_InvokeV1{}
	mi := &file_transaction_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_InvokeV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_InvokeV1) ProtoMessage() {}

func (x *Transaction_InvokeV1) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_InvokeV1.ProtoReflect.Descriptor instead.
func (*Transaction_InvokeV1) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 8}
}

func (x *Transaction_InvokeV1) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction_InvokeV1) GetMaxFee() *Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *Transaction_InvokeV1) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_InvokeV1) GetCalldata() []*Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *Transaction_InvokeV1) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

// see https://external.integration.starknet.io/feeder_gateway/get_transaction?transactionHash=0x41906f1c314cca5f43170ea75d3b1904196a10101190d2b12a41cc61cfd17c
type Transaction_InvokeV3 struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Sender                    *Address               `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Signature                 *AccountSignature      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Calldata                  []*Felt252             `protobuf:"bytes,3,rep,name=calldata,proto3" json:"calldata,omitempty"`
	ResourceBounds            *ResourceBounds        `protobuf:"bytes,4,opt,name=resource_bounds,json=resourceBounds,proto3" json:"resource_bounds,omitempty"`
	Tip                       uint64                 `protobuf:"varint,5,opt,name=tip,proto3" json:"tip,omitempty"`
	PaymasterData             []*Felt252             `protobuf:"bytes,6,rep,name=paymaster_data,json=paymasterData,proto3" json:"paymaster_data,omitempty"`
	AccountDeploymentData     []*Felt252             `protobuf:"bytes,7,rep,name=account_deployment_data,json=accountDeploymentData,proto3" json:"account_deployment_data,omitempty"`
	NonceDataAvailabilityMode VolitionDomain         `protobuf:"varint,8,opt,name=nonce_data_availability_mode,json=nonceDataAvailabilityMode,proto3,enum=VolitionDomain" json:"nonce_data_availability_mode,omitempty"`
	FeeDataAvailabilityMode   VolitionDomain         `protobuf:"varint,9,opt,name=fee_data_availability_mode,json=feeDataAvailabilityMode,proto3,enum=VolitionDomain" json:"fee_data_availability_mode,omitempty"`
	Nonce                     *Felt252               `protobuf:"bytes,10,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Transaction_InvokeV3) Reset() {
	*x = Transaction_InvokeV3{}
	mi := &file_transaction_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_InvokeV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_InvokeV3) ProtoMessage() {}

func (x *Transaction_InvokeV3) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_InvokeV3.ProtoReflect.Descriptor instead.
func (*Transaction_InvokeV3) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 9}
}

func (x *Transaction_InvokeV3) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction_InvokeV3) GetSignature() *AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction_InvokeV3) GetCalldata() []*Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *Transaction_InvokeV3) GetResourceBounds() *ResourceBounds {
	if x != nil {
		return x.ResourceBounds
	}
	return nil
}

func (x *Transaction_InvokeV3) GetTip() uint64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *Transaction_InvokeV3) GetPaymasterData() []*Felt252 {
	if x != nil {
		return x.PaymasterData
	}
	return nil
}

func (x *Transaction_InvokeV3) GetAccountDeploymentData() []*Felt252 {
	if x != nil {
		return x.AccountDeploymentData
	}
	return nil
}

func (x *Transaction_InvokeV3) GetNonceDataAvailabilityMode() VolitionDomain {
	if x != nil {
		return x.NonceDataAvailabilityMode
	}
	return VolitionDomain_L1
}

func (x *Transaction_InvokeV3) GetFeeDataAvailabilityMode() VolitionDomain {
	if x != nil {
		return x.FeeDataAvailabilityMode
	}
	return VolitionDomain_L1
}

func (x *Transaction_InvokeV3) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type Transaction_L1HandlerV0 struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Nonce              *Felt252               `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Address            *Address               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	EntryPointSelector *Felt252               `protobuf:"bytes,3,opt,name=entry_point_selector,json=entryPointSelector,proto3" json:"entry_point_selector,omitempty"`
	Calldata           []*Felt252             `protobuf:"bytes,4,rep,name=calldata,proto3" json:"calldata,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Transaction_L1HandlerV0) Reset() {
	*x = Transaction_L1HandlerV0{}
	mi := &file_transaction_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_L1HandlerV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_L1HandlerV0) ProtoMessage() {}

func (x *Transaction_L1HandlerV0) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_L1HandlerV0.ProtoReflect.Descriptor instead.
func (*Transaction_L1HandlerV0) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3, 10}
}

func (x *Transaction_L1HandlerV0) GetNonce() *Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Transaction_L1HandlerV0) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Transaction_L1HandlerV0) GetEntryPointSelector() *Felt252 {
	if x != nil {
		return x.EntryPointSelector
	}
	return nil
}

func (x *Transaction_L1HandlerV0) GetCalldata() []*Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

var File_transaction_proto protoreflect.FileDescriptor

const file_transaction_proto_rawDesc = "" +
	"\n" +
	"\x11transaction.proto\x1a\fcommon.proto\x1a\rreceipt.proto\"p\n" +
	"\x0eResourceLimits\x12'\n" +
	"\n" +
	"max_amount\x18\x01 \x01(\v2\b.Felt252R\tmaxAmount\x125\n" +
	"\x12max_price_per_unit\x18\x02 \x01(\v2\b.Felt252R\x0fmaxPricePerUnit\"\xa6\x01\n" +
	"\x0eResourceBounds\x12&\n" +
	"\x06l1_gas\x18\x01 \x01(\v2\x0f.ResourceLimitsR\x05l1Gas\x124\n" +
	"\vl1_data_gas\x18\x02 \x01(\v2\x0f.ResourceLimitsH\x00R\tl1DataGas\x88\x01\x01\x12&\n" +
	"\x06l2_gas\x18\x03 \x01(\v2\x0f.ResourceLimitsR\x05l2GasB\x0e\n" +
	"\f_l1_data_gas\"2\n" +
	"\x10AccountSignature\x12\x1e\n" +
	"\x05parts\x18\x01 \x03(\v2\b.Felt252R\x05parts\"\x85\x1f\n" +
	"\vTransaction\x127\n" +
	"\n" +
	"declare_v0\x18\x01 \x01(\v2\x16.Transaction.DeclareV0H\x00R\tdeclareV0\x127\n" +
	"\n" +
	"declare_v1\x18\x02 \x01(\v2\x16.Transaction.DeclareV1H\x00R\tdeclareV1\x127\n" +
	"\n" +
	"declare_v2\x18\x03 \x01(\v2\x16.Transaction.DeclareV2H\x00R\tdeclareV2\x127\n" +
	"\n" +
	"declare_v3\x18\x04 \x01(\v2\x16.Transaction.DeclareV3H\x00R\tdeclareV3\x12-\n" +
	"\x06deploy\x18\x05 \x01(\v2\x13.Transaction.DeployH\x00R\x06deploy\x12J\n" +
	"\x11deploy_account_v1\x18\x06 \x01(\v2\x1c.Transaction.DeployAccountV1H\x00R\x0fdeployAccountV1\x12J\n" +
	"\x11deploy_account_v3\x18\a \x01(\v2\x1c.Transaction.DeployAccountV3H\x00R\x0fdeployAccountV3\x124\n" +
	"\tinvoke_v0\x18\b \x01(\v2\x15.Transaction.InvokeV0H\x00R\binvokeV0\x124\n" +
	"\tinvoke_v1\x18\t \x01(\v2\x15.Transaction.InvokeV1H\x00R\binvokeV1\x124\n" +
	"\tinvoke_v3\x18\n" +
	" \x01(\v2\x15.Transaction.InvokeV3H\x00R\binvokeV3\x129\n" +
	"\n" +
	"l1_handler\x18\v \x01(\v2\x18.Transaction.L1HandlerV0H\x00R\tl1Handler\x120\n" +
	"\x10transaction_hash\x18\f \x01(\v2\x05.HashR\x0ftransactionHash\x1a\xa7\x01\n" +
	"\tDeclareV0\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12!\n" +
	"\amax_fee\x18\x02 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x03 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x04 \x01(\v2\x05.HashR\tclassHash\x1a\xc7\x01\n" +
	"\tDeclareV1\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12!\n" +
	"\amax_fee\x18\x02 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x03 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x04 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x05 \x01(\v2\b.Felt252R\x05nonce\x1a\xfe\x01\n" +
	"\tDeclareV2\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12!\n" +
	"\amax_fee\x18\x02 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x03 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x04 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x05 \x01(\v2\b.Felt252R\x05nonce\x125\n" +
	"\x13compiled_class_hash\x18\x06 \x01(\v2\x05.HashR\x11compiledClassHash\x1a\xba\x04\n" +
	"\tDeclareV3\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12/\n" +
	"\tsignature\x18\x02 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x03 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x04 \x01(\v2\b.Felt252R\x05nonce\x125\n" +
	"\x13compiled_class_hash\x18\x05 \x01(\v2\x05.HashR\x11compiledClassHash\x128\n" +
	"\x0fresource_bounds\x18\x06 \x01(\v2\x0f.ResourceBoundsR\x0eresourceBounds\x12\x10\n" +
	"\x03tip\x18\a \x01(\x04R\x03tip\x12/\n" +
	"\x0epaymaster_data\x18\b \x03(\v2\b.Felt252R\rpaymasterData\x12@\n" +
	"\x17account_deployment_data\x18\t \x03(\v2\b.Felt252R\x15accountDeploymentData\x12P\n" +
	"\x1cnonce_data_availability_mode\x18\n" +
	" \x01(\x0e2\x0f.VolitionDomainR\x19nonceDataAvailabilityMode\x12L\n" +
	"\x1afee_data_availability_mode\x18\v \x01(\x0e2\x0f.VolitionDomainR\x17feeDataAvailabilityMode\x1a\x9b\x01\n" +
	"\x06Deploy\x12$\n" +
	"\n" +
	"class_hash\x18\x01 \x01(\v2\x05.HashR\tclassHash\x12+\n" +
	"\faddress_salt\x18\x02 \x01(\v2\b.Felt252R\vaddressSalt\x12$\n" +
	"\bcalldata\x18\x03 \x03(\v2\b.Felt252R\bcalldata\x12\x18\n" +
	"\aversion\x18\x04 \x01(\rR\aversion\x1a\xfe\x01\n" +
	"\x0fDeployAccountV1\x12!\n" +
	"\amax_fee\x18\x01 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x02 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x03 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x04 \x01(\v2\b.Felt252R\x05nonce\x12+\n" +
	"\faddress_salt\x18\x05 \x01(\v2\b.Felt252R\vaddressSalt\x12$\n" +
	"\bcalldata\x18\x06 \x03(\v2\b.Felt252R\bcalldata\x1a\xf8\x03\n" +
	"\x0fDeployAccountV3\x12/\n" +
	"\tsignature\x18\x01 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x02 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x03 \x01(\v2\b.Felt252R\x05nonce\x12+\n" +
	"\faddress_salt\x18\x04 \x01(\v2\b.Felt252R\vaddressSalt\x12$\n" +
	"\bcalldata\x18\x05 \x03(\v2\b.Felt252R\bcalldata\x128\n" +
	"\x0fresource_bounds\x18\x06 \x01(\v2\x0f.ResourceBoundsR\x0eresourceBounds\x12\x10\n" +
	"\x03tip\x18\a \x01(\x04R\x03tip\x12/\n" +
	"\x0epaymaster_data\x18\b \x03(\v2\b.Felt252R\rpaymasterData\x12P\n" +
	"\x1cnonce_data_availability_mode\x18\t \x01(\x0e2\x0f.VolitionDomainR\x19nonceDataAvailabilityMode\x12L\n" +
	"\x1afee_data_availability_mode\x18\n" +
	" \x01(\x0e2\x0f.VolitionDomainR\x17feeDataAvailabilityMode\x1a\xe4\x01\n" +
	"\bInvokeV0\x12!\n" +
	"\amax_fee\x18\x01 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x02 \x01(\v2\x11.AccountSignatureR\tsignature\x12\"\n" +
	"\aaddress\x18\x03 \x01(\v2\b.AddressR\aaddress\x12:\n" +
	"\x14entry_point_selector\x18\x04 \x01(\v2\b.Felt252R\x12entryPointSelector\x12$\n" +
	"\bcalldata\x18\x05 \x03(\v2\b.Felt252R\bcalldata\x1a\xc6\x01\n" +
	"\bInvokeV1\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12!\n" +
	"\amax_fee\x18\x02 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x03 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\bcalldata\x18\x04 \x03(\v2\b.Felt252R\bcalldata\x12\x1e\n" +
	"\x05nonce\x18\x05 \x01(\v2\b.Felt252R\x05nonce\x1a\x82\x04\n" +
	"\bInvokeV3\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12/\n" +
	"\tsignature\x18\x02 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\bcalldata\x18\x03 \x03(\v2\b.Felt252R\bcalldata\x128\n" +
	"\x0fresource_bounds\x18\x04 \x01(\v2\x0f.ResourceBoundsR\x0eresourceBounds\x12\x10\n" +
	"\x03tip\x18\x05 \x01(\x04R\x03tip\x12/\n" +
	"\x0epaymaster_data\x18\x06 \x03(\v2\b.Felt252R\rpaymasterData\x12@\n" +
	"\x17account_deployment_data\x18\a \x03(\v2\b.Felt252R\x15accountDeploymentData\x12P\n" +
	"\x1cnonce_data_availability_mode\x18\b \x01(\x0e2\x0f.VolitionDomainR\x19nonceDataAvailabilityMode\x12L\n" +
	"\x1afee_data_availability_mode\x18\t \x01(\x0e2\x0f.VolitionDomainR\x17feeDataAvailabilityMode\x12\x1e\n" +
	"\x05nonce\x18\n" +
	" \x01(\v2\b.Felt252R\x05nonce\x1a\xb3\x01\n" +
	"\vL1HandlerV0\x12\x1e\n" +
	"\x05nonce\x18\x01 \x01(\v2\b.Felt252R\x05nonce\x12\"\n" +
	"\aaddress\x18\x02 \x01(\v2\b.AddressR\aaddress\x12:\n" +
	"\x14entry_point_selector\x18\x03 \x01(\v2\b.Felt252R\x12entryPointSelector\x12$\n" +
	"\bcalldata\x18\x04 \x03(\v2\b.Felt252R\bcalldataB\x05\n" +
	"\x03txn\"l\n" +
	"\x16TransactionWithReceipt\x12.\n" +
	"\vtransaction\x18\x01 \x01(\v2\f.TransactionR\vtransaction\x12\"\n" +
	"\areceipt\x18\x02 \x01(\v2\b.ReceiptR\areceipt\"?\n" +
	"\x13TransactionsRequest\x12(\n" +
	"\titeration\x18\x01 \x01(\v2\n" +
	".IterationR\titeration\"\x9c\x01\n" +
	"\x14TransactionsResponse\x12S\n" +
	"\x18transaction_with_receipt\x18\x01 \x01(\v2\x17.TransactionWithReceiptH\x00R\x16transactionWithReceipt\x12\x18\n" +
	"\x03fin\x18\x02 \x01(\v2\x04.FinH\x00R\x03finB\x15\n" +
	"\x13transaction_message\"@\n" +
	"\fTransactions\x120\n" +
	"\ftransactions\x18\x01 \x03(\v2\f.TransactionR\ftransactionsB'Z%github.com/NethermindEth/juno/p2p/genb\x06proto3"

var (
	file_transaction_proto_rawDescOnce sync.Once
	file_transaction_proto_rawDescData []byte
)

func file_transaction_proto_rawDescGZIP() []byte {
	file_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transaction_proto_rawDesc), len(file_transaction_proto_rawDesc)))
	})
	return file_transaction_proto_rawDescData
}

var file_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_transaction_proto_goTypes = []any{
	(*ResourceLimits)(nil),              // 0: ResourceLimits
	(*ResourceBounds)(nil),              // 1: ResourceBounds
	(*AccountSignature)(nil),            // 2: AccountSignature
	(*Transaction)(nil),                 // 3: Transaction
	(*TransactionWithReceipt)(nil),      // 4: TransactionWithReceipt
	(*TransactionsRequest)(nil),         // 5: TransactionsRequest
	(*TransactionsResponse)(nil),        // 6: TransactionsResponse
	(*Transactions)(nil),                // 7: Transactions
	(*Transaction_DeclareV0)(nil),       // 8: Transaction.DeclareV0
	(*Transaction_DeclareV1)(nil),       // 9: Transaction.DeclareV1
	(*Transaction_DeclareV2)(nil),       // 10: Transaction.DeclareV2
	(*Transaction_DeclareV3)(nil),       // 11: Transaction.DeclareV3
	(*Transaction_Deploy)(nil),          // 12: Transaction.Deploy
	(*Transaction_DeployAccountV1)(nil), // 13: Transaction.DeployAccountV1
	(*Transaction_DeployAccountV3)(nil), // 14: Transaction.DeployAccountV3
	(*Transaction_InvokeV0)(nil),        // 15: Transaction.InvokeV0
	(*Transaction_InvokeV1)(nil),        // 16: Transaction.InvokeV1
	(*Transaction_InvokeV3)(nil),        // 17: Transaction.InvokeV3
	(*Transaction_L1HandlerV0)(nil),     // 18: Transaction.L1HandlerV0
	(*Felt252)(nil),                     // 19: Felt252
	(*Hash)(nil),                        // 20: Hash
	(*Receipt)(nil),                     // 21: Receipt
	(*Iteration)(nil),                   // 22: Iteration
	(*Fin)(nil),                         // 23: Fin
	(*Address)(nil),                     // 24: Address
	(VolitionDomain)(0),                 // 25: VolitionDomain
}
var file_transaction_proto_depIdxs = []int32{
	19, // 0: ResourceLimits.max_amount:type_name -> Felt252
	19, // 1: ResourceLimits.max_price_per_unit:type_name -> Felt252
	0,  // 2: ResourceBounds.l1_gas:type_name -> ResourceLimits
	0,  // 3: ResourceBounds.l1_data_gas:type_name -> ResourceLimits
	0,  // 4: ResourceBounds.l2_gas:type_name -> ResourceLimits
	19, // 5: AccountSignature.parts:type_name -> Felt252
	8,  // 6: Transaction.declare_v0:type_name -> Transaction.DeclareV0
	9,  // 7: Transaction.declare_v1:type_name -> Transaction.DeclareV1
	10, // 8: Transaction.declare_v2:type_name -> Transaction.DeclareV2
	11, // 9: Transaction.declare_v3:type_name -> Transaction.DeclareV3
	12, // 10: Transaction.deploy:type_name -> Transaction.Deploy
	13, // 11: Transaction.deploy_account_v1:type_name -> Transaction.DeployAccountV1
	14, // 12: Transaction.deploy_account_v3:type_name -> Transaction.DeployAccountV3
	15, // 13: Transaction.invoke_v0:type_name -> Transaction.InvokeV0
	16, // 14: Transaction.invoke_v1:type_name -> Transaction.InvokeV1
	17, // 15: Transaction.invoke_v3:type_name -> Transaction.InvokeV3
	18, // 16: Transaction.l1_handler:type_name -> Transaction.L1HandlerV0
	20, // 17: Transaction.transaction_hash:type_name -> Hash
	3,  // 18: TransactionWithReceipt.transaction:type_name -> Transaction
	21, // 19: TransactionWithReceipt.receipt:type_name -> Receipt
	22, // 20: TransactionsRequest.iteration:type_name -> Iteration
	4,  // 21: TransactionsResponse.transaction_with_receipt:type_name -> TransactionWithReceipt
	23, // 22: TransactionsResponse.fin:type_name -> Fin
	3,  // 23: Transactions.transactions:type_name -> Transaction
	24, // 24: Transaction.DeclareV0.sender:type_name -> Address
	19, // 25: Transaction.DeclareV0.max_fee:type_name -> Felt252
	2,  // 26: Transaction.DeclareV0.signature:type_name -> AccountSignature
	20, // 27: Transaction.DeclareV0.class_hash:type_name -> Hash
	24, // 28: Transaction.DeclareV1.sender:type_name -> Address
	19, // 29: Transaction.DeclareV1.max_fee:type_name -> Felt252
	2,  // 30: Transaction.DeclareV1.signature:type_name -> AccountSignature
	20, // 31: Transaction.DeclareV1.class_hash:type_name -> Hash
	19, // 32: Transaction.DeclareV1.nonce:type_name -> Felt252
	24, // 33: Transaction.DeclareV2.sender:type_name -> Address
	19, // 34: Transaction.DeclareV2.max_fee:type_name -> Felt252
	2,  // 35: Transaction.DeclareV2.signature:type_name -> AccountSignature
	20, // 36: Transaction.DeclareV2.class_hash:type_name -> Hash
	19, // 37: Transaction.DeclareV2.nonce:type_name -> Felt252
	20, // 38: Transaction.DeclareV2.compiled_class_hash:type_name -> Hash
	24, // 39: Transaction.DeclareV3.sender:type_name -> Address
	2,  // 40: Transaction.DeclareV3.signature:type_name -> AccountSignature
	20, // 41: Transaction.DeclareV3.class_hash:type_name -> Hash
	19, // 42: Transaction.DeclareV3.nonce:type_name -> Felt252
	20, // 43: Transaction.DeclareV3.compiled_class_hash:type_name -> Hash
	1,  // 44: Transaction.DeclareV3.resource_bounds:type_name -> ResourceBounds
	19, // 45: Transaction.DeclareV3.paymaster_data:type_name -> Felt252
	19, // 46: Transaction.DeclareV3.account_deployment_data:type_name -> Felt252
	25, // 47: Transaction.DeclareV3.nonce_data_availability_mode:type_name -> VolitionDomain
	25, // 48: Transaction.DeclareV3.fee_data_availability_mode:type_name -> VolitionDomain
	20, // 49: Transaction.Deploy.class_hash:type_name -> Hash
	19, // 50: Transaction.Deploy.address_salt:type_name -> Felt252
	19, // 51: Transaction.Deploy.calldata:type_name -> Felt252
	19, // 52: Transaction.DeployAccountV1.max_fee:type_name -> Felt252
	2,  // 53: Transaction.DeployAccountV1.signature:type_name -> AccountSignature
	20, // 54: Transaction.DeployAccountV1.class_hash:type_name -> Hash
	19, // 55: Transaction.DeployAccountV1.nonce:type_name -> Felt252
	19, // 56: Transaction.DeployAccountV1.address_salt:type_name -> Felt252
	19, // 57: Transaction.DeployAccountV1.calldata:type_name -> Felt252
	2,  // 58: Transaction.DeployAccountV3.signature:type_name -> AccountSignature
	20, // 59: Transaction.DeployAccountV3.class_hash:type_name -> Hash
	19, // 60: Transaction.DeployAccountV3.nonce:type_name -> Felt252
	19, // 61: Transaction.DeployAccountV3.address_salt:type_name -> Felt252
	19, // 62: Transaction.DeployAccountV3.calldata:type_name -> Felt252
	1,  // 63: Transaction.DeployAccountV3.resource_bounds:type_name -> ResourceBounds
	19, // 64: Transaction.DeployAccountV3.paymaster_data:type_name -> Felt252
	25, // 65: Transaction.DeployAccountV3.nonce_data_availability_mode:type_name -> VolitionDomain
	25, // 66: Transaction.DeployAccountV3.fee_data_availability_mode:type_name -> VolitionDomain
	19, // 67: Transaction.InvokeV0.max_fee:type_name -> Felt252
	2,  // 68: Transaction.InvokeV0.signature:type_name -> AccountSignature
	24, // 69: Transaction.InvokeV0.address:type_name -> Address
	19, // 70: Transaction.InvokeV0.entry_point_selector:type_name -> Felt252
	19, // 71: Transaction.InvokeV0.calldata:type_name -> Felt252
	24, // 72: Transaction.InvokeV1.sender:type_name -> Address
	19, // 73: Transaction.InvokeV1.max_fee:type_name -> Felt252
	2,  // 74: Transaction.InvokeV1.signature:type_name -> AccountSignature
	19, // 75: Transaction.InvokeV1.calldata:type_name -> Felt252
	19, // 76: Transaction.InvokeV1.nonce:type_name -> Felt252
	24, // 77: Transaction.InvokeV3.sender:type_name -> Address
	2,  // 78: Transaction.InvokeV3.signature:type_name -> AccountSignature
	19, // 79: Transaction.InvokeV3.calldata:type_name -> Felt252
	1,  // 80: Transaction.InvokeV3.resource_bounds:type_name -> ResourceBounds
	19, // 81: Transaction.InvokeV3.paymaster_data:type_name -> Felt252
	19, // 82: Transaction.InvokeV3.account_deployment_data:type_name -> Felt252
	25, // 83: Transaction.InvokeV3.nonce_data_availability_mode:type_name -> VolitionDomain
	25, // 84: Transaction.InvokeV3.fee_data_availability_mode:type_name -> VolitionDomain
	19, // 85: Transaction.InvokeV3.nonce:type_name -> Felt252
	19, // 86: Transaction.L1HandlerV0.nonce:type_name -> Felt252
	24, // 87: Transaction.L1HandlerV0.address:type_name -> Address
	19, // 88: Transaction.L1HandlerV0.entry_point_selector:type_name -> Felt252
	19, // 89: Transaction.L1HandlerV0.calldata:type_name -> Felt252
	90, // [90:90] is the sub-list for method output_type
	90, // [90:90] is the sub-list for method input_type
	90, // [90:90] is the sub-list for extension type_name
	90, // [90:90] is the sub-list for extension extendee
	0,  // [0:90] is the sub-list for field type_name
}

func init() { file_transaction_proto_init() }
func file_transaction_proto_init() {
	if File_transaction_proto != nil {
		return
	}
	file_common_proto_init()
	file_receipt_proto_init()
	file_transaction_proto_msgTypes[1].OneofWrappers = []any{}
	file_transaction_proto_msgTypes[3].OneofWrappers = []any{
		(*Transaction_DeclareV0_)(nil),
		(*Transaction_DeclareV1_)(nil),
		(*Transaction_DeclareV2_)(nil),
		(*Transaction_DeclareV3_)(nil),
		(*Transaction_Deploy_)(nil),
		(*Transaction_DeployAccountV1_)(nil),
		(*Transaction_DeployAccountV3_)(nil),
		(*Transaction_InvokeV0_)(nil),
		(*Transaction_InvokeV1_)(nil),
		(*Transaction_InvokeV3_)(nil),
		(*Transaction_L1Handler)(nil),
	}
	file_transaction_proto_msgTypes[6].OneofWrappers = []any{
		(*TransactionsResponse_TransactionWithReceipt)(nil),
		(*TransactionsResponse_Fin)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transaction_proto_rawDesc), len(file_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_proto_depIdxs,
		MessageInfos:      file_transaction_proto_msgTypes,
	}.Build()
	File_transaction_proto = out.File
	file_transaction_proto_goTypes = nil
	file_transaction_proto_depIdxs = nil
}
