// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: common.proto

package p2pproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []byte `protobuf:"bytes,1,opt,name=elements,proto3" json:"elements,omitempty"`
}

func (x *FieldElement) Reset() {
	*x = FieldElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldElement) ProtoMessage() {}

func (x *FieldElement) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldElement.ProtoReflect.Descriptor instead.
func (*FieldElement) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *FieldElement) GetElements() []byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

type EthereumAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []byte `protobuf:"bytes,1,opt,name=elements,proto3" json:"elements,omitempty"`
}

func (x *EthereumAddress) Reset() {
	*x = EthereumAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthereumAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthereumAddress) ProtoMessage() {}

func (x *EthereumAddress) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthereumAddress.ProtoReflect.Descriptor instead.
func (*EthereumAddress) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *EthereumAddress) GetElements() []byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

type PeerID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PeerID) Reset() {
	*x = PeerID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerID) ProtoMessage() {}

func (x *PeerID) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerID.ProtoReflect.Descriptor instead.
func (*PeerID) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *PeerID) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash                  *FieldElement `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty"` // The hash can't be calculated deterministically. There can be more than on possible hash per header due to fallback sequencer address.
	ParentBlockHash       *FieldElement `protobuf:"bytes,1,opt,name=parent_block_hash,json=parentBlockHash,proto3" json:"parent_block_hash,omitempty"`
	BlockNumber           uint64        `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	GlobalStateRoot       *FieldElement `protobuf:"bytes,3,opt,name=global_state_root,json=globalStateRoot,proto3" json:"global_state_root,omitempty"`
	SequencerAddress      *FieldElement `protobuf:"bytes,4,opt,name=sequencer_address,json=sequencerAddress,proto3" json:"sequencer_address,omitempty"`
	BlockTimestamp        uint64        `protobuf:"varint,5,opt,name=block_timestamp,json=blockTimestamp,proto3" json:"block_timestamp,omitempty"`
	TransactionCount      uint32        `protobuf:"varint,6,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	TransactionCommitment *FieldElement `protobuf:"bytes,7,opt,name=transaction_commitment,json=transactionCommitment,proto3" json:"transaction_commitment,omitempty"`
	EventCount            uint32        `protobuf:"varint,8,opt,name=event_count,json=eventCount,proto3" json:"event_count,omitempty"`
	EventCommitment       *FieldElement `protobuf:"bytes,9,opt,name=event_commitment,json=eventCommitment,proto3" json:"event_commitment,omitempty"`
	ProtocolVersion       uint32        `protobuf:"varint,10,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *BlockHeader) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *BlockHeader) GetParentBlockHash() *FieldElement {
	if x != nil {
		return x.ParentBlockHash
	}
	return nil
}

func (x *BlockHeader) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockHeader) GetGlobalStateRoot() *FieldElement {
	if x != nil {
		return x.GlobalStateRoot
	}
	return nil
}

func (x *BlockHeader) GetSequencerAddress() *FieldElement {
	if x != nil {
		return x.SequencerAddress
	}
	return nil
}

func (x *BlockHeader) GetBlockTimestamp() uint64 {
	if x != nil {
		return x.BlockTimestamp
	}
	return 0
}

func (x *BlockHeader) GetTransactionCount() uint32 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *BlockHeader) GetTransactionCommitment() *FieldElement {
	if x != nil {
		return x.TransactionCommitment
	}
	return nil
}

func (x *BlockHeader) GetEventCount() uint32 {
	if x != nil {
		return x.EventCount
	}
	return 0
}

func (x *BlockHeader) GetEventCommitment() *FieldElement {
	if x != nil {
		return x.EventCommitment
	}
	return nil
}

func (x *BlockHeader) GetProtocolVersion() uint32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

type InvokeTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderAddress      *FieldElement   `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	EntryPointSelector *FieldElement   `protobuf:"bytes,2,opt,name=entry_point_selector,json=entryPointSelector,proto3" json:"entry_point_selector,omitempty"`
	Calldata           []*FieldElement `protobuf:"bytes,3,rep,name=calldata,proto3" json:"calldata,omitempty"`
	Signature          []*FieldElement `protobuf:"bytes,4,rep,name=signature,proto3" json:"signature,omitempty"`
	MaxFee             *FieldElement   `protobuf:"bytes,5,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Nonce              *FieldElement   `protobuf:"bytes,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Version            *FieldElement   `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Hash               *FieldElement   `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"` // Need to remove after regenesis
}

func (x *InvokeTransaction) Reset() {
	*x = InvokeTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeTransaction) ProtoMessage() {}

func (x *InvokeTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeTransaction.ProtoReflect.Descriptor instead.
func (*InvokeTransaction) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *InvokeTransaction) GetSenderAddress() *FieldElement {
	if x != nil {
		return x.SenderAddress
	}
	return nil
}

func (x *InvokeTransaction) GetEntryPointSelector() *FieldElement {
	if x != nil {
		return x.EntryPointSelector
	}
	return nil
}

func (x *InvokeTransaction) GetCalldata() []*FieldElement {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *InvokeTransaction) GetSignature() []*FieldElement {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *InvokeTransaction) GetMaxFee() *FieldElement {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *InvokeTransaction) GetNonce() *FieldElement {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *InvokeTransaction) GetVersion() *FieldElement {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *InvokeTransaction) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

type DeclareTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractClass     *ContractClass  `protobuf:"bytes,1,opt,name=contract_class,json=contractClass,proto3" json:"contract_class,omitempty"`
	SenderAddress     *FieldElement   `protobuf:"bytes,2,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	MaxFee            *FieldElement   `protobuf:"bytes,3,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature         []*FieldElement `protobuf:"bytes,4,rep,name=signature,proto3" json:"signature,omitempty"`
	Nonce             *FieldElement   `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Version           *FieldElement   `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	CompiledClassHash *FieldElement   `protobuf:"bytes,7,opt,name=compiled_class_hash,json=compiledClassHash,proto3" json:"compiled_class_hash,omitempty"`
	Hash              *FieldElement   `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"` // Need to remove after regenesis
}

func (x *DeclareTransaction) Reset() {
	*x = DeclareTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclareTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareTransaction) ProtoMessage() {}

func (x *DeclareTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareTransaction.ProtoReflect.Descriptor instead.
func (*DeclareTransaction) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *DeclareTransaction) GetContractClass() *ContractClass {
	if x != nil {
		return x.ContractClass
	}
	return nil
}

func (x *DeclareTransaction) GetSenderAddress() *FieldElement {
	if x != nil {
		return x.SenderAddress
	}
	return nil
}

func (x *DeclareTransaction) GetMaxFee() *FieldElement {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *DeclareTransaction) GetSignature() []*FieldElement {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DeclareTransaction) GetNonce() *FieldElement {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *DeclareTransaction) GetVersion() *FieldElement {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeclareTransaction) GetCompiledClassHash() *FieldElement {
	if x != nil {
		return x.CompiledClassHash
	}
	return nil
}

func (x *DeclareTransaction) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

type DeployTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractClass       *ContractClass  `protobuf:"bytes,1,opt,name=contract_class,json=contractClass,proto3" json:"contract_class,omitempty"`
	ContractAddressSalt *FieldElement   `protobuf:"bytes,2,opt,name=contract_address_salt,json=contractAddressSalt,proto3" json:"contract_address_salt,omitempty"`
	ConstructorCalldata []*FieldElement `protobuf:"bytes,3,rep,name=constructor_calldata,json=constructorCalldata,proto3" json:"constructor_calldata,omitempty"`
	Version             *FieldElement   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	ContractAddress     *FieldElement   `protobuf:"bytes,5,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Hash                *FieldElement   `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"` // Need to remove after regenesis
}

func (x *DeployTransaction) Reset() {
	*x = DeployTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTransaction) ProtoMessage() {}

func (x *DeployTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTransaction.ProtoReflect.Descriptor instead.
func (*DeployTransaction) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *DeployTransaction) GetContractClass() *ContractClass {
	if x != nil {
		return x.ContractClass
	}
	return nil
}

func (x *DeployTransaction) GetContractAddressSalt() *FieldElement {
	if x != nil {
		return x.ContractAddressSalt
	}
	return nil
}

func (x *DeployTransaction) GetConstructorCalldata() []*FieldElement {
	if x != nil {
		return x.ConstructorCalldata
	}
	return nil
}

func (x *DeployTransaction) GetVersion() *FieldElement {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeployTransaction) GetContractAddress() *FieldElement {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *DeployTransaction) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

type L1HandlerTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress    *FieldElement   `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	EntryPointSelector *FieldElement   `protobuf:"bytes,2,opt,name=entry_point_selector,json=entryPointSelector,proto3" json:"entry_point_selector,omitempty"`
	Calldata           []*FieldElement `protobuf:"bytes,3,rep,name=calldata,proto3" json:"calldata,omitempty"`
	Nonce              *FieldElement   `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Version            *FieldElement   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Hash               *FieldElement   `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"` // Need to remove after regenesis
}

func (x *L1HandlerTransaction) Reset() {
	*x = L1HandlerTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L1HandlerTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L1HandlerTransaction) ProtoMessage() {}

func (x *L1HandlerTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L1HandlerTransaction.ProtoReflect.Descriptor instead.
func (*L1HandlerTransaction) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *L1HandlerTransaction) GetContractAddress() *FieldElement {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *L1HandlerTransaction) GetEntryPointSelector() *FieldElement {
	if x != nil {
		return x.EntryPointSelector
	}
	return nil
}

func (x *L1HandlerTransaction) GetCalldata() []*FieldElement {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *L1HandlerTransaction) GetNonce() *FieldElement {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *L1HandlerTransaction) GetVersion() *FieldElement {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *L1HandlerTransaction) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

type DeployAccountTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddressSalt *FieldElement   `protobuf:"bytes,1,opt,name=contract_address_salt,json=contractAddressSalt,proto3" json:"contract_address_salt,omitempty"`
	ConstructorCalldata []*FieldElement `protobuf:"bytes,2,rep,name=constructor_calldata,json=constructorCalldata,proto3" json:"constructor_calldata,omitempty"`
	ClassHash           *FieldElement   `protobuf:"bytes,3,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	MaxFee              *FieldElement   `protobuf:"bytes,4,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature           []*FieldElement `protobuf:"bytes,5,rep,name=signature,proto3" json:"signature,omitempty"`
	Nonce               *FieldElement   `protobuf:"bytes,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Version             *FieldElement   `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Hash                *FieldElement   `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"` // Need to remove after regenesis
	ContractAddress     *FieldElement   `protobuf:"bytes,9,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (x *DeployAccountTransaction) Reset() {
	*x = DeployAccountTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployAccountTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployAccountTransaction) ProtoMessage() {}

func (x *DeployAccountTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployAccountTransaction.ProtoReflect.Descriptor instead.
func (*DeployAccountTransaction) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *DeployAccountTransaction) GetContractAddressSalt() *FieldElement {
	if x != nil {
		return x.ContractAddressSalt
	}
	return nil
}

func (x *DeployAccountTransaction) GetConstructorCalldata() []*FieldElement {
	if x != nil {
		return x.ConstructorCalldata
	}
	return nil
}

func (x *DeployAccountTransaction) GetClassHash() *FieldElement {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *DeployAccountTransaction) GetMaxFee() *FieldElement {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *DeployAccountTransaction) GetSignature() []*FieldElement {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DeployAccountTransaction) GetNonce() *FieldElement {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *DeployAccountTransaction) GetVersion() *FieldElement {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeployAccountTransaction) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *DeployAccountTransaction) GetContractAddress() *FieldElement {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

type ContractClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Class:
	//
	//	*ContractClass_Cairo0
	//	*ContractClass_Cairo1
	Class isContractClass_Class `protobuf_oneof:"class"`
}

func (x *ContractClass) Reset() {
	*x = ContractClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractClass) ProtoMessage() {}

func (x *ContractClass) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractClass.ProtoReflect.Descriptor instead.
func (*ContractClass) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (m *ContractClass) GetClass() isContractClass_Class {
	if m != nil {
		return m.Class
	}
	return nil
}

func (x *ContractClass) GetCairo0() *Cairo0Class {
	if x, ok := x.GetClass().(*ContractClass_Cairo0); ok {
		return x.Cairo0
	}
	return nil
}

func (x *ContractClass) GetCairo1() *Cairo1Class {
	if x, ok := x.GetClass().(*ContractClass_Cairo1); ok {
		return x.Cairo1
	}
	return nil
}

type isContractClass_Class interface {
	isContractClass_Class()
}

type ContractClass_Cairo0 struct {
	Cairo0 *Cairo0Class `protobuf:"bytes,1,opt,name=cairo0,proto3,oneof"`
}

type ContractClass_Cairo1 struct {
	Cairo1 *Cairo1Class `protobuf:"bytes,2,opt,name=cairo1,proto3,oneof"`
}

func (*ContractClass_Cairo0) isContractClass_Class() {}

func (*ContractClass_Cairo1) isContractClass_Class() {}

type Cairo0Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConstructorEntryPoints []*Cairo0Class_EntryPoint `protobuf:"bytes,1,rep,name=constructor_entry_points,json=constructorEntryPoints,proto3" json:"constructor_entry_points,omitempty"`
	ExternalEntryPoints    []*Cairo0Class_EntryPoint `protobuf:"bytes,2,rep,name=external_entry_points,json=externalEntryPoints,proto3" json:"external_entry_points,omitempty"`
	L1HandlerEntryPoints   []*Cairo0Class_EntryPoint `protobuf:"bytes,3,rep,name=l1_handler_entry_points,json=l1HandlerEntryPoints,proto3" json:"l1_handler_entry_points,omitempty"`
	Program                string                    `protobuf:"bytes,4,opt,name=program,proto3" json:"program,omitempty"`
	Abi                    string                    `protobuf:"bytes,5,opt,name=abi,proto3" json:"abi,omitempty"`
	Hash                   *FieldElement             `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"` // Ahh... great.
}

func (x *Cairo0Class) Reset() {
	*x = Cairo0Class{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cairo0Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cairo0Class) ProtoMessage() {}

func (x *Cairo0Class) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cairo0Class.ProtoReflect.Descriptor instead.
func (*Cairo0Class) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *Cairo0Class) GetConstructorEntryPoints() []*Cairo0Class_EntryPoint {
	if x != nil {
		return x.ConstructorEntryPoints
	}
	return nil
}

func (x *Cairo0Class) GetExternalEntryPoints() []*Cairo0Class_EntryPoint {
	if x != nil {
		return x.ExternalEntryPoints
	}
	return nil
}

func (x *Cairo0Class) GetL1HandlerEntryPoints() []*Cairo0Class_EntryPoint {
	if x != nil {
		return x.L1HandlerEntryPoints
	}
	return nil
}

func (x *Cairo0Class) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *Cairo0Class) GetAbi() string {
	if x != nil {
		return x.Abi
	}
	return ""
}

func (x *Cairo0Class) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Cairo1Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConstructorEntryPoints []*Cairo1Class_EntryPoint `protobuf:"bytes,1,rep,name=constructor_entry_points,json=constructorEntryPoints,proto3" json:"constructor_entry_points,omitempty"`
	ExternalEntryPoints    []*Cairo1Class_EntryPoint `protobuf:"bytes,2,rep,name=external_entry_points,json=externalEntryPoints,proto3" json:"external_entry_points,omitempty"`
	L1HandlerEntryPoints   []*Cairo1Class_EntryPoint `protobuf:"bytes,3,rep,name=l1_handler_entry_points,json=l1HandlerEntryPoints,proto3" json:"l1_handler_entry_points,omitempty"`
	Program                []*FieldElement           `protobuf:"bytes,4,rep,name=program,proto3" json:"program,omitempty"`
	ProgramHash            *FieldElement             `protobuf:"bytes,5,opt,name=program_hash,json=programHash,proto3" json:"program_hash,omitempty"`
	Abi                    string                    `protobuf:"bytes,6,opt,name=abi,proto3" json:"abi,omitempty"`
	SemanticVersioning     string                    `protobuf:"bytes,7,opt,name=semantic_versioning,json=semanticVersioning,proto3" json:"semantic_versioning,omitempty"`
	Hash                   *FieldElement             `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Cairo1Class) Reset() {
	*x = Cairo1Class{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cairo1Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cairo1Class) ProtoMessage() {}

func (x *Cairo1Class) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cairo1Class.ProtoReflect.Descriptor instead.
func (*Cairo1Class) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *Cairo1Class) GetConstructorEntryPoints() []*Cairo1Class_EntryPoint {
	if x != nil {
		return x.ConstructorEntryPoints
	}
	return nil
}

func (x *Cairo1Class) GetExternalEntryPoints() []*Cairo1Class_EntryPoint {
	if x != nil {
		return x.ExternalEntryPoints
	}
	return nil
}

func (x *Cairo1Class) GetL1HandlerEntryPoints() []*Cairo1Class_EntryPoint {
	if x != nil {
		return x.L1HandlerEntryPoints
	}
	return nil
}

func (x *Cairo1Class) GetProgram() []*FieldElement {
	if x != nil {
		return x.Program
	}
	return nil
}

func (x *Cairo1Class) GetProgramHash() *FieldElement {
	if x != nil {
		return x.ProgramHash
	}
	return nil
}

func (x *Cairo1Class) GetAbi() string {
	if x != nil {
		return x.Abi
	}
	return ""
}

func (x *Cairo1Class) GetSemanticVersioning() string {
	if x != nil {
		return x.SemanticVersioning
	}
	return ""
}

func (x *Cairo1Class) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Txn:
	//
	//	*Transaction_Invoke
	//	*Transaction_Declare
	//	*Transaction_Deploy
	//	*Transaction_L1Handler
	//	*Transaction_DeployAccount
	Txn isTransaction_Txn `protobuf_oneof:"txn"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

func (m *Transaction) GetTxn() isTransaction_Txn {
	if m != nil {
		return m.Txn
	}
	return nil
}

func (x *Transaction) GetInvoke() *InvokeTransaction {
	if x, ok := x.GetTxn().(*Transaction_Invoke); ok {
		return x.Invoke
	}
	return nil
}

func (x *Transaction) GetDeclare() *DeclareTransaction {
	if x, ok := x.GetTxn().(*Transaction_Declare); ok {
		return x.Declare
	}
	return nil
}

func (x *Transaction) GetDeploy() *DeployTransaction {
	if x, ok := x.GetTxn().(*Transaction_Deploy); ok {
		return x.Deploy
	}
	return nil
}

func (x *Transaction) GetL1Handler() *L1HandlerTransaction {
	if x, ok := x.GetTxn().(*Transaction_L1Handler); ok {
		return x.L1Handler
	}
	return nil
}

func (x *Transaction) GetDeployAccount() *DeployAccountTransaction {
	if x, ok := x.GetTxn().(*Transaction_DeployAccount); ok {
		return x.DeployAccount
	}
	return nil
}

type isTransaction_Txn interface {
	isTransaction_Txn()
}

type Transaction_Invoke struct {
	Invoke *InvokeTransaction `protobuf:"bytes,1,opt,name=invoke,proto3,oneof"`
}

type Transaction_Declare struct {
	Declare *DeclareTransaction `protobuf:"bytes,2,opt,name=declare,proto3,oneof"`
}

type Transaction_Deploy struct {
	Deploy *DeployTransaction `protobuf:"bytes,3,opt,name=deploy,proto3,oneof"`
}

type Transaction_L1Handler struct {
	L1Handler *L1HandlerTransaction `protobuf:"bytes,4,opt,name=l1_handler,json=l1Handler,proto3,oneof"`
}

type Transaction_DeployAccount struct {
	DeployAccount *DeployAccountTransaction `protobuf:"bytes,5,opt,name=deploy_account,json=deployAccount,proto3,oneof"`
}

func (*Transaction_Invoke) isTransaction_Txn() {}

func (*Transaction_Declare) isTransaction_Txn() {}

func (*Transaction_Deploy) isTransaction_Txn() {}

func (*Transaction_L1Handler) isTransaction_Txn() {}

func (*Transaction_DeployAccount) isTransaction_Txn() {}

type MessageToL1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress *FieldElement    `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	Payload     []*FieldElement  `protobuf:"bytes,2,rep,name=payload,proto3" json:"payload,omitempty"`
	ToAddress   *EthereumAddress `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
}

func (x *MessageToL1) Reset() {
	*x = MessageToL1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageToL1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageToL1) ProtoMessage() {}

func (x *MessageToL1) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageToL1.ProtoReflect.Descriptor instead.
func (*MessageToL1) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *MessageToL1) GetFromAddress() *FieldElement {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *MessageToL1) GetPayload() []*FieldElement {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MessageToL1) GetToAddress() *EthereumAddress {
	if x != nil {
		return x.ToAddress
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress *FieldElement   `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	Keys        []*FieldElement `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Data        []*FieldElement `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

func (x *Event) GetFromAddress() *FieldElement {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *Event) GetKeys() []*FieldElement {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *Event) GetData() []*FieldElement {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommonTransactionReceiptProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash    *FieldElement                                          `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	ActualFee          *FieldElement                                          `protobuf:"bytes,2,opt,name=actual_fee,json=actualFee,proto3" json:"actual_fee,omitempty"`
	MessagesSent       []*MessageToL1                                         `protobuf:"bytes,3,rep,name=messages_sent,json=messagesSent,proto3" json:"messages_sent,omitempty"`
	Events             []*Event                                               `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	ExecutionResources *CommonTransactionReceiptProperties_ExecutionResources `protobuf:"bytes,5,opt,name=execution_resources,json=executionResources,proto3" json:"execution_resources,omitempty"`
}

func (x *CommonTransactionReceiptProperties) Reset() {
	*x = CommonTransactionReceiptProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTransactionReceiptProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTransactionReceiptProperties) ProtoMessage() {}

func (x *CommonTransactionReceiptProperties) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTransactionReceiptProperties.ProtoReflect.Descriptor instead.
func (*CommonTransactionReceiptProperties) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

func (x *CommonTransactionReceiptProperties) GetTransactionHash() *FieldElement {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *CommonTransactionReceiptProperties) GetActualFee() *FieldElement {
	if x != nil {
		return x.ActualFee
	}
	return nil
}

func (x *CommonTransactionReceiptProperties) GetMessagesSent() []*MessageToL1 {
	if x != nil {
		return x.MessagesSent
	}
	return nil
}

func (x *CommonTransactionReceiptProperties) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *CommonTransactionReceiptProperties) GetExecutionResources() *CommonTransactionReceiptProperties_ExecutionResources {
	if x != nil {
		return x.ExecutionResources
	}
	return nil
}

type InvokeTransactionReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonTransactionReceiptProperties `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *InvokeTransactionReceipt) Reset() {
	*x = InvokeTransactionReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeTransactionReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeTransactionReceipt) ProtoMessage() {}

func (x *InvokeTransactionReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeTransactionReceipt.ProtoReflect.Descriptor instead.
func (*InvokeTransactionReceipt) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

func (x *InvokeTransactionReceipt) GetCommon() *CommonTransactionReceiptProperties {
	if x != nil {
		return x.Common
	}
	return nil
}

type L1HandlerTransactionReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common        *CommonTransactionReceiptProperties        `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	L1ToL2Message *L1HandlerTransactionReceipt_L1ToL2Message `protobuf:"bytes,2,opt,name=l1_to_l2_message,json=l1ToL2Message,proto3" json:"l1_to_l2_message,omitempty"`
}

func (x *L1HandlerTransactionReceipt) Reset() {
	*x = L1HandlerTransactionReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L1HandlerTransactionReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L1HandlerTransactionReceipt) ProtoMessage() {}

func (x *L1HandlerTransactionReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L1HandlerTransactionReceipt.ProtoReflect.Descriptor instead.
func (*L1HandlerTransactionReceipt) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17}
}

func (x *L1HandlerTransactionReceipt) GetCommon() *CommonTransactionReceiptProperties {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *L1HandlerTransactionReceipt) GetL1ToL2Message() *L1HandlerTransactionReceipt_L1ToL2Message {
	if x != nil {
		return x.L1ToL2Message
	}
	return nil
}

type DeclareTransactionReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonTransactionReceiptProperties `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *DeclareTransactionReceipt) Reset() {
	*x = DeclareTransactionReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclareTransactionReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareTransactionReceipt) ProtoMessage() {}

func (x *DeclareTransactionReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareTransactionReceipt.ProtoReflect.Descriptor instead.
func (*DeclareTransactionReceipt) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{18}
}

func (x *DeclareTransactionReceipt) GetCommon() *CommonTransactionReceiptProperties {
	if x != nil {
		return x.Common
	}
	return nil
}

type DeployTransactionReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common          *CommonTransactionReceiptProperties `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ContractAddress *FieldElement                       `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (x *DeployTransactionReceipt) Reset() {
	*x = DeployTransactionReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTransactionReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTransactionReceipt) ProtoMessage() {}

func (x *DeployTransactionReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTransactionReceipt.ProtoReflect.Descriptor instead.
func (*DeployTransactionReceipt) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{19}
}

func (x *DeployTransactionReceipt) GetCommon() *CommonTransactionReceiptProperties {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *DeployTransactionReceipt) GetContractAddress() *FieldElement {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

type DeployAccountTransactionReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common          *CommonTransactionReceiptProperties `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ContractAddress *FieldElement                       `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (x *DeployAccountTransactionReceipt) Reset() {
	*x = DeployAccountTransactionReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployAccountTransactionReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployAccountTransactionReceipt) ProtoMessage() {}

func (x *DeployAccountTransactionReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployAccountTransactionReceipt.ProtoReflect.Descriptor instead.
func (*DeployAccountTransactionReceipt) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20}
}

func (x *DeployAccountTransactionReceipt) GetCommon() *CommonTransactionReceiptProperties {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *DeployAccountTransactionReceipt) GetContractAddress() *FieldElement {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Receipt:
	//
	//	*Receipt_Invoke
	//	*Receipt_L1Handler
	//	*Receipt_Declare
	//	*Receipt_Deploy
	//	*Receipt_DeployAccount
	Receipt isReceipt_Receipt `protobuf_oneof:"receipt"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21}
}

func (m *Receipt) GetReceipt() isReceipt_Receipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func (x *Receipt) GetInvoke() *InvokeTransactionReceipt {
	if x, ok := x.GetReceipt().(*Receipt_Invoke); ok {
		return x.Invoke
	}
	return nil
}

func (x *Receipt) GetL1Handler() *L1HandlerTransactionReceipt {
	if x, ok := x.GetReceipt().(*Receipt_L1Handler); ok {
		return x.L1Handler
	}
	return nil
}

func (x *Receipt) GetDeclare() *DeclareTransactionReceipt {
	if x, ok := x.GetReceipt().(*Receipt_Declare); ok {
		return x.Declare
	}
	return nil
}

func (x *Receipt) GetDeploy() *DeployTransactionReceipt {
	if x, ok := x.GetReceipt().(*Receipt_Deploy); ok {
		return x.Deploy
	}
	return nil
}

func (x *Receipt) GetDeployAccount() *DeployAccountTransactionReceipt {
	if x, ok := x.GetReceipt().(*Receipt_DeployAccount); ok {
		return x.DeployAccount
	}
	return nil
}

type isReceipt_Receipt interface {
	isReceipt_Receipt()
}

type Receipt_Invoke struct {
	Invoke *InvokeTransactionReceipt `protobuf:"bytes,1,opt,name=invoke,proto3,oneof"`
}

type Receipt_L1Handler struct {
	L1Handler *L1HandlerTransactionReceipt `protobuf:"bytes,2,opt,name=l1_handler,json=l1Handler,proto3,oneof"`
}

type Receipt_Declare struct {
	Declare *DeclareTransactionReceipt `protobuf:"bytes,3,opt,name=declare,proto3,oneof"`
}

type Receipt_Deploy struct {
	Deploy *DeployTransactionReceipt `protobuf:"bytes,4,opt,name=deploy,proto3,oneof"`
}

type Receipt_DeployAccount struct {
	DeployAccount *DeployAccountTransactionReceipt `protobuf:"bytes,5,opt,name=deploy_account,json=deployAccount,proto3,oneof"`
}

func (*Receipt_Invoke) isReceipt_Receipt() {}

func (*Receipt_L1Handler) isReceipt_Receipt() {}

func (*Receipt_Declare) isReceipt_Receipt() {}

func (*Receipt_Deploy) isReceipt_Receipt() {}

func (*Receipt_DeployAccount) isReceipt_Receipt() {}

type BlockBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Receipts     []*Receipt     `protobuf:"bytes,4,rep,name=receipts,proto3" json:"receipts,omitempty"`
}

func (x *BlockBody) Reset() {
	*x = BlockBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockBody) ProtoMessage() {}

func (x *BlockBody) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockBody.ProtoReflect.Descriptor instead.
func (*BlockBody) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22}
}

func (x *BlockBody) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *BlockBody) GetReceipts() []*Receipt {
	if x != nil {
		return x.Receipts
	}
	return nil
}

type Cairo0Class_EntryPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *FieldElement `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	Offset   *FieldElement `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Cairo0Class_EntryPoint) Reset() {
	*x = Cairo0Class_EntryPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cairo0Class_EntryPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cairo0Class_EntryPoint) ProtoMessage() {}

func (x *Cairo0Class_EntryPoint) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cairo0Class_EntryPoint.ProtoReflect.Descriptor instead.
func (*Cairo0Class_EntryPoint) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Cairo0Class_EntryPoint) GetSelector() *FieldElement {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *Cairo0Class_EntryPoint) GetOffset() *FieldElement {
	if x != nil {
		return x.Offset
	}
	return nil
}

type Cairo1Class_EntryPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *FieldElement `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	Index    uint64        `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *Cairo1Class_EntryPoint) Reset() {
	*x = Cairo1Class_EntryPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cairo1Class_EntryPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cairo1Class_EntryPoint) ProtoMessage() {}

func (x *Cairo1Class_EntryPoint) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cairo1Class_EntryPoint.ProtoReflect.Descriptor instead.
func (*Cairo1Class_EntryPoint) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Cairo1Class_EntryPoint) GetSelector() *FieldElement {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *Cairo1Class_EntryPoint) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type CommonTransactionReceiptProperties_ExecutionResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuiltinInstanceCounter *CommonTransactionReceiptProperties_BuiltinInstanceCounter `protobuf:"bytes,1,opt,name=builtin_instance_counter,json=builtinInstanceCounter,proto3" json:"builtin_instance_counter,omitempty"`
	MemoryHoles            uint64                                                     `protobuf:"varint,2,opt,name=memory_holes,json=memoryHoles,proto3" json:"memory_holes,omitempty"`
	Steps                  uint64                                                     `protobuf:"varint,3,opt,name=steps,proto3" json:"steps,omitempty"`
}

func (x *CommonTransactionReceiptProperties_ExecutionResources) Reset() {
	*x = CommonTransactionReceiptProperties_ExecutionResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTransactionReceiptProperties_ExecutionResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTransactionReceiptProperties_ExecutionResources) ProtoMessage() {}

func (x *CommonTransactionReceiptProperties_ExecutionResources) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTransactionReceiptProperties_ExecutionResources.ProtoReflect.Descriptor instead.
func (*CommonTransactionReceiptProperties_ExecutionResources) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CommonTransactionReceiptProperties_ExecutionResources) GetBuiltinInstanceCounter() *CommonTransactionReceiptProperties_BuiltinInstanceCounter {
	if x != nil {
		return x.BuiltinInstanceCounter
	}
	return nil
}

func (x *CommonTransactionReceiptProperties_ExecutionResources) GetMemoryHoles() uint64 {
	if x != nil {
		return x.MemoryHoles
	}
	return 0
}

func (x *CommonTransactionReceiptProperties_ExecutionResources) GetSteps() uint64 {
	if x != nil {
		return x.Steps
	}
	return 0
}

type CommonTransactionReceiptProperties_BuiltinInstanceCounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitwise    uint64 `protobuf:"varint,1,opt,name=Bitwise,proto3" json:"Bitwise,omitempty"`
	EcOp       uint64 `protobuf:"varint,2,opt,name=EcOp,proto3" json:"EcOp,omitempty"`
	Ecsda      uint64 `protobuf:"varint,3,opt,name=Ecsda,proto3" json:"Ecsda,omitempty"`
	Output     uint64 `protobuf:"varint,4,opt,name=Output,proto3" json:"Output,omitempty"`
	Pedersen   uint64 `protobuf:"varint,5,opt,name=Pedersen,proto3" json:"Pedersen,omitempty"`
	RangeCheck uint64 `protobuf:"varint,6,opt,name=RangeCheck,proto3" json:"RangeCheck,omitempty"`
}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) Reset() {
	*x = CommonTransactionReceiptProperties_BuiltinInstanceCounter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonTransactionReceiptProperties_BuiltinInstanceCounter) ProtoMessage() {}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonTransactionReceiptProperties_BuiltinInstanceCounter.ProtoReflect.Descriptor instead.
func (*CommonTransactionReceiptProperties_BuiltinInstanceCounter) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15, 1}
}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) GetBitwise() uint64 {
	if x != nil {
		return x.Bitwise
	}
	return 0
}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) GetEcOp() uint64 {
	if x != nil {
		return x.EcOp
	}
	return 0
}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) GetEcsda() uint64 {
	if x != nil {
		return x.Ecsda
	}
	return 0
}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) GetOutput() uint64 {
	if x != nil {
		return x.Output
	}
	return 0
}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) GetPedersen() uint64 {
	if x != nil {
		return x.Pedersen
	}
	return 0
}

func (x *CommonTransactionReceiptProperties_BuiltinInstanceCounter) GetRangeCheck() uint64 {
	if x != nil {
		return x.RangeCheck
	}
	return 0
}

type L1HandlerTransactionReceipt_L1ToL2Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     *EthereumAddress `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Nonce    *FieldElement    `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Payload  []*FieldElement  `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty"`
	Selector *FieldElement    `protobuf:"bytes,4,opt,name=selector,proto3" json:"selector,omitempty"`
	To       *FieldElement    `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *L1HandlerTransactionReceipt_L1ToL2Message) Reset() {
	*x = L1HandlerTransactionReceipt_L1ToL2Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L1HandlerTransactionReceipt_L1ToL2Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L1HandlerTransactionReceipt_L1ToL2Message) ProtoMessage() {}

func (x *L1HandlerTransactionReceipt_L1ToL2Message) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L1HandlerTransactionReceipt_L1ToL2Message.ProtoReflect.Descriptor instead.
func (*L1HandlerTransactionReceipt_L1ToL2Message) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17, 0}
}

func (x *L1HandlerTransactionReceipt_L1ToL2Message) GetFrom() *EthereumAddress {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *L1HandlerTransactionReceipt_L1ToL2Message) GetNonce() *FieldElement {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *L1HandlerTransactionReceipt_L1ToL2Message) GetPayload() []*FieldElement {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *L1HandlerTransactionReceipt_L1ToL2Message) GetSelector() *FieldElement {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *L1HandlerTransactionReceipt_L1ToL2Message) GetTo() *FieldElement {
	if x != nil {
		return x.To
	}
	return nil
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22,
	0x2a, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2d, 0x0a, 0x0f, 0x45,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x18, 0x0a, 0x06, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x87, 0x05, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x49, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x12, 0x4a, 0x0a, 0x11, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x54, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xfb,
	0x03, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4f, 0x0a, 0x14, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x08, 0x63,
	0x61, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x61,
	0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x37, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x86, 0x04, 0x0a,
	0x12, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x36, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x11, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xb5, 0x03, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x51, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x61, 0x6c, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x43,
	0x61, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x48, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x8d, 0x03,
	0x0a, 0x14, 0x4c, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x4f, 0x0a, 0x14, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x37, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xdd, 0x04,
	0x0a, 0x18, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x15, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73,
	0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x61, 0x6c, 0x74, 0x12, 0x50, 0x0a,
	0x14, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3c, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x46, 0x65, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x31, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x48, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x88, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x36, 0x0a, 0x06, 0x63, 0x61, 0x69, 0x72, 0x6f, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x61, 0x69, 0x72, 0x6f, 0x30, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x61, 0x69, 0x72, 0x6f, 0x30, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x61, 0x69, 0x72, 0x6f,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x69, 0x72, 0x6f, 0x31,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x00, 0x52, 0x06, 0x63, 0x61, 0x69, 0x72, 0x6f, 0x31, 0x42,
	0x07, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x8c, 0x04, 0x0a, 0x0b, 0x43, 0x61, 0x69,
	0x72, 0x6f, 0x30, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x61, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x69,
	0x72, 0x6f, 0x30, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x15, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x69,
	0x72, 0x6f, 0x30, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x17, 0x6c, 0x31, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x69, 0x72,
	0x6f, 0x30, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x14, 0x6c, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x62, 0x69, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x7e, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x35, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xfd, 0x04, 0x0a, 0x0b, 0x43, 0x61, 0x69, 0x72,
	0x6f, 0x31, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x61, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x69, 0x72,
	0x6f, 0x31, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x15, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x69, 0x72,
	0x6f, 0x31, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x17, 0x6c, 0x31, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x69, 0x72, 0x6f,
	0x31, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x14, 0x6c, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0x40, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x62, 0x69, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x5d, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xed, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x69,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x64,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x6c, 0x31, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x31, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x09, 0x6c, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x05, 0x0a, 0x03, 0x74, 0x78, 0x6e, 0x22, 0xc9, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x31, 0x12, 0x40, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x31, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x06, 0x0a, 0x22, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x46, 0x65, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x31, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x77, 0x0a, 0x13, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x12, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x1a, 0xd4, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x18, 0x62, 0x75, 0x69, 0x6c,
	0x74, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x16, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x48, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x1a, 0xb0, 0x01, 0x0a, 0x16, 0x42, 0x75, 0x69, 0x6c,
	0x74, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x77, 0x69, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x42, 0x69, 0x74, 0x77, 0x69, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x45, 0x63, 0x4f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x45, 0x63, 0x4f, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x63, 0x73, 0x64, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x45, 0x63, 0x73, 0x64, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x67, 0x0a, 0x18, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x4b, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x22, 0xef, 0x03, 0x0a, 0x1b, 0x4c, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x12, 0x4b, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x63, 0x0a, 0x10, 0x6c, 0x31, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x32, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x31, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x4c, 0x31, 0x54, 0x6f, 0x4c, 0x32, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x6c, 0x31, 0x54, 0x6f, 0x4c, 0x32, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x9d, 0x02, 0x0a, 0x0d, 0x4c, 0x31, 0x54, 0x6f, 0x4c, 0x32,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x33, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x19, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x12, 0x4b, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22,
	0xb1, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x4b, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x4b, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x90,
	0x03, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x69, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x12,
	0x4d, 0x0a, 0x0a, 0x6c, 0x31, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x46,
	0x0a, 0x07, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x07, 0x64,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x59, 0x0a, 0x0e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x22, 0x83, 0x01, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x40, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x70, 0x32,
	0x70, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_common_proto_goTypes = []interface{}{
	(*FieldElement)(nil),                       // 0: starknet.common.FieldElement
	(*EthereumAddress)(nil),                    // 1: starknet.common.EthereumAddress
	(*PeerID)(nil),                             // 2: starknet.common.PeerID
	(*BlockHeader)(nil),                        // 3: starknet.common.BlockHeader
	(*InvokeTransaction)(nil),                  // 4: starknet.common.InvokeTransaction
	(*DeclareTransaction)(nil),                 // 5: starknet.common.DeclareTransaction
	(*DeployTransaction)(nil),                  // 6: starknet.common.DeployTransaction
	(*L1HandlerTransaction)(nil),               // 7: starknet.common.L1HandlerTransaction
	(*DeployAccountTransaction)(nil),           // 8: starknet.common.DeployAccountTransaction
	(*ContractClass)(nil),                      // 9: starknet.common.ContractClass
	(*Cairo0Class)(nil),                        // 10: starknet.common.Cairo0Class
	(*Cairo1Class)(nil),                        // 11: starknet.common.Cairo1Class
	(*Transaction)(nil),                        // 12: starknet.common.Transaction
	(*MessageToL1)(nil),                        // 13: starknet.common.MessageToL1
	(*Event)(nil),                              // 14: starknet.common.Event
	(*CommonTransactionReceiptProperties)(nil), // 15: starknet.common.CommonTransactionReceiptProperties
	(*InvokeTransactionReceipt)(nil),           // 16: starknet.common.InvokeTransactionReceipt
	(*L1HandlerTransactionReceipt)(nil),        // 17: starknet.common.L1HandlerTransactionReceipt
	(*DeclareTransactionReceipt)(nil),          // 18: starknet.common.DeclareTransactionReceipt
	(*DeployTransactionReceipt)(nil),           // 19: starknet.common.DeployTransactionReceipt
	(*DeployAccountTransactionReceipt)(nil),    // 20: starknet.common.DeployAccountTransactionReceipt
	(*Receipt)(nil),                            // 21: starknet.common.Receipt
	(*BlockBody)(nil),                          // 22: starknet.common.BlockBody
	(*Cairo0Class_EntryPoint)(nil),             // 23: starknet.common.Cairo0Class.EntryPoint
	(*Cairo1Class_EntryPoint)(nil),             // 24: starknet.common.Cairo1Class.EntryPoint
	(*CommonTransactionReceiptProperties_ExecutionResources)(nil),     // 25: starknet.common.CommonTransactionReceiptProperties.ExecutionResources
	(*CommonTransactionReceiptProperties_BuiltinInstanceCounter)(nil), // 26: starknet.common.CommonTransactionReceiptProperties.BuiltinInstanceCounter
	(*L1HandlerTransactionReceipt_L1ToL2Message)(nil),                 // 27: starknet.common.L1HandlerTransactionReceipt.L1ToL2Message
}
var file_common_proto_depIdxs = []int32{
	0,  // 0: starknet.common.BlockHeader.hash:type_name -> starknet.common.FieldElement
	0,  // 1: starknet.common.BlockHeader.parent_block_hash:type_name -> starknet.common.FieldElement
	0,  // 2: starknet.common.BlockHeader.global_state_root:type_name -> starknet.common.FieldElement
	0,  // 3: starknet.common.BlockHeader.sequencer_address:type_name -> starknet.common.FieldElement
	0,  // 4: starknet.common.BlockHeader.transaction_commitment:type_name -> starknet.common.FieldElement
	0,  // 5: starknet.common.BlockHeader.event_commitment:type_name -> starknet.common.FieldElement
	0,  // 6: starknet.common.InvokeTransaction.sender_address:type_name -> starknet.common.FieldElement
	0,  // 7: starknet.common.InvokeTransaction.entry_point_selector:type_name -> starknet.common.FieldElement
	0,  // 8: starknet.common.InvokeTransaction.calldata:type_name -> starknet.common.FieldElement
	0,  // 9: starknet.common.InvokeTransaction.signature:type_name -> starknet.common.FieldElement
	0,  // 10: starknet.common.InvokeTransaction.max_fee:type_name -> starknet.common.FieldElement
	0,  // 11: starknet.common.InvokeTransaction.nonce:type_name -> starknet.common.FieldElement
	0,  // 12: starknet.common.InvokeTransaction.version:type_name -> starknet.common.FieldElement
	0,  // 13: starknet.common.InvokeTransaction.hash:type_name -> starknet.common.FieldElement
	9,  // 14: starknet.common.DeclareTransaction.contract_class:type_name -> starknet.common.ContractClass
	0,  // 15: starknet.common.DeclareTransaction.sender_address:type_name -> starknet.common.FieldElement
	0,  // 16: starknet.common.DeclareTransaction.max_fee:type_name -> starknet.common.FieldElement
	0,  // 17: starknet.common.DeclareTransaction.signature:type_name -> starknet.common.FieldElement
	0,  // 18: starknet.common.DeclareTransaction.nonce:type_name -> starknet.common.FieldElement
	0,  // 19: starknet.common.DeclareTransaction.version:type_name -> starknet.common.FieldElement
	0,  // 20: starknet.common.DeclareTransaction.compiled_class_hash:type_name -> starknet.common.FieldElement
	0,  // 21: starknet.common.DeclareTransaction.hash:type_name -> starknet.common.FieldElement
	9,  // 22: starknet.common.DeployTransaction.contract_class:type_name -> starknet.common.ContractClass
	0,  // 23: starknet.common.DeployTransaction.contract_address_salt:type_name -> starknet.common.FieldElement
	0,  // 24: starknet.common.DeployTransaction.constructor_calldata:type_name -> starknet.common.FieldElement
	0,  // 25: starknet.common.DeployTransaction.version:type_name -> starknet.common.FieldElement
	0,  // 26: starknet.common.DeployTransaction.contract_address:type_name -> starknet.common.FieldElement
	0,  // 27: starknet.common.DeployTransaction.hash:type_name -> starknet.common.FieldElement
	0,  // 28: starknet.common.L1HandlerTransaction.contract_address:type_name -> starknet.common.FieldElement
	0,  // 29: starknet.common.L1HandlerTransaction.entry_point_selector:type_name -> starknet.common.FieldElement
	0,  // 30: starknet.common.L1HandlerTransaction.calldata:type_name -> starknet.common.FieldElement
	0,  // 31: starknet.common.L1HandlerTransaction.nonce:type_name -> starknet.common.FieldElement
	0,  // 32: starknet.common.L1HandlerTransaction.version:type_name -> starknet.common.FieldElement
	0,  // 33: starknet.common.L1HandlerTransaction.hash:type_name -> starknet.common.FieldElement
	0,  // 34: starknet.common.DeployAccountTransaction.contract_address_salt:type_name -> starknet.common.FieldElement
	0,  // 35: starknet.common.DeployAccountTransaction.constructor_calldata:type_name -> starknet.common.FieldElement
	0,  // 36: starknet.common.DeployAccountTransaction.class_hash:type_name -> starknet.common.FieldElement
	0,  // 37: starknet.common.DeployAccountTransaction.max_fee:type_name -> starknet.common.FieldElement
	0,  // 38: starknet.common.DeployAccountTransaction.signature:type_name -> starknet.common.FieldElement
	0,  // 39: starknet.common.DeployAccountTransaction.nonce:type_name -> starknet.common.FieldElement
	0,  // 40: starknet.common.DeployAccountTransaction.version:type_name -> starknet.common.FieldElement
	0,  // 41: starknet.common.DeployAccountTransaction.hash:type_name -> starknet.common.FieldElement
	0,  // 42: starknet.common.DeployAccountTransaction.contract_address:type_name -> starknet.common.FieldElement
	10, // 43: starknet.common.ContractClass.cairo0:type_name -> starknet.common.Cairo0Class
	11, // 44: starknet.common.ContractClass.cairo1:type_name -> starknet.common.Cairo1Class
	23, // 45: starknet.common.Cairo0Class.constructor_entry_points:type_name -> starknet.common.Cairo0Class.EntryPoint
	23, // 46: starknet.common.Cairo0Class.external_entry_points:type_name -> starknet.common.Cairo0Class.EntryPoint
	23, // 47: starknet.common.Cairo0Class.l1_handler_entry_points:type_name -> starknet.common.Cairo0Class.EntryPoint
	0,  // 48: starknet.common.Cairo0Class.hash:type_name -> starknet.common.FieldElement
	24, // 49: starknet.common.Cairo1Class.constructor_entry_points:type_name -> starknet.common.Cairo1Class.EntryPoint
	24, // 50: starknet.common.Cairo1Class.external_entry_points:type_name -> starknet.common.Cairo1Class.EntryPoint
	24, // 51: starknet.common.Cairo1Class.l1_handler_entry_points:type_name -> starknet.common.Cairo1Class.EntryPoint
	0,  // 52: starknet.common.Cairo1Class.program:type_name -> starknet.common.FieldElement
	0,  // 53: starknet.common.Cairo1Class.program_hash:type_name -> starknet.common.FieldElement
	0,  // 54: starknet.common.Cairo1Class.hash:type_name -> starknet.common.FieldElement
	4,  // 55: starknet.common.Transaction.invoke:type_name -> starknet.common.InvokeTransaction
	5,  // 56: starknet.common.Transaction.declare:type_name -> starknet.common.DeclareTransaction
	6,  // 57: starknet.common.Transaction.deploy:type_name -> starknet.common.DeployTransaction
	7,  // 58: starknet.common.Transaction.l1_handler:type_name -> starknet.common.L1HandlerTransaction
	8,  // 59: starknet.common.Transaction.deploy_account:type_name -> starknet.common.DeployAccountTransaction
	0,  // 60: starknet.common.MessageToL1.from_address:type_name -> starknet.common.FieldElement
	0,  // 61: starknet.common.MessageToL1.payload:type_name -> starknet.common.FieldElement
	1,  // 62: starknet.common.MessageToL1.to_address:type_name -> starknet.common.EthereumAddress
	0,  // 63: starknet.common.Event.from_address:type_name -> starknet.common.FieldElement
	0,  // 64: starknet.common.Event.keys:type_name -> starknet.common.FieldElement
	0,  // 65: starknet.common.Event.data:type_name -> starknet.common.FieldElement
	0,  // 66: starknet.common.CommonTransactionReceiptProperties.transaction_hash:type_name -> starknet.common.FieldElement
	0,  // 67: starknet.common.CommonTransactionReceiptProperties.actual_fee:type_name -> starknet.common.FieldElement
	13, // 68: starknet.common.CommonTransactionReceiptProperties.messages_sent:type_name -> starknet.common.MessageToL1
	14, // 69: starknet.common.CommonTransactionReceiptProperties.events:type_name -> starknet.common.Event
	25, // 70: starknet.common.CommonTransactionReceiptProperties.execution_resources:type_name -> starknet.common.CommonTransactionReceiptProperties.ExecutionResources
	15, // 71: starknet.common.InvokeTransactionReceipt.common:type_name -> starknet.common.CommonTransactionReceiptProperties
	15, // 72: starknet.common.L1HandlerTransactionReceipt.common:type_name -> starknet.common.CommonTransactionReceiptProperties
	27, // 73: starknet.common.L1HandlerTransactionReceipt.l1_to_l2_message:type_name -> starknet.common.L1HandlerTransactionReceipt.L1ToL2Message
	15, // 74: starknet.common.DeclareTransactionReceipt.common:type_name -> starknet.common.CommonTransactionReceiptProperties
	15, // 75: starknet.common.DeployTransactionReceipt.common:type_name -> starknet.common.CommonTransactionReceiptProperties
	0,  // 76: starknet.common.DeployTransactionReceipt.contract_address:type_name -> starknet.common.FieldElement
	15, // 77: starknet.common.DeployAccountTransactionReceipt.common:type_name -> starknet.common.CommonTransactionReceiptProperties
	0,  // 78: starknet.common.DeployAccountTransactionReceipt.contract_address:type_name -> starknet.common.FieldElement
	16, // 79: starknet.common.Receipt.invoke:type_name -> starknet.common.InvokeTransactionReceipt
	17, // 80: starknet.common.Receipt.l1_handler:type_name -> starknet.common.L1HandlerTransactionReceipt
	18, // 81: starknet.common.Receipt.declare:type_name -> starknet.common.DeclareTransactionReceipt
	19, // 82: starknet.common.Receipt.deploy:type_name -> starknet.common.DeployTransactionReceipt
	20, // 83: starknet.common.Receipt.deploy_account:type_name -> starknet.common.DeployAccountTransactionReceipt
	12, // 84: starknet.common.BlockBody.transactions:type_name -> starknet.common.Transaction
	21, // 85: starknet.common.BlockBody.receipts:type_name -> starknet.common.Receipt
	0,  // 86: starknet.common.Cairo0Class.EntryPoint.selector:type_name -> starknet.common.FieldElement
	0,  // 87: starknet.common.Cairo0Class.EntryPoint.offset:type_name -> starknet.common.FieldElement
	0,  // 88: starknet.common.Cairo1Class.EntryPoint.selector:type_name -> starknet.common.FieldElement
	26, // 89: starknet.common.CommonTransactionReceiptProperties.ExecutionResources.builtin_instance_counter:type_name -> starknet.common.CommonTransactionReceiptProperties.BuiltinInstanceCounter
	1,  // 90: starknet.common.L1HandlerTransactionReceipt.L1ToL2Message.from:type_name -> starknet.common.EthereumAddress
	0,  // 91: starknet.common.L1HandlerTransactionReceipt.L1ToL2Message.nonce:type_name -> starknet.common.FieldElement
	0,  // 92: starknet.common.L1HandlerTransactionReceipt.L1ToL2Message.payload:type_name -> starknet.common.FieldElement
	0,  // 93: starknet.common.L1HandlerTransactionReceipt.L1ToL2Message.selector:type_name -> starknet.common.FieldElement
	0,  // 94: starknet.common.L1HandlerTransactionReceipt.L1ToL2Message.to:type_name -> starknet.common.FieldElement
	95, // [95:95] is the sub-list for method output_type
	95, // [95:95] is the sub-list for method input_type
	95, // [95:95] is the sub-list for extension type_name
	95, // [95:95] is the sub-list for extension extendee
	0,  // [0:95] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthereumAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclareTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L1HandlerTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployAccountTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cairo0Class); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cairo1Class); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageToL1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTransactionReceiptProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeTransactionReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L1HandlerTransactionReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclareTransactionReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTransactionReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployAccountTransactionReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cairo0Class_EntryPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cairo1Class_EntryPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTransactionReceiptProperties_ExecutionResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonTransactionReceiptProperties_BuiltinInstanceCounter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L1HandlerTransactionReceipt_L1ToL2Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ContractClass_Cairo0)(nil),
		(*ContractClass_Cairo1)(nil),
	}
	file_common_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Transaction_Invoke)(nil),
		(*Transaction_Declare)(nil),
		(*Transaction_Deploy)(nil),
		(*Transaction_L1Handler)(nil),
		(*Transaction_DeployAccount)(nil),
	}
	file_common_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*Receipt_Invoke)(nil),
		(*Receipt_L1Handler)(nil),
		(*Receipt_Declare)(nil),
		(*Receipt_Deploy)(nil),
		(*Receipt_DeployAccount)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
