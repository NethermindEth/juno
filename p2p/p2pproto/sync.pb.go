// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: sync.proto

package p2pproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Direction int32

const (
	Direction_FORWARD  Direction = 0
	Direction_BACKWARD Direction = 1
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "FORWARD",
		1: "BACKWARD",
	}
	Direction_value = map[string]int32{
		"FORWARD":  0,
		"BACKWARD": 1,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_proto_enumTypes[0].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_sync_proto_enumTypes[0]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{0}
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*Request_GetBlockHeaders
	//	*Request_GetBlockBodies
	//	*Request_GetStateDiffs
	//	*Request_Status
	Request isRequest_Request `protobuf_oneof:"request"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{0}
}

func (m *Request) GetRequest() isRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *Request) GetGetBlockHeaders() *GetBlockHeaders {
	if x, ok := x.GetRequest().(*Request_GetBlockHeaders); ok {
		return x.GetBlockHeaders
	}
	return nil
}

func (x *Request) GetGetBlockBodies() *GetBlockBodies {
	if x, ok := x.GetRequest().(*Request_GetBlockBodies); ok {
		return x.GetBlockBodies
	}
	return nil
}

func (x *Request) GetGetStateDiffs() *GetStateDiffs {
	if x, ok := x.GetRequest().(*Request_GetStateDiffs); ok {
		return x.GetStateDiffs
	}
	return nil
}

func (x *Request) GetStatus() *Status {
	if x, ok := x.GetRequest().(*Request_Status); ok {
		return x.Status
	}
	return nil
}

type isRequest_Request interface {
	isRequest_Request()
}

type Request_GetBlockHeaders struct {
	GetBlockHeaders *GetBlockHeaders `protobuf:"bytes,1,opt,name=get_block_headers,json=getBlockHeaders,proto3,oneof"`
}

type Request_GetBlockBodies struct {
	GetBlockBodies *GetBlockBodies `protobuf:"bytes,2,opt,name=get_block_bodies,json=getBlockBodies,proto3,oneof"`
}

type Request_GetStateDiffs struct {
	GetStateDiffs *GetStateDiffs `protobuf:"bytes,3,opt,name=get_state_diffs,json=getStateDiffs,proto3,oneof"`
}

type Request_Status struct {
	Status *Status `protobuf:"bytes,4,opt,name=status,proto3,oneof"`
}

func (*Request_GetBlockHeaders) isRequest_Request() {}

func (*Request_GetBlockBodies) isRequest_Request() {}

func (*Request_GetStateDiffs) isRequest_Request() {}

func (*Request_Status) isRequest_Request() {}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*Response_BlockHeaders
	//	*Response_BlockBodies
	//	*Response_StateDiffs
	//	*Response_Status
	Response isResponse_Response `protobuf_oneof:"response"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{1}
}

func (m *Response) GetResponse() isResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *Response) GetBlockHeaders() *BlockHeaders {
	if x, ok := x.GetResponse().(*Response_BlockHeaders); ok {
		return x.BlockHeaders
	}
	return nil
}

func (x *Response) GetBlockBodies() *BlockBodies {
	if x, ok := x.GetResponse().(*Response_BlockBodies); ok {
		return x.BlockBodies
	}
	return nil
}

func (x *Response) GetStateDiffs() *StateDiffs {
	if x, ok := x.GetResponse().(*Response_StateDiffs); ok {
		return x.StateDiffs
	}
	return nil
}

func (x *Response) GetStatus() *Status {
	if x, ok := x.GetResponse().(*Response_Status); ok {
		return x.Status
	}
	return nil
}

type isResponse_Response interface {
	isResponse_Response()
}

type Response_BlockHeaders struct {
	BlockHeaders *BlockHeaders `protobuf:"bytes,1,opt,name=block_headers,json=blockHeaders,proto3,oneof"`
}

type Response_BlockBodies struct {
	BlockBodies *BlockBodies `protobuf:"bytes,2,opt,name=block_bodies,json=blockBodies,proto3,oneof"`
}

type Response_StateDiffs struct {
	StateDiffs *StateDiffs `protobuf:"bytes,3,opt,name=state_diffs,json=stateDiffs,proto3,oneof"`
}

type Response_Status struct {
	Status *Status `protobuf:"bytes,4,opt,name=status,proto3,oneof"`
}

func (*Response_BlockHeaders) isResponse_Response() {}

func (*Response_BlockBodies) isResponse_Response() {}

func (*Response_StateDiffs) isResponse_Response() {}

func (*Response_Status) isResponse_Response() {}

type GetBlockHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId uint32 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to StartBlock:
	//
	//	*GetBlockHeaders_BlockHash
	//	*GetBlockHeaders_BlockNumber
	StartBlock isGetBlockHeaders_StartBlock `protobuf_oneof:"start_block"`
	Count      uint64                       `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                          //how many block, at most, to retrieve from this requested starting point
	SizeLimit  uint64                       `protobuf:"varint,4,opt,name=size_limit,json=sizeLimit,proto3" json:"size_limit,omitempty"` //limit on size of returned messages.
	Direction  Direction                    `protobuf:"varint,5,opt,name=direction,proto3,enum=starknet.sync.Direction" json:"direction,omitempty"`
}

func (x *GetBlockHeaders) Reset() {
	*x = GetBlockHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeaders) ProtoMessage() {}

func (x *GetBlockHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeaders.ProtoReflect.Descriptor instead.
func (*GetBlockHeaders) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{2}
}

func (x *GetBlockHeaders) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (m *GetBlockHeaders) GetStartBlock() isGetBlockHeaders_StartBlock {
	if m != nil {
		return m.StartBlock
	}
	return nil
}

func (x *GetBlockHeaders) GetBlockHash() *FieldElement {
	if x, ok := x.GetStartBlock().(*GetBlockHeaders_BlockHash); ok {
		return x.BlockHash
	}
	return nil
}

func (x *GetBlockHeaders) GetBlockNumber() uint64 {
	if x, ok := x.GetStartBlock().(*GetBlockHeaders_BlockNumber); ok {
		return x.BlockNumber
	}
	return 0
}

func (x *GetBlockHeaders) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetBlockHeaders) GetSizeLimit() uint64 {
	if x != nil {
		return x.SizeLimit
	}
	return 0
}

func (x *GetBlockHeaders) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_FORWARD
}

type isGetBlockHeaders_StartBlock interface {
	isGetBlockHeaders_StartBlock()
}

type GetBlockHeaders_BlockHash struct {
	BlockHash *FieldElement `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3,oneof"` //block hash of the starting block
}

type GetBlockHeaders_BlockNumber struct {
	BlockNumber uint64 `protobuf:"varint,6,opt,name=block_number,json=blockNumber,proto3,oneof"`
}

func (*GetBlockHeaders_BlockHash) isGetBlockHeaders_StartBlock() {}

func (*GetBlockHeaders_BlockNumber) isGetBlockHeaders_StartBlock() {}

// A response to GetBlockHeaders, returning a consecutive `count` of blocks (or
// less if there are less available)
type BlockHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []*BlockHeader `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *BlockHeaders) Reset() {
	*x = BlockHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeaders) ProtoMessage() {}

func (x *BlockHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeaders.ProtoReflect.Descriptor instead.
func (*BlockHeaders) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{3}
}

func (x *BlockHeaders) GetHeaders() []*BlockHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

type GetBlockBodies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartBlock *FieldElement `protobuf:"bytes,2,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"` // block hash of the starting block
	Count      uint64        `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                            // how many block, at most, to retrieve from this requested
	// starting point
	SizeLimit uint64    `protobuf:"varint,4,opt,name=size_limit,json=sizeLimit,proto3" json:"size_limit,omitempty"`
	Direction Direction `protobuf:"varint,5,opt,name=direction,proto3,enum=starknet.sync.Direction" json:"direction,omitempty"`
}

func (x *GetBlockBodies) Reset() {
	*x = GetBlockBodies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockBodies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockBodies) ProtoMessage() {}

func (x *GetBlockBodies) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockBodies.ProtoReflect.Descriptor instead.
func (*GetBlockBodies) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{4}
}

func (x *GetBlockBodies) GetStartBlock() *FieldElement {
	if x != nil {
		return x.StartBlock
	}
	return nil
}

func (x *GetBlockBodies) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetBlockBodies) GetSizeLimit() uint64 {
	if x != nil {
		return x.SizeLimit
	}
	return 0
}

func (x *GetBlockBodies) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_FORWARD
}

type BlockBodies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockBodies []*BlockBody `protobuf:"bytes,2,rep,name=block_bodies,json=blockBodies,proto3" json:"block_bodies,omitempty"`
}

func (x *BlockBodies) Reset() {
	*x = BlockBodies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockBodies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockBodies) ProtoMessage() {}

func (x *BlockBodies) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockBodies.ProtoReflect.Descriptor instead.
func (*BlockBodies) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{5}
}

func (x *BlockBodies) GetBlockBodies() []*BlockBody {
	if x != nil {
		return x.BlockBodies
	}
	return nil
}

type GetStateDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartBlock *FieldElement `protobuf:"bytes,2,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"` // block hash of the starting block
	Count      uint64        `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                            // how many block, at most, to retrieve from this requested
	// starting point
	SizeLimit uint64    `protobuf:"varint,4,opt,name=size_limit,json=sizeLimit,proto3" json:"size_limit,omitempty"`
	Direction Direction `protobuf:"varint,5,opt,name=direction,proto3,enum=starknet.sync.Direction" json:"direction,omitempty"`
}

func (x *GetStateDiffs) Reset() {
	*x = GetStateDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateDiffs) ProtoMessage() {}

func (x *GetStateDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateDiffs.ProtoReflect.Descriptor instead.
func (*GetStateDiffs) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{6}
}

func (x *GetStateDiffs) GetStartBlock() *FieldElement {
	if x != nil {
		return x.StartBlock
	}
	return nil
}

func (x *GetStateDiffs) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetStateDiffs) GetSizeLimit() uint64 {
	if x != nil {
		return x.SizeLimit
	}
	return 0
}

func (x *GetStateDiffs) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_FORWARD
}

type StateDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockStateUpdates []*StateDiffs_BlockStateUpdateWithHash `protobuf:"bytes,2,rep,name=block_state_updates,json=blockStateUpdates,proto3" json:"block_state_updates,omitempty"`
}

func (x *StateDiffs) Reset() {
	*x = StateDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDiffs) ProtoMessage() {}

func (x *StateDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDiffs.ProtoReflect.Descriptor instead.
func (*StateDiffs) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{7}
}

func (x *StateDiffs) GetBlockStateUpdates() []*StateDiffs_BlockStateUpdateWithHash {
	if x != nil {
		return x.BlockStateUpdates
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height  uint64        `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash    *FieldElement `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	ChainId *FieldElement `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{8}
}

func (x *Status) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Status) GetHash() *FieldElement {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Status) GetChainId() *FieldElement {
	if x != nil {
		return x.ChainId
	}
	return nil
}

type StateDiffs_BlockStateUpdateWithHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash   *FieldElement     `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	StateUpdate *BlockStateUpdate `protobuf:"bytes,2,opt,name=state_update,json=stateUpdate,proto3" json:"state_update,omitempty"`
}

func (x *StateDiffs_BlockStateUpdateWithHash) Reset() {
	*x = StateDiffs_BlockStateUpdateWithHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDiffs_BlockStateUpdateWithHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDiffs_BlockStateUpdateWithHash) ProtoMessage() {}

func (x *StateDiffs_BlockStateUpdateWithHash) ProtoReflect() protoreflect.Message {
	mi := &file_sync_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDiffs_BlockStateUpdateWithHash.ProtoReflect.Descriptor instead.
func (*StateDiffs_BlockStateUpdateWithHash) Descriptor() ([]byte, []int) {
	return file_sync_proto_rawDescGZIP(), []int{7, 0}
}

func (x *StateDiffs_BlockStateUpdateWithHash) GetBlockHash() *FieldElement {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *StateDiffs_BlockStateUpdateWithHash) GetStateUpdate() *BlockStateUpdate {
	if x != nil {
		return x.StateUpdate
	}
	return nil
}

var File_sync_proto protoreflect.FileDescriptor

var file_sync_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x1a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x02, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73,
	0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0e, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x69, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64,
	0x69, 0x66, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8a, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x36, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x46, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0xbd,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x69, 0x65,
	0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x7a,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c,
	0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a,
	0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x3e,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x96, 0x02, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x62, 0x0a, 0x13, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x48, 0x61, 0x73, 0x68, 0x52, 0x11, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0xa3,
	0x01, 0x0a, 0x18, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x2a, 0x26, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x42, 0x41, 0x43, 0x4b, 0x57, 0x41, 0x52, 0x44, 0x10, 0x01, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x2e, 0x2f, 0x70, 0x32, 0x70, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sync_proto_rawDescOnce sync.Once
	file_sync_proto_rawDescData = file_sync_proto_rawDesc
)

func file_sync_proto_rawDescGZIP() []byte {
	file_sync_proto_rawDescOnce.Do(func() {
		file_sync_proto_rawDescData = protoimpl.X.CompressGZIP(file_sync_proto_rawDescData)
	})
	return file_sync_proto_rawDescData
}

var file_sync_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sync_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sync_proto_goTypes = []interface{}{
	(Direction)(0),                              // 0: starknet.sync.Direction
	(*Request)(nil),                             // 1: starknet.sync.Request
	(*Response)(nil),                            // 2: starknet.sync.Response
	(*GetBlockHeaders)(nil),                     // 3: starknet.sync.GetBlockHeaders
	(*BlockHeaders)(nil),                        // 4: starknet.sync.BlockHeaders
	(*GetBlockBodies)(nil),                      // 5: starknet.sync.GetBlockBodies
	(*BlockBodies)(nil),                         // 6: starknet.sync.BlockBodies
	(*GetStateDiffs)(nil),                       // 7: starknet.sync.GetStateDiffs
	(*StateDiffs)(nil),                          // 8: starknet.sync.StateDiffs
	(*Status)(nil),                              // 9: starknet.sync.Status
	(*StateDiffs_BlockStateUpdateWithHash)(nil), // 10: starknet.sync.StateDiffs.BlockStateUpdateWithHash
	(*FieldElement)(nil),                        // 11: starknet.common.FieldElement
	(*BlockHeader)(nil),                         // 12: starknet.common.BlockHeader
	(*BlockBody)(nil),                           // 13: starknet.common.BlockBody
	(*BlockStateUpdate)(nil),                    // 14: starknet.propagation.BlockStateUpdate
}
var file_sync_proto_depIdxs = []int32{
	3,  // 0: starknet.sync.Request.get_block_headers:type_name -> starknet.sync.GetBlockHeaders
	5,  // 1: starknet.sync.Request.get_block_bodies:type_name -> starknet.sync.GetBlockBodies
	7,  // 2: starknet.sync.Request.get_state_diffs:type_name -> starknet.sync.GetStateDiffs
	9,  // 3: starknet.sync.Request.status:type_name -> starknet.sync.Status
	4,  // 4: starknet.sync.Response.block_headers:type_name -> starknet.sync.BlockHeaders
	6,  // 5: starknet.sync.Response.block_bodies:type_name -> starknet.sync.BlockBodies
	8,  // 6: starknet.sync.Response.state_diffs:type_name -> starknet.sync.StateDiffs
	9,  // 7: starknet.sync.Response.status:type_name -> starknet.sync.Status
	11, // 8: starknet.sync.GetBlockHeaders.block_hash:type_name -> starknet.common.FieldElement
	0,  // 9: starknet.sync.GetBlockHeaders.direction:type_name -> starknet.sync.Direction
	12, // 10: starknet.sync.BlockHeaders.headers:type_name -> starknet.common.BlockHeader
	11, // 11: starknet.sync.GetBlockBodies.start_block:type_name -> starknet.common.FieldElement
	0,  // 12: starknet.sync.GetBlockBodies.direction:type_name -> starknet.sync.Direction
	13, // 13: starknet.sync.BlockBodies.block_bodies:type_name -> starknet.common.BlockBody
	11, // 14: starknet.sync.GetStateDiffs.start_block:type_name -> starknet.common.FieldElement
	0,  // 15: starknet.sync.GetStateDiffs.direction:type_name -> starknet.sync.Direction
	10, // 16: starknet.sync.StateDiffs.block_state_updates:type_name -> starknet.sync.StateDiffs.BlockStateUpdateWithHash
	11, // 17: starknet.sync.Status.hash:type_name -> starknet.common.FieldElement
	11, // 18: starknet.sync.Status.chain_id:type_name -> starknet.common.FieldElement
	11, // 19: starknet.sync.StateDiffs.BlockStateUpdateWithHash.block_hash:type_name -> starknet.common.FieldElement
	14, // 20: starknet.sync.StateDiffs.BlockStateUpdateWithHash.state_update:type_name -> starknet.propagation.BlockStateUpdate
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_sync_proto_init() }
func file_sync_proto_init() {
	if File_sync_proto != nil {
		return
	}
	file_common_proto_init()
	file_propagation_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockBodies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockBodies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDiffs_BlockStateUpdateWithHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sync_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Request_GetBlockHeaders)(nil),
		(*Request_GetBlockBodies)(nil),
		(*Request_GetStateDiffs)(nil),
		(*Request_Status)(nil),
	}
	file_sync_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Response_BlockHeaders)(nil),
		(*Response_BlockBodies)(nil),
		(*Response_StateDiffs)(nil),
		(*Response_Status)(nil),
	}
	file_sync_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*GetBlockHeaders_BlockHash)(nil),
		(*GetBlockHeaders_BlockNumber)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sync_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sync_proto_goTypes,
		DependencyIndexes: file_sync_proto_depIdxs,
		EnumInfos:         file_sync_proto_enumTypes,
		MessageInfos:      file_sync_proto_msgTypes,
	}.Build()
	File_sync_proto = out.File
	file_sync_proto_rawDesc = nil
	file_sync_proto_goTypes = nil
	file_sync_proto_depIdxs = nil
}
