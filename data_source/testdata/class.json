{
    "entry_points_by_type": {
        "CONSTRUCTOR": [
            {
                "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194",
                "offset": "0xcb5"
            }
        ],
        "EXTERNAL": [
            {
                "selector": "0x128cbce8efbfbe7ae5f367042e6acf3cc67d2b94baca8ff005ed81566acb2c2",
                "offset": "0xd47"
            },
            {
                "selector": "0x26328f2da2292e724b4ae090aceaded8bebaf91b5e6b9bc4b13a78458688e38",
                "offset": "0xd10"
            },
            {
                "selector": "0x273869799b60805eb1234567119139c190ff198cdfb89caf331322b767266e8",
                "offset": "0xce9"
            }
        ],
        "L1_HANDLER": []
    },
    "abi": [
        {
            "inputs": [
                {
                    "name": "signer_count_treshold",
                    "type": "felt"
                },
                {
                    "name": "addresses_len",
                    "type": "felt"
                },
                {
                    "name": "addresses",
                    "type": "felt*"
                }
            ],
            "name": "constructor",
            "outputs": [],
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "name": "feed_id",
                    "type": "felt"
                }
            ],
            "name": "get_price",
            "outputs": [
                {
                    "name": "value",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "feed_id",
                    "type": "felt"
                },
                {
                    "name": "payload_data_len",
                    "type": "felt"
                },
                {
                    "name": "payload_data",
                    "type": "felt*"
                }
            ],
            "name": "set_price",
            "outputs": [],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "feed_ids_len",
                    "type": "felt"
                },
                {
                    "name": "feed_ids",
                    "type": "felt*"
                },
                {
                    "name": "payload_data_len",
                    "type": "felt"
                },
                {
                    "name": "payload_data",
                    "type": "felt*"
                }
            ],
            "name": "set_prices",
            "outputs": [],
            "type": "function"
        }
    ],
    "program": {
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "main_scope": "__main__",
        "debug_info": null,
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise"
        ],
        "hints": {
            "0": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ]
                }
            ],
            "9": [
                {
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 0
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ]
                }
            ],
            "45": [
                {
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 3,
                            "starkware.cairo.common.math.assert_250_bit.low": 2,
                            "starkware.cairo.common.math.assert_250_bit.value": 1
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ]
                }
            ],
            "58": [
                {
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 4,
                            "starkware.cairo.common.math.assert_le_felt.b": 5,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 6
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ]
                }
            ],
            "68": [
                {
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 8
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ]
                }
            ],
            "82": [
                {
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 9
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ]
                }
            ],
            "94": [
                {
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 10
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ]
                }
            ],
            "103": [
                {
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 7,
                            "starkware.cairo.common.math.assert_lt_felt.b": 8
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ]
                }
            ],
            "114": [
                {
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.div)\nassert 0 < ids.div <= PRIME // range_check_builtin.bound, \\\n    f'div={hex(ids.div)} is out of the valid range.'\nids.q, ids.r = divmod(ids.value, ids.div)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.unsigned_div_rem.div": 10,
                            "starkware.cairo.common.math.unsigned_div_rem.q": 12,
                            "starkware.cairo.common.math.unsigned_div_rem.r": 11,
                            "starkware.cairo.common.math.unsigned_div_rem.value": 9
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ]
                }
            ],
            "131": [
                {
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 13,
                            "starkware.starknet.common.storage.normalize_address.is_small": 14
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ]
                }
            ],
            "149": [
                {
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 13,
                            "starkware.starknet.common.storage.normalize_address.is_250": 15
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ]
                }
            ],
            "172": [
                {
                    "code": "syscall_handler.get_block_timestamp(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr": 16
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_block_timestamp"
                    ]
                }
            ],
            "180": [
                {
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 17
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ]
                }
            ],
            "189": [
                {
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 18
                        }
                    },
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ]
                }
            ],
            "202": [
                {
                    "code": "vm_enter_scope(dict(__usort_max_size = globals().get('__usort_max_size')))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 3
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.usort",
                        "starkware.cairo.common.usort.usort"
                    ]
                },
                {
                    "code": "from collections import defaultdict\n\ninput_ptr = ids.input\ninput_len = int(ids.input_len)\nif __usort_max_size is not None:\n    assert input_len <= __usort_max_size, (\n        f\"usort() can only be used with input_len<={__usort_max_size}. \"\n        f\"Got: input_len={input_len}.\"\n    )\n\npositions_dict = defaultdict(list)\nfor i in range(input_len):\n    val = memory[input_ptr + i]\n    positions_dict[val].append(i)\n\noutput = sorted(positions_dict.keys())\nids.output_len = len(output)\nids.output = segments.gen_arg(output)\nids.multiplicities = segments.gen_arg([len(positions_dict[k]) for k in output])",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 3
                        },
                        "reference_ids": {
                            "starkware.cairo.common.usort.usort.input": 20,
                            "starkware.cairo.common.usort.usort.input_len": 19,
                            "starkware.cairo.common.usort.usort.multiplicities": 23,
                            "starkware.cairo.common.usort.usort.output": 22,
                            "starkware.cairo.common.usort.usort.output_len": 21
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.usort",
                        "starkware.cairo.common.usort.usort"
                    ]
                }
            ],
            "213": [
                {
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 17,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.usort",
                        "starkware.cairo.common.usort.usort"
                    ]
                }
            ],
            "237": [
                {
                    "code": "last_pos = 0\npositions = positions_dict[ids.value][::-1]",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 18,
                            "offset": 22
                        },
                        "reference_ids": {
                            "starkware.cairo.common.usort.verify_usort.value": 24
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.usort",
                        "starkware.cairo.common.usort.verify_usort"
                    ]
                }
            ],
            "256": [
                {
                    "code": "assert len(positions) == 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.usort",
                        "starkware.cairo.common.usort.verify_multiplicity"
                    ]
                }
            ],
            "263": [
                {
                    "code": "current_pos = positions.pop()\nids.next_item_index = current_pos - last_pos\nlast_pos = current_pos + 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.usort.verify_multiplicity.next_item_index": 25
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.usort",
                        "starkware.cairo.common.usort.verify_multiplicity"
                    ]
                }
            ],
            "659": [
                {
                    "code": "vm_enter_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 59,
                            "offset": 3
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict"
                    ]
                }
            ],
            "662": [
                {
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 59,
                            "offset": 3
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict"
                    ]
                }
            ],
            "667": [
                {
                    "code": "dict_access_size = ids.DictAccess.SIZE\naddress = ids.dict_accesses.address_\nassert ids.ptr_diff % dict_access_size == 0, \\\n    'Accesses array size must be divisible by DictAccess.SIZE'\nn_accesses = ids.n_accesses\nif '__squash_dict_max_size' in globals():\n    assert n_accesses <= __squash_dict_max_size, \\\n        f'squash_dict() can only be used with n_accesses<={__squash_dict_max_size}. ' \\\n        f'Got: n_accesses={n_accesses}.'\n# A map from key to the list of indices accessing it.\naccess_indices = {}\nfor i in range(n_accesses):\n    key = memory[address + dict_access_size * i]\n    access_indices.setdefault(key, []).append(i)\n# Descending list of keys.\nkeys = sorted(access_indices.keys(), reverse=True)\n# Are the keys used bigger than range_check bound.\nids.big_keys = 1 if keys[0] >= range_check_builtin.bound else 0\nids.first_key = key = keys.pop()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 59,
                            "offset": 4
                        },
                        "reference_ids": {
                            "starkware.cairo.common.squash_dict.squash_dict.big_keys": 29,
                            "starkware.cairo.common.squash_dict.squash_dict.dict_accesses": 26,
                            "starkware.cairo.common.squash_dict.squash_dict.first_key": 28,
                            "starkware.cairo.common.squash_dict.squash_dict.n_accesses": 30,
                            "starkware.cairo.common.squash_dict.squash_dict.ptr_diff": 27
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict"
                    ]
                }
            ],
            "684": [
                {
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 60,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict"
                    ]
                }
            ],
            "687": [
                {
                    "code": "current_access_indices = sorted(access_indices[key])[::-1]\ncurrent_access_index = current_access_indices.pop()\nmemory[ids.range_check_ptr] = current_access_index",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 61,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.cairo.common.squash_dict.squash_dict_inner.range_check_ptr": 31
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict_inner"
                    ]
                }
            ],
            "698": [
                {
                    "code": "ids.should_skip_loop = 0 if current_access_indices else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 61,
                            "offset": 7
                        },
                        "reference_ids": {
                            "starkware.cairo.common.squash_dict.squash_dict_inner.should_skip_loop": 32
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict_inner"
                    ]
                }
            ],
            "700": [
                {
                    "code": "new_access_index = current_access_indices.pop()\nids.loop_temps.index_delta_minus1 = new_access_index - current_access_index - 1\ncurrent_access_index = new_access_index",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 61,
                            "offset": 7
                        },
                        "reference_ids": {
                            "starkware.cairo.common.squash_dict.squash_dict_inner.loop_temps": 33
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict_inner"
                    ]
                }
            ],
            "711": [
                {
                    "code": "ids.loop_temps.should_continue = 1 if current_access_indices else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 61,
                            "offset": 13
                        },
                        "reference_ids": {
                            "starkware.cairo.common.squash_dict.squash_dict_inner.loop_temps": 33
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict_inner"
                    ]
                }
            ],
            "713": [
                {
                    "code": "assert len(current_access_indices) == 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 62,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict_inner"
                    ]
                }
            ],
            "716": [
                {
                    "code": "assert ids.n_used_accesses == len(access_indices[key])",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 62,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.cairo.common.squash_dict.squash_dict_inner.n_used_accesses": 34
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict_inner"
                    ]
                }
            ],
            "720": [
                {
                    "code": "assert len(keys) == 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 62,
                            "offset": 3
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict_inner"
                    ]
                }
            ],
            "727": [
                {
                    "code": "assert len(keys) > 0, 'No keys left but remaining_accesses > 0.'\nids.next_key = key = keys.pop()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 62,
                            "offset": 4
                        },
                        "reference_ids": {
                            "starkware.cairo.common.squash_dict.squash_dict_inner.next_key": 35
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.squash_dict",
                        "starkware.cairo.common.squash_dict.squash_dict_inner"
                    ]
                }
            ],
            "757": [
                {
                    "code": "if '__dict_manager' not in globals():\n    from starkware.cairo.common.dict import DictManager\n    __dict_manager = DictManager()\n\nmemory[ap] = __dict_manager.new_dict(segments, initial_dict)\ndel initial_dict",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 65,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.dict",
                        "starkware.cairo.common.dict.dict_new"
                    ]
                }
            ],
            "762": [
                {
                    "code": "dict_tracker = __dict_manager.get_tracker(ids.dict_ptr)\ndict_tracker.current_ptr += ids.DictAccess.SIZE\nids.value = dict_tracker.data[ids.key]",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 66,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.dict.dict_read.dict_ptr": 37,
                            "starkware.cairo.common.dict.dict_read.key": 36,
                            "starkware.cairo.common.dict.dict_read.value": 38
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.dict",
                        "starkware.cairo.common.dict.dict_read"
                    ]
                }
            ],
            "769": [
                {
                    "code": "dict_tracker = __dict_manager.get_tracker(ids.dict_ptr)\ndict_tracker.current_ptr += ids.DictAccess.SIZE\nids.dict_ptr.prev_value = dict_tracker.data[ids.key]\ndict_tracker.data[ids.key] = ids.new_value",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 67,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.dict.dict_write.dict_ptr": 41,
                            "starkware.cairo.common.dict.dict_write.key": 39,
                            "starkware.cairo.common.dict.dict_write.new_value": 40
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.dict",
                        "starkware.cairo.common.dict.dict_write"
                    ]
                }
            ],
            "776": [
                {
                    "code": "# Prepare arguments for dict_new. In particular, the same dictionary values should be copied\n# to the new (squashed) dictionary.\nvm_enter_scope({\n    # Make __dict_manager accessible.\n    '__dict_manager': __dict_manager,\n    # Create a copy of the dict, in case it changes in the future.\n    'initial_dict': dict(__dict_manager.get_dict(ids.dict_accesses_end)),\n})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 68,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.dict.dict_squash.dict_accesses_end": 42
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.dict",
                        "starkware.cairo.common.dict.dict_squash"
                    ]
                }
            ],
            "779": [
                {
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 68,
                            "offset": 4
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.dict",
                        "starkware.cairo.common.dict.dict_squash"
                    ]
                }
            ],
            "785": [
                {
                    "code": "# Update the DictTracker's current_ptr to point to the end of the squashed dict.\n__dict_manager.get_tracker(ids.squashed_dict_start).current_ptr = \\\n    ids.squashed_dict_end.address_",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 69,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.dict.dict_squash.squashed_dict_end": 44,
                            "starkware.cairo.common.dict.dict_squash.squashed_dict_start": 43
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.dict",
                        "starkware.cairo.common.dict.dict_squash"
                    ]
                }
            ],
            "789": [
                {
                    "code": "if '__dict_manager' not in globals():\n    from starkware.cairo.common.dict import DictManager\n    __dict_manager = DictManager()\n\nmemory[ap] = __dict_manager.new_default_dict(segments, ids.default_value)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 70,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.default_dict.default_dict_new.default_value": 45
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.default_dict",
                        "starkware.cairo.common.default_dict.default_dict_new"
                    ]
                }
            ],
            "878": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import split\n\nsegments.write_arg(ids.res.address_, split(value))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 81,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.res": 46
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.bigint",
                        "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3"
                    ]
                }
            ],
            "890": [
                {
                    "code": "ids.low = (ids.x.d0 + ids.x.d1 * ids.BASE) & ((1 << 128) - 1)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 82,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.low": 48,
                            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.x": 47
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.bigint",
                        "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256"
                    ]
                }
            ],
            "1587": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\n\nq, r = divmod(pack(ids.val, PRIME), SECP_P)\nassert r == 0, f\"verify_zero: Invalid input {ids.val.d0, ids.val.d1, ids.val.d2}.\"\nids.q = q % PRIME",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 128,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.field.verify_zero.q": 50,
                            "starkware.cairo.common.cairo_secp.field.verify_zero.val": 49
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.field",
                        "starkware.cairo.common.cairo_secp.field.verify_zero"
                    ]
                }
            ],
            "1610": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\n\nx = pack(ids.x, PRIME) % SECP_P",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 129,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.field.is_zero.x": 51
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.field",
                        "starkware.cairo.common.cairo_secp.field.is_zero"
                    ]
                },
                {
                    "code": "memory[ap] = to_felt_or_relocatable(x == 0)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 129,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.field",
                        "starkware.cairo.common.cairo_secp.field.is_zero"
                    ]
                }
            ],
            "1625": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P\nfrom starkware.python.math_utils import div_mod\n\nvalue = x_inv = div_mod(1, x, SECP_P)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 129,
                            "offset": 1
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.field",
                        "starkware.cairo.common.cairo_secp.field.is_zero"
                    ]
                }
            ],
            "1646": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\n\nvalue = pack(ids.x, PRIME) % SECP_P",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 130,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.field.reduce.x": 52
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.field",
                        "starkware.cairo.common.cairo_secp.field.reduce"
                    ]
                }
            ],
            "1699": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\n\ny = pack(ids.point.y, PRIME) % SECP_P\n# The modulo operation in python always returns a nonnegative number.\nvalue = (-y) % SECP_P",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 132,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.ec.ec_negate.point": 53
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.ec",
                        "starkware.cairo.common.cairo_secp.ec.ec_negate"
                    ]
                }
            ],
            "1715": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\nfrom starkware.python.math_utils import ec_double_slope\n\n# Compute the slope.\nx = pack(ids.point.x, PRIME)\ny = pack(ids.point.y, PRIME)\nvalue = slope = ec_double_slope(point=(x, y), alpha=0, p=SECP_P)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 133,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.point": 54
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.ec",
                        "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope"
                    ]
                }
            ],
            "1759": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\nfrom starkware.python.math_utils import line_slope\n\n# Compute the slope.\nx0 = pack(ids.point0.x, PRIME)\ny0 = pack(ids.point0.y, PRIME)\nx1 = pack(ids.point1.x, PRIME)\ny1 = pack(ids.point1.y, PRIME)\nvalue = slope = line_slope(point1=(x0, y0), point2=(x1, y1), p=SECP_P)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 134,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.ec.compute_slope.point0": 55,
                            "starkware.cairo.common.cairo_secp.ec.compute_slope.point1": 56
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.ec",
                        "starkware.cairo.common.cairo_secp.ec.compute_slope"
                    ]
                }
            ],
            "1808": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\n\nslope = pack(ids.slope, PRIME)\nx = pack(ids.point.x, PRIME)\ny = pack(ids.point.y, PRIME)\n\nvalue = new_x = (pow(slope, 2, SECP_P) - 2 * x) % SECP_P",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 135,
                            "offset": 108
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.ec.ec_double.point": 57,
                            "starkware.cairo.common.cairo_secp.ec.ec_double.slope": 58
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.ec",
                        "starkware.cairo.common.cairo_secp.ec.ec_double"
                    ]
                }
            ],
            "1811": [
                {
                    "code": "value = new_y = (slope * (x - new_x) - y) % SECP_P",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 135,
                            "offset": 119
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.ec",
                        "starkware.cairo.common.cairo_secp.ec.ec_double"
                    ]
                }
            ],
            "1901": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\n\nslope = pack(ids.slope, PRIME)\nx0 = pack(ids.point0.x, PRIME)\nx1 = pack(ids.point1.x, PRIME)\ny0 = pack(ids.point0.y, PRIME)\n\nvalue = new_x = (pow(slope, 2, SECP_P) - x0 - x1) % SECP_P",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 136,
                            "offset": 88
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.point0": 59,
                            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.point1": 60,
                            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.slope": 61
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.ec",
                        "starkware.cairo.common.cairo_secp.ec.fast_ec_add"
                    ]
                }
            ],
            "1904": [
                {
                    "code": "value = new_y = (slope * (x0 - new_x) - y0) % SECP_P",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 136,
                            "offset": 99
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.ec",
                        "starkware.cairo.common.cairo_secp.ec.fast_ec_add"
                    ]
                }
            ],
            "2034": [
                {
                    "code": "memory[ap] = (ids.scalar % PRIME) % 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 143,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.scalar": 62
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.ec",
                        "starkware.cairo.common.cairo_secp.ec.ec_mul_inner"
                    ]
                }
            ],
            "2193": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import N, pack\nfrom starkware.python.math_utils import div_mod, safe_div\n\na = pack(ids.a, PRIME)\nb = pack(ids.b, PRIME)\nvalue = res = div_mod(a, b, N)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 154,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.signature.div_mod_n.a": 63,
                            "starkware.cairo.common.cairo_secp.signature.div_mod_n.b": 64
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.signature",
                        "starkware.cairo.common.cairo_secp.signature.div_mod_n"
                    ]
                }
            ],
            "2196": [
                {
                    "code": "value = k = safe_div(res * b - a, N)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 154,
                            "offset": 11
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.signature",
                        "starkware.cairo.common.cairo_secp.signature.div_mod_n"
                    ]
                }
            ],
            "2286": [
                {
                    "code": "from starkware.cairo.common.cairo_secp.secp_utils import SECP_P, pack\n\nx_cube_int = pack(ids.x_cube, PRIME) % SECP_P\ny_square_int = (x_cube_int + ids.BETA) % SECP_P\ny = pow(y_square_int, (SECP_P + 1) // 4, SECP_P)\n\n# We need to decide whether to take y or SECP_P - y.\nif ids.v % 2 == y % 2:\n    value = y\nelse:\n    value = (-y) % SECP_P",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 155,
                            "offset": 90
                        },
                        "reference_ids": {
                            "starkware.cairo.common.cairo_secp.signature.get_point_from_x.v": 65,
                            "starkware.cairo.common.cairo_secp.signature.get_point_from_x.x_cube": 66
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.cairo_secp.signature",
                        "starkware.cairo.common.cairo_secp.signature.get_point_from_x"
                    ]
                }
            ],
            "2412": [
                {
                    "code": "from eth_hash.auto import keccak\n\ndata, length = ids.data, ids.length\n\nif '__keccak_max_size' in globals():\n    assert length <= __keccak_max_size, \\\n        f'unsafe_keccak() can only be used with length<={__keccak_max_size}. ' \\\n        f'Got: length={length}.'\n\nkeccak_input = bytearray()\nfor word_i, byte_i in enumerate(range(0, length, 16)):\n    word = memory[data + word_i]\n    n_bytes = min(16, length - byte_i)\n    assert 0 <= word < 2 ** (8 * n_bytes)\n    keccak_input += word.to_bytes(n_bytes, 'big')\n\nhashed = keccak(keccak_input)\nids.high = int.from_bytes(hashed[:16], 'big')\nids.low = int.from_bytes(hashed[16:32], 'big')",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 162,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.cairo.common.keccak.unsafe_keccak.data": 67,
                            "starkware.cairo.common.keccak.unsafe_keccak.high": 70,
                            "starkware.cairo.common.keccak.unsafe_keccak.length": 68,
                            "starkware.cairo.common.keccak.unsafe_keccak.low": 69
                        }
                    },
                    "accessible_scopes": [
                        "starkware.cairo.common.keccak",
                        "starkware.cairo.common.keccak.unsafe_keccak"
                    ]
                }
            ],
            "3272": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 229,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.constructor"
                    ]
                }
            ],
            "3296": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 231,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.get_price_encode_return"
                    ]
                }
            ],
            "3364": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 236,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.set_price"
                    ]
                }
            ],
            "3428": [
                {
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 241,
                            "offset": 0
                        },
                        "reference_ids": {}
                    },
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.set_prices"
                    ]
                }
            ]
        },
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 9
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 45
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "value": "[cast([fp + (-4)], felt*)]",
                    "pc": 45
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "value": "[cast([fp + (-4)] + 1, felt*)]",
                    "pc": 45
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 58
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 58
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), felt*)]",
                    "pc": 58
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 103
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 103
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 114
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 114
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "value": "[cast([fp + (-5)], felt*)]",
                    "pc": 114
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "value": "[cast([fp + (-5)] + 1, felt*)]",
                    "pc": 114
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 129
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 1
                    },
                    "value": "[cast(ap + (-1), felt*)]",
                    "pc": 131
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 2
                    },
                    "value": "[cast(ap + (-1), felt*)]",
                    "pc": 149
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt**)]",
                    "pc": 169
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt**)]",
                    "pc": 176
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), felt**)]",
                    "pc": 184
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 200
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt**)]",
                    "pc": 200
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 3
                    },
                    "value": "[cast(fp, felt*)]",
                    "pc": 202
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 3
                    },
                    "value": "[cast(fp + 1, felt**)]",
                    "pc": 202
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 3
                    },
                    "value": "[cast(fp + 2, felt**)]",
                    "pc": 202
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 3
                    },
                    "value": "[cast(fp, felt*)]",
                    "pc": 227
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 1
                    },
                    "value": "[cast(fp, felt*)]",
                    "pc": 263
                },
                {
                    "ap_tracking_data": {
                        "group": 59,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), starkware.cairo.common.dict_access.DictAccess**)]",
                    "pc": 657
                },
                {
                    "ap_tracking_data": {
                        "group": 59,
                        "offset": 3
                    },
                    "value": "[cast(fp, felt*)]",
                    "pc": 660
                },
                {
                    "ap_tracking_data": {
                        "group": 59,
                        "offset": 3
                    },
                    "value": "[cast(fp + 1, felt*)]",
                    "pc": 665
                },
                {
                    "ap_tracking_data": {
                        "group": 59,
                        "offset": 3
                    },
                    "value": "[cast(fp + 2, felt*)]",
                    "pc": 665
                },
                {
                    "ap_tracking_data": {
                        "group": 59,
                        "offset": 4
                    },
                    "value": "[cast(ap + (-1), felt*)]",
                    "pc": 667
                },
                {
                    "ap_tracking_data": {
                        "group": 61,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-9), felt*)]",
                    "pc": 685
                },
                {
                    "ap_tracking_data": {
                        "group": 61,
                        "offset": 7
                    },
                    "value": "[cast(fp + 1, felt*)]",
                    "pc": 698
                },
                {
                    "ap_tracking_data": {
                        "group": 61,
                        "offset": 7
                    },
                    "value": "cast(ap, starkware.cairo.common.squash_dict.squash_dict_inner.LoopTemps*)",
                    "pc": 700
                },
                {
                    "ap_tracking_data": {
                        "group": 62,
                        "offset": 2
                    },
                    "value": "[cast(ap + (-1), felt*)]",
                    "pc": 716
                },
                {
                    "ap_tracking_data": {
                        "group": 62,
                        "offset": 3
                    },
                    "value": "[cast(ap, felt*)]",
                    "pc": 725
                },
                {
                    "ap_tracking_data": {
                        "group": 66,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 760
                },
                {
                    "ap_tracking_data": {
                        "group": 66,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), starkware.cairo.common.dict_access.DictAccess**)]",
                    "pc": 760
                },
                {
                    "ap_tracking_data": {
                        "group": 66,
                        "offset": 1
                    },
                    "value": "[cast(fp, felt*)]",
                    "pc": 762
                },
                {
                    "ap_tracking_data": {
                        "group": 67,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 769
                },
                {
                    "ap_tracking_data": {
                        "group": 67,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 769
                },
                {
                    "ap_tracking_data": {
                        "group": 67,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), starkware.cairo.common.dict_access.DictAccess**)]",
                    "pc": 769
                },
                {
                    "ap_tracking_data": {
                        "group": 68,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), starkware.cairo.common.dict_access.DictAccess**)]",
                    "pc": 774
                },
                {
                    "ap_tracking_data": {
                        "group": 68,
                        "offset": 4
                    },
                    "value": "[cast(fp, starkware.cairo.common.dict_access.DictAccess**)]",
                    "pc": 779
                },
                {
                    "ap_tracking_data": {
                        "group": 69,
                        "offset": 0
                    },
                    "value": "[cast(ap + (-1), starkware.cairo.common.dict_access.DictAccess**)]",
                    "pc": 785
                },
                {
                    "ap_tracking_data": {
                        "group": 70,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 789
                },
                {
                    "ap_tracking_data": {
                        "group": 81,
                        "offset": 0
                    },
                    "value": "[cast(ap + 5, starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                    "pc": 878
                },
                {
                    "ap_tracking_data": {
                        "group": 82,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                    "pc": 890
                },
                {
                    "ap_tracking_data": {
                        "group": 82,
                        "offset": 0
                    },
                    "value": "[cast([fp + (-6)], felt*)]",
                    "pc": 890
                },
                {
                    "ap_tracking_data": {
                        "group": 128,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3*)]",
                    "pc": 1587
                },
                {
                    "ap_tracking_data": {
                        "group": 128,
                        "offset": 0
                    },
                    "value": "[cast(ap, felt*)]",
                    "pc": 1587
                },
                {
                    "ap_tracking_data": {
                        "group": 129,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                    "pc": 1610
                },
                {
                    "ap_tracking_data": {
                        "group": 130,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3*)]",
                    "pc": 1646
                },
                {
                    "ap_tracking_data": {
                        "group": 132,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                    "pc": 1699
                },
                {
                    "ap_tracking_data": {
                        "group": 133,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                    "pc": 1715
                },
                {
                    "ap_tracking_data": {
                        "group": 134,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-14), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                    "pc": 1759
                },
                {
                    "ap_tracking_data": {
                        "group": 134,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                    "pc": 1759
                },
                {
                    "ap_tracking_data": {
                        "group": 135,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                    "pc": 1783
                },
                {
                    "ap_tracking_data": {
                        "group": 135,
                        "offset": 94
                    },
                    "value": "[cast(ap + (-3), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                    "pc": 1806
                },
                {
                    "ap_tracking_data": {
                        "group": 136,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-14), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                    "pc": 1856
                },
                {
                    "ap_tracking_data": {
                        "group": 136,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                    "pc": 1856
                },
                {
                    "ap_tracking_data": {
                        "group": 136,
                        "offset": 74
                    },
                    "value": "[cast(ap + (-3), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                    "pc": 1899
                },
                {
                    "ap_tracking_data": {
                        "group": 142,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 1999
                },
                {
                    "ap_tracking_data": {
                        "group": 154,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                    "pc": 2193
                },
                {
                    "ap_tracking_data": {
                        "group": 154,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                    "pc": 2193
                },
                {
                    "ap_tracking_data": {
                        "group": 155,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 2258
                },
                {
                    "ap_tracking_data": {
                        "group": 155,
                        "offset": 90
                    },
                    "value": "[cast(fp, starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3*)]",
                    "pc": 2286
                },
                {
                    "ap_tracking_data": {
                        "group": 162,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt**)]",
                    "pc": 2410
                },
                {
                    "ap_tracking_data": {
                        "group": 162,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 2410
                },
                {
                    "ap_tracking_data": {
                        "group": 162,
                        "offset": 2
                    },
                    "value": "[cast(fp, felt*)]",
                    "pc": 2412
                },
                {
                    "ap_tracking_data": {
                        "group": 162,
                        "offset": 2
                    },
                    "value": "[cast(fp + 1, felt*)]",
                    "pc": 2412
                },
                {
                    "ap_tracking_data": {
                        "group": 185,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 2609
                },
                {
                    "ap_tracking_data": {
                        "group": 185,
                        "offset": 0
                    },
                    "value": "cast(([fp + (-3)] + (-300)) * 1000, felt)",
                    "pc": 2611
                },
                {
                    "ap_tracking_data": {
                        "group": 185,
                        "offset": 0
                    },
                    "value": "cast(([fp + (-3)] + 60) * 1000 + 1, felt)",
                    "pc": 2611
                },
                {
                    "ap_tracking_data": {
                        "group": 186,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), felt*)]",
                    "pc": 2626
                },
                {
                    "ap_tracking_data": {
                        "group": 186,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 2626
                },
                {
                    "ap_tracking_data": {
                        "group": 186,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 2626
                }
            ]
        },
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x480a7ffb7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x2",
            "0x480280007ffb8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff97",
            "0x480280017ffb8000",
            "0x48487ffd7fff8000",
            "0x480280007ffb8000",
            "0x40317fff7ffe7ffc",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa6",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa0",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff91",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff89",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x476574426c6f636b54696d657374616d70",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x5",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480a7ffb7fff8000",
            "0x480a80017fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80027fff8000",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x7",
            "0x48127ffe7fff8000",
            "0x4828800180007ffe",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x48297ff980007ffb",
            "0x20680017fff7fff",
            "0x5",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ff88000",
            "0x480a7ff77fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff2d",
            "0x400380007ffc8001",
            "0x4826800180018000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1f",
            "0x480a80017fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0xd",
            "0x482680017ff88000",
            "0x1",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482a80017ffb8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x7",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff08",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff97fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff01",
            "0x482a80007ffc8000",
            "0x400180007fff7ffd",
            "0x4826800180008000",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x48127ffc7fff8000",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48317ffc80007ffb",
            "0x48327ffc7ffc8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeec",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee1",
            "0x40137fff7fff8000",
            "0x400b7ffd7fff8001",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffede",
            "0x48297ffd80007ffb",
            "0x48127ffe7fff8000",
            "0x48287ffc80007ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed9",
            "0x400b7ffa7fff8000",
            "0x48297ffd80007ffb",
            "0x402a7ffc80017fff",
            "0x48297ffd80007ffb",
            "0x48287ffc80007fff",
            "0x40337fff7ffa8002",
            "0x400b7ffc7fff8003",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x40137ffc7fff8000",
            "0x40137ffd7fff8001",
            "0x48127ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x7",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea7",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x5",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffa8000",
            "0x480080007fff8000",
            "0x48527fff7ffc8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484680017ffc8000",
            "0x100",
            "0x48327ffb7ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x5",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7c",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe71",
            "0x40137fff7fff8000",
            "0x4003800080007ffc",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x5",
            "0x4802800080008000",
            "0x4802800180008000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x482680017ffb8000",
            "0x1",
            "0x48487ffc7fff8000",
            "0x20680017fff7fff",
            "0x7",
            "0x482680017ffb8000",
            "0x1",
            "0x400280017ffd7fff",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffa8000",
            "0x480080007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff12",
            "0x480680017fff8000",
            "0x1",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48307ffb80007ffc",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe43",
            "0x400b7ffa7fff8000",
            "0x402b7ffd7ffb8001",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x6",
            "0x480a7ff97fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x482a7ffb7ff88000",
            "0x48287ffd80007fff",
            "0x20680017fff7fff",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x482a7ffb7ff88000",
            "0x48327fff7ffc8000",
            "0x482a7ffb7ff98000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x48297ffb80007ffd",
            "0x20680017fff7fff",
            "0x6",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x208b7fff7fff7ffe",
            "0x482a7ffd7ffa8000",
            "0x480080007fff8000",
            "0x48287ffc80007fff",
            "0x20680017fff7fff",
            "0x5",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf6",
            "0x40137fff7fff8000",
            "0x400b7ffd7fff8001",
            "0x48127ff97fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x48297ffd80007ffb",
            "0x20680017fff7fff",
            "0x4",
            "0x480a7ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x8",
            "0x402780017ff98000",
            "0x1",
            "0x482a80007ff88000",
            "0x400180007fff8001",
            "0x10780017fff7fff",
            "0x4",
            "0x400b7ff97fff8000",
            "0x400b7ffa7fff8001",
            "0x482a7ffb7ffc8000",
            "0x482a80007ff78000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a80007fff8000",
            "0x4826800180018000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc5",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb6",
            "0x40137fff7fff8000",
            "0x400b7ffd7fff8001",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x5",
            "0x20780017fff7ffb",
            "0x4",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee5",
            "0x40137fff7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x20",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed4",
            "0x40137ffc7fff8001",
            "0x40137ffd7fff8002",
            "0x48127ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0f",
            "0x40137fff7fff8003",
            "0x400b80007fff8004",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x2",
            "0x48327fff7ffc8000",
            "0x400180007fff8003",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x2",
            "0x482480017fff8000",
            "0x1",
            "0x48327fff7ffc8000",
            "0x400180007fff8004",
            "0x48127ff77fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x402b7ffb80007ffc",
            "0x20780017fff8000",
            "0x5",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x4846800180008000",
            "0x2aaaaaaaaaaaab0555555555555555555555555555555555555555555555556",
            "0x20780017fff8002",
            "0x7",
            "0x400380007ffa8001",
            "0x482680017ffa8000",
            "0x1",
            "0x10780017fff7fff",
            "0x3",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80027fff8000",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480280007ff78000",
            "0x484480017fff8000",
            "0x3",
            "0x48327fff7ff88001",
            "0x4800800280007fff",
            "0x482680017ff78000",
            "0x1",
            "0x400180007ffe7ffa",
            "0x400380007ffc7ffa",
            "0x400180017ffe8000",
            "0x400380017ffc8000",
            "0x20780017fff8001",
            "0xf",
            "0x480080007fff8000",
            "0x482480017fff8000",
            "0x1",
            "0x484480017fff8000",
            "0x3",
            "0x48307fff7ffb8002",
            "0x4000800180017ff9",
            "0x4800800280018000",
            "0x4001800080007ffa",
            "0x482480017ffa8001",
            "0x1",
            "0xa0680017fff7ffd",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x40317ffe80007ff9",
            "0x480080007fff8000",
            "0x48287ff780007ffe",
            "0x400280027ffc7ffb",
            "0x48317fff80007ffb",
            "0x20680017fff7fff",
            "0x7",
            "0x482480017ffc8000",
            "0x1",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20780017fff7ffd",
            "0xe",
            "0x482680017ffa8000",
            "0x1",
            "0x48307fff80007ffe",
            "0x400080017ff97fff",
            "0x482480017ff98000",
            "0x2",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffa7fff8000",
            "0x48127ff87fff8000",
            "0x10780017fff7fff",
            "0xc",
            "0x482480017ffb8000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7f",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x48127fe37fff8000",
            "0x48127fe17fff8000",
            "0x482680017ffc8000",
            "0x3",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbc",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x400380007ffc7ffd",
            "0x400380017ffc8000",
            "0x400380027ffc8000",
            "0x482680017ffc8000",
            "0x3",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x40137fff7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff83",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x40137ffd7fff8002",
            "0x4829800080008001",
            "0x480a80007fff8000",
            "0x484480017ffe8000",
            "0x2aaaaaaaaaaaab0555555555555555555555555555555555555555555555556",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x6",
            "0x480a80027fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd9",
            "0x40137fff7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
            "0x400b80007fff8001",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x5",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff3",
            "0x480a7ff87fff8000",
            "0x48127ffd7fff8000",
            "0x48127ff67fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x484a7ffc7ff88000",
            "0x484a7ffb7ff98000",
            "0x484a7ffd7ff88000",
            "0x484a7ffc7ff98000",
            "0x48307fff7ffe8000",
            "0x484a7ffb7ffa8000",
            "0x484a7ffd7ff98000",
            "0x484a7ffc7ffa8000",
            "0x484a7ffb7ff88000",
            "0x48307ff87ff78000",
            "0x48307ffb7ffa8000",
            "0x48307ffc7ffb8000",
            "0x484a7ffd7ffa8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0xbffffffffffffffffffffd",
            "0x4830800580048000",
            "0x483080057fff8000",
            "0x48307fff80007ffd",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x4",
            "0x48007ffd7fff8000",
            "0x48007ffe7ffe8000",
            "0x48007fff7ffd8000",
            "0x208b7fff7fff7ffe",
            "0x484680017ffc8000",
            "0x4000000000000000000000",
            "0x48327fff7ffb8000",
            "0x480280007ffa8000",
            "0x48307fff80007ffe",
            "0x484480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x482680017ffa8000",
            "0x2",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x3fffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc94",
            "0x484680017ffd8000",
            "0x100000000000",
            "0x48307fff7feb8000",
            "0x400280017ffa7fff",
            "0x48127ffd7fff8000",
            "0x480280007ffa8000",
            "0x480280017ffa8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x4000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdf",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x100000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd9",
            "0x484480017fff8000",
            "0x40000000000",
            "0x48127ffc7fff8000",
            "0x48127fe87fff8000",
            "0x48307fe67ffd8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc63",
            "0x480680017fff8000",
            "0x10",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd70",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x10",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x4",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x100",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb1",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffc8000",
            "0x400080007fff7ffd",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x6",
            "0x400780017fff7ffd",
            "0x20",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xb",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd67",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0xa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5e",
            "0x40137ffe7fff8002",
            "0x40137fff7fff8003",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd76",
            "0x40137fff7fff8004",
            "0x48127ffe7fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd70",
            "0x40137fff7fff8005",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6a",
            "0x48127ffe7fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x4000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6e",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x10",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc68",
            "0x40137fea7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x48487ffc7fff8000",
            "0x48307fff7fe78000",
            "0x480680017fff8000",
            "0x4000000000000000000000",
            "0x484480017ffb8000",
            "0x78000000000000ff00000000000000000000000000000000000000000000001",
            "0x48507fff7ffe8000",
            "0x40317fff7ffc8001",
            "0x40137ff87fff8002",
            "0x48127ff77fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff57",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7a",
            "0x40137ffe7fff8002",
            "0x40137fff7fff8003",
            "0x48127ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff74",
            "0x48127ffd7fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd86",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x9",
            "0x400780017fff7ffd",
            "0x41",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x20",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce4",
            "0x40137ffe7fff8007",
            "0x40137fff7fff8008",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff86",
            "0x40137ffd7fff8000",
            "0x40137ffe7fff8001",
            "0x40137fff7fff8002",
            "0x48127ffc7fff8000",
            "0x480a80077fff8000",
            "0x480a80087fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7e",
            "0x40137ffd7fff8003",
            "0x40137ffe7fff8004",
            "0x40137fff7fff8005",
            "0x400380407ffc8006",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x480a80067fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb98",
            "0x40137fff7fff8000",
            "0x400b7ffd7fff8001",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1a",
            "0x20780017fff7ffb",
            "0x4",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x41",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbe",
            "0x40137ffc7fff8000",
            "0x40137ffd7fff8001",
            "0x48127ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb1",
            "0x40137ff97fff8002",
            "0x40137ffa7fff8003",
            "0x40137ffb7fff8004",
            "0x40137ffc7fff8005",
            "0x40137ffd7fff8006",
            "0x40137ffe7fff8007",
            "0x40137fff7fff8008",
            "0x48127ff87fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480680017fff8000",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb2",
            "0x40137fff7fff8009",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcaa",
            "0x40137fff7fff800a",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x6",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca2",
            "0x40137fff7fff800b",
            "0x48268001800a8000",
            "0x20",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48527ffc80098000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc90",
            "0x40137ffc7fff800c",
            "0x40137ffd7fff800d",
            "0x48127ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a800a7fff8000",
            "0x480a80097fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd88",
            "0x400a80097fff7fff",
            "0x48268001800a8000",
            "0x20",
            "0x48527fff80098000",
            "0x48127ffb7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x482480017ffc8000",
            "0xd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc7c",
            "0x400b800b7fff800e",
            "0x40137ffe7fff800f",
            "0x40137fff7fff8010",
            "0x400b80027fff8011",
            "0x400b80037fff8012",
            "0x400b80047fff8013",
            "0x400b80057fff8014",
            "0x400b80067fff8015",
            "0x400b80077fff8016",
            "0x400b80087fff8017",
            "0x40137fd87fff8018",
            "0x40137fd97fff8019",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x48327fff7ffc8000",
            "0x400180007fff800e",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x1",
            "0x48327fff7ffc8000",
            "0x400180007fff800f",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x2",
            "0x48327fff7ffc8000",
            "0x400180007fff8010",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x3",
            "0x48327fff7ffc8000",
            "0x400180007fff8011",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x4",
            "0x48327fff7ffc8000",
            "0x400180007fff8012",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x5",
            "0x48327fff7ffc8000",
            "0x400180007fff8013",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x6",
            "0x48327fff7ffc8000",
            "0x400180007fff8014",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x7",
            "0x48327fff7ffc8000",
            "0x400180007fff8015",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x8",
            "0x48327fff7ffc8000",
            "0x400180007fff8016",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0x9",
            "0x48327fff7ffc8000",
            "0x400180007fff8017",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0xa",
            "0x48327fff7ffc8000",
            "0x400180007fff8018",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0xc",
            "0x482480017fff8000",
            "0xb",
            "0x48327fff7ffc8000",
            "0x400180007fff8019",
            "0x48127fcc7fff8000",
            "0x480a800c7fff8000",
            "0x480a800d7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff41",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x5",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x9",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc08",
            "0x400680017fff7fff",
            "0x2ed57011e0000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbff",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd4",
            "0x40137ffc7fff8000",
            "0x40137ffd7fff8001",
            "0x48127ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc04",
            "0x40137fff7fff8002",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff01",
            "0x400a80027fff7fff",
            "0x40137ffe7fff8003",
            "0x40137fff7fff8004",
            "0x48127ffd7fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x208b7fff7fff7ffe",
            "0x484a7ffc7ff88000",
            "0x48287ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb01",
            "0x208b7fff7fff7ffe",
            "0x484a7ffc7ffa8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x480a7ff47fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7e",
            "0x480a7ff37fff8000",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa76",
            "0x40137fff7fff8000",
            "0x400b7ffc7fff8001",
            "0x480a7ff67fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb89",
            "0x48127ffd7fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0xc",
            "0x480a7fef7fff8000",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbb",
            "0x40137ffe7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff37fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb61",
            "0x40137ffe7fff8005",
            "0x40137fff7fff8006",
            "0x40137ffd7fff8007",
            "0x48297ff780008000",
            "0x20680017fff7fff",
            "0x7",
            "0x400b7ff87fff8002",
            "0x400b7ff97fff8003",
            "0x400b7ffa7fff8004",
            "0x10780017fff7fff",
            "0x18",
            "0x482680017ff78000",
            "0x1",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0xe",
            "0x400b7ff97fff8008",
            "0x400b7ff87fff8009",
            "0x484680017ff78000",
            "0x2",
            "0x48327fff7ffc8000",
            "0x400180007fff8008",
            "0x484680017ff78000",
            "0x2",
            "0x482480017fff8000",
            "0x1",
            "0x48327fff7ffc8000",
            "0x400180007fff8009",
            "0x400780017fff8002",
            "0x0",
            "0x400b80057fff8003",
            "0x400b80067fff8004",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
            "0x48317fff80007ffb",
            "0x20680017fff7fff",
            "0x5",
            "0x480a80077fff8000",
            "0x480a7ff07fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff07fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0c",
            "0x40137ffe7fff800a",
            "0x482480017fff8000",
            "0x1",
            "0x20680017fff7fff",
            "0x6",
            "0x400780017fff800b",
            "0x0",
            "0x10780017fff7fff",
            "0x6",
            "0x482a800280038000",
            "0x400080007fff7ffd",
            "0x400780017fff800b",
            "0x1",
            "0x480a80077fff8000",
            "0x480a800a7fff8000",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a80007fff8000",
            "0x482a8002800b8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa0",
            "0x208b7fff7fff7ffe",
            "0x484a7ffb7ff88000",
            "0x484a7ffd7ff98000",
            "0x484a7ffc7ffa8000",
            "0x48307fff7ffe8000",
            "0x484480017fff8000",
            "0x400000f44",
            "0x484a7ffc7ff88000",
            "0x484a7ffb7ff98000",
            "0x48307fff7ffe8000",
            "0x484680017ffd8000",
            "0x400000f44",
            "0x48527fff7ffa8000",
            "0x484a7ffd7ff88000",
            "0x484a7ffc7ff98000",
            "0x48307fff7ffe8000",
            "0x484a7ffb7ffa8000",
            "0x48307ff67ff28000",
            "0x48307ffa7ff88000",
            "0x48307ffd7ffc8000",
            "0x208b7fff7fff7ffe",
            "0x484680017ffb8000",
            "0x2",
            "0x484a7ffb7ffb8000",
            "0x484680017ffd8000",
            "0x800001e88",
            "0x48527fff7ffc8000",
            "0x48487ffc7ffc8000",
            "0x484680017ffd8000",
            "0x400000f44",
            "0x48527fff7ffd8000",
            "0x48487ffd7ff98000",
            "0x484a7ffc7ffc8000",
            "0x48307ffa7ff88000",
            "0x48307ffc7ffa8000",
            "0x48307ffd7ffc8000",
            "0x208b7fff7fff7ffe",
            "0x4824800180008001",
            "0x80000000000000000000000000000000",
            "0x480280007ffa8000",
            "0x484480017ffe8000",
            "0x1000003d1",
            "0x48327fff7ffb8000",
            "0x484480017fff8000",
            "0x800000000000010ffffffdfffffffffffffbc00000000000000000000000001",
            "0x482480017fff8000",
            "0x80000000000000000000000000000000",
            "0x400280017ffa7fff",
            "0x48327ffe7ffc8000",
            "0x484480017fff8000",
            "0x800000000000010ffffffdfffffffffffffbc00000000000000000000000001",
            "0x482480017fff8000",
            "0x80000000000000000000000000000000",
            "0x400280027ffa7fff",
            "0x484480017ff78000",
            "0x1000000000000000000000",
            "0x40327ffd7ffd7fff",
            "0x482680017ffa8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0xb",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd15",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffae",
            "0x48127fe37fff8000",
            "0x482480017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcb",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd00",
            "0x48127ffc7fff8000",
            "0x48317ffc80007ffb",
            "0x48317ffc80007ffc",
            "0x48317ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbf",
            "0x48127fec7fff8000",
            "0x48127fec7fff8000",
            "0x48127fec7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xfffffffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff99b",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x3fffffffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff996",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x3fffffffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff991",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffff000000000000000000002",
            "0x20680017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x800000000000010ffffffffffffffffffffffffffc000000000000000000002",
            "0x20680017fff7fff",
            "0x9",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x3ffffffffffffefffffc2e",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff983",
            "0x208b7fff7fff7ffe",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff97c",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffccb",
            "0x48127ffc7fff8000",
            "0x48287ffb7ffc8000",
            "0x48287ffc7ffc8000",
            "0x48287ffd7ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8a",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fe97fff8000",
            "0x48127fe97fff8000",
            "0x48127fe97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbb",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6b",
            "0x48127fec7fff8000",
            "0x48127fec7fff8000",
            "0x48127fec7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4f",
            "0x480680017fff8000",
            "0x3",
            "0x48507fe37fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x48507ffa7fff8000",
            "0x480680017fff8000",
            "0x3",
            "0x48507fe07fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x48507ff77fff8000",
            "0x480680017fff8000",
            "0x3",
            "0x48507fdd7fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x48507ff47fff8000",
            "0x48127fc67fff8000",
            "0x48307ff680007ff4",
            "0x48307ff980007ff7",
            "0x48307ffc80007ffa",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5b",
            "0x48127fb67fff8000",
            "0x48127fb67fff8000",
            "0x48127fb67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff17fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8f",
            "0x48297ff880007ff2",
            "0x48297ff980007ff3",
            "0x48297ffa80007ff4",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff28",
            "0x48287ff580007ffd",
            "0x48287ff680007ffd",
            "0x48287ff780007ffd",
            "0x48127fe07fff8000",
            "0x48287ffb7ffc8000",
            "0x48287ffc7ffc8000",
            "0x48287ffd7ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff43",
            "0x48127fd07fff8000",
            "0x48127fd07fff8000",
            "0x48127fd07fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ff8",
            "0xe",
            "0x20780017fff7ff9",
            "0xc",
            "0x20780017fff7ffa",
            "0xa",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa8",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff16",
            "0x48127fee7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc5e",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc5b",
            "0x48307ff280007fe7",
            "0x480680017fff8000",
            "0x2",
            "0x48487ff87fff8000",
            "0x48307ff080007fe5",
            "0x480680017fff8000",
            "0x2",
            "0x48487ff97fff8000",
            "0x48307fee80007fe3",
            "0x480680017fff8000",
            "0x2",
            "0x48487ffa7fff8000",
            "0x48127ff37fff8000",
            "0x48307ff880007ff6",
            "0x48307ffa80007ff8",
            "0x48307ffc80007ffa",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0e",
            "0x48317fd880007ff8",
            "0x48317fd880007ff9",
            "0x48317fd880007ffa",
            "0x48127fbc7fff8000",
            "0x48127fbc7fff8000",
            "0x48127fbc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee2",
            "0x48287ffb80007ffd",
            "0x48287ffc80007ffd",
            "0x48287ffd80007ffd",
            "0x48127fe37fff8000",
            "0x48307fc680007ffc",
            "0x48307fc680007ffc",
            "0x48307fc680007ffc",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefd",
            "0x48127fab7fff8000",
            "0x48127fab7fff8000",
            "0x48127fab7fff8000",
            "0x48127fb37fff8000",
            "0x48127fb37fff8000",
            "0x48127fb37fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ff2",
            "0xe",
            "0x20780017fff7ff3",
            "0xc",
            "0x20780017fff7ff4",
            "0xa",
            "0x480a7ff17fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ff8",
            "0xe",
            "0x20780017fff7ff9",
            "0xc",
            "0x20780017fff7ffa",
            "0xa",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff77",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb9",
            "0x48127fee7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc01",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbfe",
            "0x48307ff280007fe7",
            "0x48287ff280007fff",
            "0x48307ff180007fe6",
            "0x48287ff380007fff",
            "0x48307ff080007fe5",
            "0x48287ff480007fff",
            "0x48127ff67fff8000",
            "0x48287ff880007ffa",
            "0x48287ff980007ffb",
            "0x48287ffa80007ffc",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb7",
            "0x48317fdb80007ff2",
            "0x48317fdb80007ff3",
            "0x48317fdb80007ff4",
            "0x48127fbf7fff8000",
            "0x48127fbf7fff8000",
            "0x48127fbf7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8b",
            "0x48287ff580007ffd",
            "0x48287ff680007ffd",
            "0x48287ff780007ffd",
            "0x48127fe37fff8000",
            "0x48307fc980007ffc",
            "0x48307fc980007ffc",
            "0x48307fc980007ffc",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea6",
            "0x48127fae7fff8000",
            "0x48127fae7fff8000",
            "0x48127fae7fff8000",
            "0x48127fb67fff8000",
            "0x48127fb67fff8000",
            "0x48127fb67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff17fff8000",
            "0x48297ff880007ff2",
            "0x48297ff980007ff3",
            "0x48297ffa80007ff4",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb0",
            "0x20680017fff7fff",
            "0x12",
            "0x48127ffe7fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff95",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x482a7ffb7ff58000",
            "0x482a7ffc7ff68000",
            "0x482a7ffd7ff78000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe98",
            "0x20680017fff7fff",
            "0xc",
            "0x48127ffe7fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3a",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x18",
            "0x400780017fff7ffc",
            "0x0",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff08",
            "0xa0680017fff8000",
            "0x10",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x484680017ffc8000",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x484480017ff88000",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc1",
            "0x40137ff47fff8000",
            "0x40137ff57fff8001",
            "0x40137ff67fff8002",
            "0x40137ff77fff8003",
            "0x40137ff87fff8004",
            "0x40137ff97fff8005",
            "0x48127ff37fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1d",
            "0x48127ff97fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x12",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x56",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff90",
            "0x40137ffa7fff8000",
            "0x40137ffb7fff8001",
            "0x40137ffc7fff8002",
            "0x40137ffd7fff8003",
            "0x40137ffe7fff8004",
            "0x40137fff7fff8005",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x56",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7e",
            "0x40137ffa7fff8006",
            "0x40137ffb7fff8007",
            "0x40137ffc7fff8008",
            "0x40137ffd7fff8009",
            "0x40137ffe7fff800a",
            "0x40137fff7fff800b",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x54",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6c",
            "0x40137ffa7fff800c",
            "0x40137ffb7fff800d",
            "0x40137ffc7fff800e",
            "0x40137ffd7fff800f",
            "0x40137ffe7fff8010",
            "0x40137fff7fff8011",
            "0x48127ff37fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x480a80067fff8000",
            "0x480a80077fff8000",
            "0x480a80087fff8000",
            "0x480a80097fff8000",
            "0x480a800a7fff8000",
            "0x480a800b7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1f",
            "0x480a800c7fff8000",
            "0x480a800d7fff8000",
            "0x480a800e7fff8000",
            "0x480a800f7fff8000",
            "0x480a80107fff8000",
            "0x480a80117fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff17",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0xe28d959f2815b16f81798",
            "0x480680017fff8000",
            "0xa573a1c2c1c0a6ff36cb7",
            "0x480680017fff8000",
            "0x79be667ef9dcbbac55a06",
            "0x480680017fff8000",
            "0x554199c47d08ffb10d4b8",
            "0x480680017fff8000",
            "0x2ff0384422a3f45ed1229a",
            "0x480680017fff8000",
            "0x483ada7726a3c4655da4f",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffadd",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffada",
            "0x48127ff27fff8000",
            "0x48127ff27fff8000",
            "0x48127ff27fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac4",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x480680017fff8000",
            "0x8a03bbfd25e8cd0364141",
            "0x480680017fff8000",
            "0x3ffffffffffaeabb739abd",
            "0x480680017fff8000",
            "0xfffffffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab9",
            "0x48307ffb80007fe6",
            "0x48287ff880007fff",
            "0x484480017fff8000",
            "0x800000000000010ffffffdfffffffffffffbc00000000000000000000000001",
            "0x482480017fff8000",
            "0x80000000000000000000000000000000",
            "0x400080007fce7fff",
            "0x48307ff880007fe3",
            "0x48287ff980007fff",
            "0x48307ffc7fff8000",
            "0x484480017fff8000",
            "0x800000000000010ffffffdfffffffffffffbc00000000000000000000000001",
            "0x482480017fff8000",
            "0x80000000000000000000000000000000",
            "0x400080017fc97fff",
            "0x48307ff480007fdf",
            "0x48287ffa80007fff",
            "0x48307ffc7fff8000",
            "0x484480017fff8000",
            "0x800000000000010ffffffdfffffffffffffbc00000000000000000000000001",
            "0x482480017fff8000",
            "0x80000000000000000000000000000000",
            "0x400080027fc47fff",
            "0x48307ff080007fdb",
            "0x48307ffd7fff8000",
            "0x484480017fff8000",
            "0x800000000000010ffffffdfffffffffffffbc00000000000000000000000001",
            "0x482480017fff8000",
            "0x80000000000000000000000000000000",
            "0x400080037fc07fff",
            "0x48307fed80007fd8",
            "0x480680017fff8000",
            "0x0",
            "0x40307ffc7ffe7fff",
            "0x482480017fbe8000",
            "0x4",
            "0x48127fb37fff8000",
            "0x48127fb37fff8000",
            "0x48127fb37fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff734",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd49",
            "0x48127fee7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8e",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd27",
            "0x40137ffd7fff8000",
            "0x40137ffe7fff8001",
            "0x40137fff7fff8002",
            "0x48127fe37fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa80",
            "0x40137ffd7fff8003",
            "0x40137ffe7fff8004",
            "0x40137fff7fff8005",
            "0x48127ffc7fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd84",
            "0x482a7ffd80038000",
            "0x48127ffe7fff8000",
            "0x484480017ffe8000",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff70c",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd21",
            "0x4826800180008000",
            "0x7",
            "0x48127fed7fff8000",
            "0x48307ffb80007ffe",
            "0x48317ffb80008001",
            "0x48317ffb80008002",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd29",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0xf",
            "0x480a7ff37fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb8",
            "0x40137ffa7fff8000",
            "0x40137ffb7fff8001",
            "0x40137ffc7fff8002",
            "0x40137ffd7fff8003",
            "0x40137ffe7fff8004",
            "0x40137fff7fff8005",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff62",
            "0x48127ff17fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff66",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5d",
            "0x40137ffd7fff8006",
            "0x40137ffe7fff8007",
            "0x40137fff7fff8008",
            "0x48127ffc7fff8000",
            "0x48127f377fff8000",
            "0x48127f377fff8000",
            "0x48127f377fff8000",
            "0x48127f377fff8000",
            "0x48127f377fff8000",
            "0x48127f377fff8000",
            "0x48127f957fff8000",
            "0x48127f957fff8000",
            "0x48127f957fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5e",
            "0x40137ffa7fff8009",
            "0x40137ffb7fff800a",
            "0x40137ffc7fff800b",
            "0x40137ffd7fff800c",
            "0x40137ffe7fff800d",
            "0x40137fff7fff800e",
            "0x48127ff97fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x480a80067fff8000",
            "0x480a80077fff8000",
            "0x480a80087fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffedd",
            "0x48127ff97fff8000",
            "0x480a80097fff8000",
            "0x480a800a7fff8000",
            "0x480a800b7fff8000",
            "0x480a800c7fff8000",
            "0x480a800d7fff8000",
            "0x480a800e7fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe31",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xe",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff3",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127ff57fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa12",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x10",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6eb",
            "0x48127ffd7fff8000",
            "0x482480017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff78e",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x10",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6d0",
            "0x20680017fff7ffe",
            "0xb",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7b6",
            "0x482a7ffb7ffc8000",
            "0x400080007fff7ffe",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x10",
            "0x48127ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7aa",
            "0x482a7ffb7ffc8000",
            "0x400080007fff7ffe",
            "0x402780017ff98000",
            "0x10",
            "0x402780017ffa8001",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ffd7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ff37fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x1b",
            "0x1104800180018000",
            "0x29",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff98",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a1",
            "0x400780017fff8000",
            "0xffffffffffffffffffffffffffffffff",
            "0x400780017fff8001",
            "0xffffffff",
            "0x48127ffd7fff8000",
            "0x480a7ff47fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff96c",
            "0x40127fe47fff7ffe",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48307ffb7ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7e",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff19",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa1a",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa12",
            "0x48127ffd7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7a9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff07fff8000",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x40137ffe7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7b9",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed5",
            "0x482680017ffd8000",
            "0x3c",
            "0x484480017fff8000",
            "0x3e8",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x484480017ffb8000",
            "0x3e8",
            "0x482480017ffc8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5e4",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5c9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0xa",
            "0x480a7ff47fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5be",
            "0x400b7ff67fff8000",
            "0x400b7ff77fff8001",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaea",
            "0x40137ffe7fff8002",
            "0x40137fff7fff8003",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8e3",
            "0x40137fff7fff8004",
            "0x48127ffe7fff8000",
            "0x480a7ff57fff8000",
            "0x480a80047fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x2c",
            "0x40137ffe7fff8005",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb18",
            "0x40137ffe7fff8006",
            "0x40137fff7fff8007",
            "0x48127ffc7fff8000",
            "0x480a80077fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6a3",
            "0x40137ffe7fff8008",
            "0x40137fff7fff8009",
            "0x48127ffd7fff8000",
            "0x480a80067fff8000",
            "0x480a80077fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80087fff8000",
            "0x480a80097fff8000",
            "0x1104800180018000",
            "0xba",
            "0x480a80057fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a80067fff8000",
            "0x480a80077fff8000",
            "0x480a80087fff8000",
            "0x480a80097fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x48297ff680007ffd",
            "0x20680017fff7fff",
            "0x6",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x208b7fff7fff7ffe",
            "0x484680017ffd8000",
            "0xc",
            "0x48327fff7ff58000",
            "0x480a7ff27fff8000",
            "0x480080007ffe8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff90",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x1",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x2",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x3",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x4",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x5",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x6",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x7",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x8",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0x9",
            "0x48327fff7ff58000",
            "0x48127fe47fff8000",
            "0x480a7ff37fff8000",
            "0x480080007fe58000",
            "0x480080007fe78000",
            "0x480080007fe98000",
            "0x480080007feb8000",
            "0x480080007fed8000",
            "0x480080007fef8000",
            "0x480080007ff18000",
            "0x480080007ff38000",
            "0x480080007ff58000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff39",
            "0x40137ffe7fff8000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0xa",
            "0x48327fff7ff58000",
            "0x484680017ffd8000",
            "0xc",
            "0x482480017fff8000",
            "0xb",
            "0x48327fff7ff58000",
            "0x48127ff77fff8000",
            "0x480a7ff47fff8000",
            "0x480080007ffa8000",
            "0x480080007ffc8000",
            "0x48127ff57fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x12",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8c",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x482680017ff68000",
            "0x1",
            "0x20680017fff7fff",
            "0x5",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ff580007ffd",
            "0x20680017fff7fff",
            "0x5",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x208b7fff7fff7ffe",
            "0x484680017ffd8000",
            "0x2",
            "0x48327fff7ff48000",
            "0x480a7ff27fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ffc8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6c3",
            "0x484680017ffd8000",
            "0x2",
            "0x482480017fff8000",
            "0x1",
            "0x48327fff7ff48000",
            "0x48127ffb7fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007ff78000",
            "0x48127ff37fff8000",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa45",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x48297ff480007ffb",
            "0x20680017fff7fff",
            "0x4",
            "0x480a7ff27fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff27fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef5",
            "0x484680017ffb8000",
            "0x2",
            "0x48327fff7ff38000",
            "0x484680017ffb8000",
            "0x2",
            "0x482480017fff8000",
            "0x1",
            "0x48327fff7ff38000",
            "0x48127ffa7fff8000",
            "0x480080007ffb8000",
            "0x480080007ffd8000",
            "0x1104800180018000",
            "0x14",
            "0x482a7ffb7ffc8000",
            "0x400080007fff7ffe",
            "0x48127ffd7fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff691",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4f9",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x6",
            "0x48307ffd7fe88000",
            "0x48127ffb7fff8000",
            "0x480080007ffe8000",
            "0x208b7fff7fff7ffe",
            "0x48307ffd7fe88000",
            "0x480080007fff8000",
            "0x482480017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48307fff7fe58000",
            "0x480080007fff8000",
            "0x48127ff77fff8000",
            "0x48307ffe7ffb8000",
            "0x480680017fff8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4e5",
            "0x48307fe37fce8000",
            "0x480080007fff8000",
            "0x482480017fe18000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48307fff7fcb8000",
            "0x480080007fff8000",
            "0x48307fff7ffc8000",
            "0x48307ff97fff8000",
            "0x48127ff67fff8000",
            "0x484480017ffe8000",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x29c8a6aec22fd7291f1c8fccae6404d13d65bf9bc1151e99af8f44447fb471f",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff50a",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff504",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x15a8d0506d0c177fa98225230bcf9072c22da8f209d218968983fa0f07f575e",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff446",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4c0",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4e2",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4db",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x15b3e6868f9470e54a04f6fe0d176bd5abc3bdd3eb4b739f552dead72b05c6e",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4c3",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4bd",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x9",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4a6",
            "0x40137fff7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x22",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
            "0x40137ffc7fff8001",
            "0x40137ffd7fff8002",
            "0x400b80007fff8003",
            "0x40137fe77fff8004",
            "0x40137fe87fff8005",
            "0x400b7ffa7fff8006",
            "0x400b7ffb7fff8007",
            "0x40137fff7fff8008",
            "0x48127ffe7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x480a80067fff8000",
            "0x480a80077fff8000",
            "0x480a80087fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe26",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x48127ff77fff8000",
            "0x48127ff57fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb8",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4e8",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127fed7fff8000",
            "0x48127fed7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffb",
            "0x20680017fff7fff",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7b",
            "0x482a7ffb7ffc8000",
            "0x400080007fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482a7ffd7ffb8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x480080007ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6e",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x2bd803c09c6b34a4d86ee95434129ea89232e91fab09f9e5dc6fe984fa9a6f",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff38e",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff408",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff42a",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff423",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff36d",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff380",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff06",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4a",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffab",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280017ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa9",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff419",
            "0x400180007ffe7ffb",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x21",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280017ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeca",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x2a",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x2",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff38000",
            "0x482480017ff28000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffa80007ffd",
            "0x20680017fff7fff",
            "0x7",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x482a7ffd7ff98000",
            "0x482a7ffd7ffb8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff87fff8000",
            "0x480080007ffb8000",
            "0x480080007ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff12",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x208b7fff7fff7ffe"
        ],
        "attributes": [
            {
                "name": "error_message",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 82,
                        "offset": 24
                    },
                    "reference_ids": {}
                },
                "start_pc": 904,
                "accessible_scopes": [
                    "starkware.cairo.common.cairo_secp.bigint",
                    "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256"
                ],
                "value": "x out of range",
                "end_pc": 908
            },
            {
                "name": "error_message",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 142,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "start_pc": 2001,
                "accessible_scopes": [
                    "starkware.cairo.common.cairo_secp.ec",
                    "starkware.cairo.common.cairo_secp.ec.ec_mul_inner"
                ],
                "value": "Too large scalar",
                "end_pc": 2003
            },
            {
                "name": "error_message",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 155,
                        "offset": 6
                    },
                    "reference_ids": {
                        "starkware.cairo.common.cairo_secp.signature.get_point_from_x.v": 65
                    }
                },
                "start_pc": 2260,
                "accessible_scopes": [
                    "starkware.cairo.common.cairo_secp.signature",
                    "starkware.cairo.common.cairo_secp.signature.get_point_from_x"
                ],
                "value": "Out of range v {v}.",
                "end_pc": 2264
            },
            {
                "name": "error_message",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 185,
                        "offset": 0
                    },
                    "reference_ids": {
                        "redstone.core.validation.validate_timestamp.max_ts": 73,
                        "redstone.core.validation.validate_timestamp.min_ts": 72,
                        "redstone.core.validation.validate_timestamp.package_ts_ms": 71
                    }
                },
                "start_pc": 2611,
                "accessible_scopes": [
                    "redstone.core.validation",
                    "redstone.core.validation.validate_timestamp"
                ],
                "value": "The package timestamp (package_ts_ms={package_ts_ms}) must be in range {min_ts} =< package_ts_ms < {max_ts}",
                "end_pc": 2625
            },
            {
                "name": "error_message",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 186,
                        "offset": 0
                    },
                    "reference_ids": {
                        "redstone.core.validation.validate_signer_count_treshold.count": 74,
                        "redstone.core.validation.validate_signer_count_treshold.index": 76,
                        "redstone.core.validation.validate_signer_count_treshold.treshold": 75
                    }
                },
                "start_pc": 2626,
                "accessible_scopes": [
                    "redstone.core.validation",
                    "redstone.core.validation.validate_signer_count_treshold"
                ],
                "value": "Insufficient unique signer count for data feed #{index} (currently: {count} for required treshold: {treshold})",
                "end_pc": 2631
            }
        ],
        "identifiers": {
            "__main__.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "__main__.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.array_new": {
                "destination": "redstone.utils.array.array_new",
                "type": "alias"
            },
            "__main__.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "__main__.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "__main__.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "__main__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 3227,
                "type": "function"
            },
            "__main__.constructor.Args": {
                "members": {
                    "signer_count_treshold": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "addresses_len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "addresses": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "__main__.constructor.Args",
                "size": 3,
                "type": "struct"
            },
            "__main__.constructor.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.constructor.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "__main__.constructor.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.constructor.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.get_aggregated_values": {
                "destination": "contracts.core.get_aggregated_values",
                "type": "alias"
            },
            "__main__.get_price": {
                "decorators": [
                    "view"
                ],
                "pc": 3282,
                "type": "function"
            },
            "__main__.get_price.Args": {
                "members": {
                    "feed_id": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.get_price.Args",
                "size": 1,
                "type": "struct"
            },
            "__main__.get_price.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.get_price.ImplicitArgs",
                "size": 4,
                "type": "struct"
            },
            "__main__.get_price.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "__main__.get_price.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.price": {
                "type": "namespace"
            },
            "__main__.price.Args": {
                "members": {},
                "full_name": "__main__.price.Args",
                "size": 0,
                "type": "struct"
            },
            "__main__.price.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.price.ImplicitArgs": {
                "members": {},
                "full_name": "__main__.price.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "__main__.price.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.price.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.price.addr": {
                "decorators": [],
                "pc": 3186,
                "type": "function"
            },
            "__main__.price.addr.Args": {
                "members": {
                    "feed_id": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.price.addr.Args",
                "size": 1,
                "type": "struct"
            },
            "__main__.price.addr.ImplicitArgs": {
                "members": {
                    "pedersen_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.price.addr.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "__main__.price.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.price.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.price.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.price.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.price.read": {
                "decorators": [],
                "pc": 3200,
                "type": "function"
            },
            "__main__.price.read.Args": {
                "members": {
                    "feed_id": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.price.read.Args",
                "size": 1,
                "type": "struct"
            },
            "__main__.price.read.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.price.read.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "__main__.price.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.price.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.price.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.price.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.price.write": {
                "decorators": [],
                "pc": 3214,
                "type": "function"
            },
            "__main__.price.write.Args": {
                "members": {
                    "feed_id": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "value": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.price.write.Args",
                "size": 2,
                "type": "struct"
            },
            "__main__.price.write.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.price.write.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "__main__.price.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.price.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.set_price": {
                "decorators": [
                    "view"
                ],
                "pc": 3325,
                "type": "function"
            },
            "__main__.set_price.Args": {
                "members": {
                    "feed_id": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "payload_data_len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "payload_data": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "__main__.set_price.Args",
                "size": 3,
                "type": "struct"
            },
            "__main__.set_price.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.set_price.ImplicitArgs",
                "size": 4,
                "type": "struct"
            },
            "__main__.set_price.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.set_price.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.set_prices": {
                "decorators": [
                    "external"
                ],
                "pc": 3374,
                "type": "function"
            },
            "__main__.set_prices.Args": {
                "members": {
                    "feed_ids_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "feed_ids": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    },
                    "payload_data_len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "payload_data": {
                        "offset": 3,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "__main__.set_prices.Args",
                "size": 4,
                "type": "struct"
            },
            "__main__.set_prices.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.set_prices.ImplicitArgs",
                "size": 4,
                "type": "struct"
            },
            "__main__.set_prices.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.set_prices.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.signer_address": {
                "destination": "contracts.core.signer_address",
                "type": "alias"
            },
            "__main__.signer_address_len": {
                "destination": "contracts.core.signer_address_len",
                "type": "alias"
            },
            "__main__.unique_signer_count_treshold": {
                "destination": "contracts.core.unique_signer_count_treshold",
                "type": "alias"
            },
            "__main__.write_addresses": {
                "destination": "contracts.core.write_addresses",
                "type": "alias"
            },
            "__main__.write_prices": {
                "decorators": [],
                "pc": 3438,
                "type": "function"
            },
            "__main__.write_prices.Args": {
                "members": {
                    "feed_ids": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "values": {
                        "offset": 2,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "index": {
                        "offset": 4,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.write_prices.Args",
                "size": 5,
                "type": "struct"
            },
            "__main__.write_prices.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__main__.write_prices.ImplicitArgs",
                "size": 4,
                "type": "struct"
            },
            "__main__.write_prices.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.write_prices.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 3253,
                "type": "function"
            },
            "__wrappers__.constructor.Args": {
                "members": {},
                "full_name": "__wrappers__.constructor.Args",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.constructor.ImplicitArgs": {
                "members": {},
                "full_name": "__wrappers__.constructor.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.constructor.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.constructor.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.constructor.__wrapped_func": {
                "destination": "__main__.constructor",
                "type": "alias"
            },
            "__wrappers__.constructor_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.get_price": {
                "decorators": [
                    "view"
                ],
                "pc": 3305,
                "type": "function"
            },
            "__wrappers__.get_price.Args": {
                "members": {},
                "full_name": "__wrappers__.get_price.Args",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_price.ImplicitArgs": {
                "members": {},
                "full_name": "__wrappers__.get_price.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_price.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_price.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.get_price.__wrapped_func": {
                "destination": "__main__.get_price",
                "type": "alias"
            },
            "__wrappers__.get_price_encode_return": {
                "decorators": [],
                "pc": 3296,
                "type": "function"
            },
            "__wrappers__.get_price_encode_return.Args": {
                "members": {
                    "ret_value": {
                        "offset": 0,
                        "cairo_type": "(value: felt)"
                    },
                    "range_check_ptr": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "__wrappers__.get_price_encode_return.Args",
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.get_price_encode_return.ImplicitArgs": {
                "members": {},
                "full_name": "__wrappers__.get_price_encode_return.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_price_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_price_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.get_price_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.set_price": {
                "decorators": [
                    "view"
                ],
                "pc": 3344,
                "type": "function"
            },
            "__wrappers__.set_price.Args": {
                "members": {},
                "full_name": "__wrappers__.set_price.Args",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.set_price.ImplicitArgs": {
                "members": {},
                "full_name": "__wrappers__.set_price.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.set_price.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.set_price.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.set_price.__wrapped_func": {
                "destination": "__main__.set_price",
                "type": "alias"
            },
            "__wrappers__.set_price_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.set_prices": {
                "decorators": [
                    "external"
                ],
                "pc": 3399,
                "type": "function"
            },
            "__wrappers__.set_prices.Args": {
                "members": {},
                "full_name": "__wrappers__.set_prices.Args",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.set_prices.ImplicitArgs": {
                "members": {},
                "full_name": "__wrappers__.set_prices.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.set_prices.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.set_prices.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.set_prices.__wrapped_func": {
                "destination": "__main__.set_prices",
                "type": "alias"
            },
            "__wrappers__.set_prices_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.core.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "contracts.core.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.core.Config": {
                "destination": "redstone.core.config.Config",
                "type": "alias"
            },
            "contracts.core.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.core.Payload": {
                "destination": "redstone.protocol.payload.Payload",
                "type": "alias"
            },
            "contracts.core._get_allowed_signer_addresses": {
                "decorators": [],
                "pc": 3139,
                "type": "function"
            },
            "contracts.core._get_allowed_signer_addresses.Args": {
                "members": {
                    "index": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 1,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "contracts.core._get_allowed_signer_addresses.Args",
                "size": 3,
                "type": "struct"
            },
            "contracts.core._get_allowed_signer_addresses.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core._get_allowed_signer_addresses.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core._get_allowed_signer_addresses.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.core._get_allowed_signer_addresses.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.array_new": {
                "destination": "redstone.utils.array.array_new",
                "type": "alias"
            },
            "contracts.core.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "contracts.core.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.core.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "contracts.core.get_aggregated_values": {
                "decorators": [],
                "pc": 3073,
                "type": "function"
            },
            "contracts.core.get_aggregated_values.Args": {
                "members": {
                    "requested_feed_ids": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "payload_data_len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "payload_data": {
                        "offset": 3,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "contracts.core.get_aggregated_values.Args",
                "size": 4,
                "type": "struct"
            },
            "contracts.core.get_aggregated_values.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.get_aggregated_values.ImplicitArgs",
                "size": 4,
                "type": "struct"
            },
            "contracts.core.get_aggregated_values.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "contracts.core.get_aggregated_values.SIZEOF_LOCALS": {
                "value": 9,
                "type": "const"
            },
            "contracts.core.get_allowed_signer_addresses": {
                "decorators": [],
                "pc": 3116,
                "type": "function"
            },
            "contracts.core.get_allowed_signer_addresses.Args": {
                "members": {},
                "full_name": "contracts.core.get_allowed_signer_addresses.Args",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.get_allowed_signer_addresses.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.get_allowed_signer_addresses.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.get_allowed_signer_addresses.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "contracts.core.get_allowed_signer_addresses.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "contracts.core.get_block_timestamp": {
                "destination": "starkware.starknet.common.syscalls.get_block_timestamp",
                "type": "alias"
            },
            "contracts.core.get_price": {
                "destination": "redstone.protocol.payload.get_price",
                "type": "alias"
            },
            "contracts.core.redstone_process_payload": {
                "destination": "redstone.core.processor.process_payload",
                "type": "alias"
            },
            "contracts.core.signer_address": {
                "type": "namespace"
            },
            "contracts.core.signer_address.Args": {
                "members": {},
                "full_name": "contracts.core.signer_address.Args",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.signer_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.core.signer_address.ImplicitArgs": {
                "members": {},
                "full_name": "contracts.core.signer_address.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.signer_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.core.signer_address.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.signer_address.addr": {
                "decorators": [],
                "pc": 3002,
                "type": "function"
            },
            "contracts.core.signer_address.addr.Args": {
                "members": {
                    "index": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address.addr.Args",
                "size": 1,
                "type": "struct"
            },
            "contracts.core.signer_address.addr.ImplicitArgs": {
                "members": {
                    "pedersen_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address.addr.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "contracts.core.signer_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.core.signer_address.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.signer_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.core.signer_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.core.signer_address.read": {
                "decorators": [],
                "pc": 3016,
                "type": "function"
            },
            "contracts.core.signer_address.read.Args": {
                "members": {
                    "index": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address.read.Args",
                "size": 1,
                "type": "struct"
            },
            "contracts.core.signer_address.read.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address.read.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.signer_address.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.core.signer_address.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.signer_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.core.signer_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.core.signer_address.write": {
                "decorators": [],
                "pc": 3030,
                "type": "function"
            },
            "contracts.core.signer_address.write.Args": {
                "members": {
                    "index": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "value": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address.write.Args",
                "size": 2,
                "type": "struct"
            },
            "contracts.core.signer_address.write.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address.write.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.signer_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.core.signer_address.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.signer_address_len": {
                "type": "namespace"
            },
            "contracts.core.signer_address_len.Args": {
                "members": {},
                "full_name": "contracts.core.signer_address_len.Args",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.signer_address_len.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.core.signer_address_len.ImplicitArgs": {
                "members": {},
                "full_name": "contracts.core.signer_address_len.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.signer_address_len.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.core.signer_address_len.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.signer_address_len.addr": {
                "decorators": [],
                "pc": 3043,
                "type": "function"
            },
            "contracts.core.signer_address_len.addr.Args": {
                "members": {},
                "full_name": "contracts.core.signer_address_len.addr.Args",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.signer_address_len.addr.ImplicitArgs": {
                "members": {
                    "pedersen_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address_len.addr.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "contracts.core.signer_address_len.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.core.signer_address_len.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.signer_address_len.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.core.signer_address_len.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.core.signer_address_len.read": {
                "decorators": [],
                "pc": 3048,
                "type": "function"
            },
            "contracts.core.signer_address_len.read.Args": {
                "members": {},
                "full_name": "contracts.core.signer_address_len.read.Args",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.signer_address_len.read.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address_len.read.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.signer_address_len.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.core.signer_address_len.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.signer_address_len.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.core.signer_address_len.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.core.signer_address_len.write": {
                "decorators": [],
                "pc": 3061,
                "type": "function"
            },
            "contracts.core.signer_address_len.write.Args": {
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address_len.write.Args",
                "size": 1,
                "type": "struct"
            },
            "contracts.core.signer_address_len.write.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.signer_address_len.write.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.signer_address_len.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.core.signer_address_len.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.unique_signer_count_treshold": {
                "type": "namespace"
            },
            "contracts.core.unique_signer_count_treshold.Args": {
                "members": {},
                "full_name": "contracts.core.unique_signer_count_treshold.Args",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.unique_signer_count_treshold.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.core.unique_signer_count_treshold.ImplicitArgs": {
                "members": {},
                "full_name": "contracts.core.unique_signer_count_treshold.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.unique_signer_count_treshold.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.core.unique_signer_count_treshold.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.unique_signer_count_treshold.addr": {
                "decorators": [],
                "pc": 2972,
                "type": "function"
            },
            "contracts.core.unique_signer_count_treshold.addr.Args": {
                "members": {},
                "full_name": "contracts.core.unique_signer_count_treshold.addr.Args",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.unique_signer_count_treshold.addr.ImplicitArgs": {
                "members": {
                    "pedersen_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.unique_signer_count_treshold.addr.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "contracts.core.unique_signer_count_treshold.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.core.unique_signer_count_treshold.addr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.unique_signer_count_treshold.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.core.unique_signer_count_treshold.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.core.unique_signer_count_treshold.read": {
                "decorators": [],
                "pc": 2977,
                "type": "function"
            },
            "contracts.core.unique_signer_count_treshold.read.Args": {
                "members": {},
                "full_name": "contracts.core.unique_signer_count_treshold.read.Args",
                "size": 0,
                "type": "struct"
            },
            "contracts.core.unique_signer_count_treshold.read.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.unique_signer_count_treshold.read.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.unique_signer_count_treshold.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.core.unique_signer_count_treshold.read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.unique_signer_count_treshold.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.core.unique_signer_count_treshold.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.core.unique_signer_count_treshold.write": {
                "decorators": [],
                "pc": 2990,
                "type": "function"
            },
            "contracts.core.unique_signer_count_treshold.write.Args": {
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.unique_signer_count_treshold.write.Args",
                "size": 1,
                "type": "struct"
            },
            "contracts.core.unique_signer_count_treshold.write.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.unique_signer_count_treshold.write.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.unique_signer_count_treshold.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.core.unique_signer_count_treshold.write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.core.write_addresses": {
                "decorators": [],
                "pc": 3164,
                "type": "function"
            },
            "contracts.core.write_addresses.Args": {
                "members": {
                    "ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "index": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.write_addresses.Args",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.write_addresses.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "contracts.core.write_addresses.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "contracts.core.write_addresses.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.core.write_addresses.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.config.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.core.config.Config": {
                "members": {
                    "block_ts": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "allowed_signer_addresses": {
                        "offset": 1,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "requested_feed_ids": {
                        "offset": 3,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "signer_count_treshold": {
                        "offset": 5,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.config.Config",
                "size": 6,
                "type": "struct"
            },
            "redstone.core.config.get_config_index": {
                "decorators": [],
                "pc": 1388,
                "type": "function"
            },
            "redstone.core.config.get_config_index.Args": {
                "members": {
                    "config": {
                        "offset": 0,
                        "cairo_type": "redstone.core.config.Config"
                    },
                    "price_index": {
                        "offset": 6,
                        "cairo_type": "felt"
                    },
                    "signer_index": {
                        "offset": 7,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.config.get_config_index.Args",
                "size": 8,
                "type": "struct"
            },
            "redstone.core.config.get_config_index.ImplicitArgs": {
                "members": {},
                "full_name": "redstone.core.config.get_config_index.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "redstone.core.config.get_config_index.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.core.config.get_config_index.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.config.get_config_len": {
                "decorators": [],
                "pc": 1397,
                "type": "function"
            },
            "redstone.core.config.get_config_len.Args": {
                "members": {
                    "config": {
                        "offset": 0,
                        "cairo_type": "redstone.core.config.Config"
                    }
                },
                "full_name": "redstone.core.config.get_config_len.Args",
                "size": 6,
                "type": "struct"
            },
            "redstone.core.config.get_config_len.ImplicitArgs": {
                "members": {},
                "full_name": "redstone.core.config.get_config_len.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "redstone.core.config.get_config_len.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.core.config.get_config_len.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.config.get_price_and_signer_indices": {
                "decorators": [],
                "pc": 1391,
                "type": "function"
            },
            "redstone.core.config.get_price_and_signer_indices.Args": {
                "members": {
                    "config": {
                        "offset": 0,
                        "cairo_type": "redstone.core.config.Config"
                    },
                    "index": {
                        "offset": 6,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.config.get_price_and_signer_indices.Args",
                "size": 7,
                "type": "struct"
            },
            "redstone.core.config.get_price_and_signer_indices.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.config.get_price_and_signer_indices.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.core.config.get_price_and_signer_indices.Return": {
                "cairo_type": "(price_index: felt, signer_index: felt)",
                "type": "type_definition"
            },
            "redstone.core.config.get_price_and_signer_indices.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.config.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "redstone.core.processor.ARRAY_UNKNOWN_INDEX": {
                "destination": "redstone.utils.array.ARRAY_UNKNOWN_INDEX",
                "type": "alias"
            },
            "redstone.core.processor.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.core.processor.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "redstone.core.processor.Config": {
                "destination": "redstone.core.config.Config",
                "type": "alias"
            },
            "redstone.core.processor.DataPackageArray": {
                "destination": "redstone.protocol.data_package.DataPackageArray",
                "type": "alias"
            },
            "redstone.core.processor.DataPointArray": {
                "destination": "redstone.protocol.data_point.DataPointArray",
                "type": "alias"
            },
            "redstone.core.processor.Dict": {
                "destination": "redstone.utils.dict.Dict",
                "type": "alias"
            },
            "redstone.core.processor.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "redstone.core.processor.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "redstone.core.processor.Payload": {
                "destination": "redstone.protocol.payload.Payload",
                "type": "alias"
            },
            "redstone.core.processor.Results": {
                "destination": "redstone.core.results.Results",
                "type": "alias"
            },
            "redstone.core.processor.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "redstone.core.processor.array_index": {
                "destination": "redstone.utils.array.array_index",
                "type": "alias"
            },
            "redstone.core.processor.array_new": {
                "destination": "redstone.utils.array.array_new",
                "type": "alias"
            },
            "redstone.core.processor.array_sort": {
                "destination": "redstone.utils.array.array_sort",
                "type": "alias"
            },
            "redstone.core.processor.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "redstone.core.processor.calculate_median": {
                "decorators": [],
                "pc": 2927,
                "type": "function"
            },
            "redstone.core.processor.calculate_median.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.core.processor.calculate_median.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.processor.calculate_median.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.processor.calculate_median.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.core.processor.calculate_median.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.core.processor.calculate_median.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.processor.dict_new": {
                "destination": "redstone.utils.dict.dict_new",
                "type": "alias"
            },
            "redstone.core.processor.get_payload": {
                "destination": "redstone.protocol.payload.get_payload",
                "type": "alias"
            },
            "redstone.core.processor.make_results": {
                "destination": "redstone.core.results.make_results",
                "type": "alias"
            },
            "redstone.core.processor.process_data_package": {
                "decorators": [],
                "pc": 2827,
                "type": "function"
            },
            "redstone.core.processor.process_data_package.Args": {
                "members": {
                    "data_points": {
                        "offset": 0,
                        "cairo_type": "redstone.protocol.data_point.DataPointArray"
                    },
                    "signer_index": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "config": {
                        "offset": 3,
                        "cairo_type": "redstone.core.config.Config"
                    },
                    "index": {
                        "offset": 9,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.processor.process_data_package.Args",
                "size": 10,
                "type": "struct"
            },
            "redstone.core.processor.process_data_package.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "dict_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "redstone.core.processor.process_data_package.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.processor.process_data_package.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.core.processor.process_data_package.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.processor.process_data_packages": {
                "decorators": [],
                "pc": 2707,
                "type": "function"
            },
            "redstone.core.processor.process_data_packages.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.protocol.data_package.DataPackageArray"
                    },
                    "config": {
                        "offset": 2,
                        "cairo_type": "redstone.core.config.Config"
                    },
                    "index": {
                        "offset": 8,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.processor.process_data_packages.Args",
                "size": 9,
                "type": "struct"
            },
            "redstone.core.processor.process_data_packages.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "bitwise_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "dict_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "redstone.core.processor.process_data_packages.ImplicitArgs",
                "size": 3,
                "type": "struct"
            },
            "redstone.core.processor.process_data_packages.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.core.processor.process_data_packages.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "redstone.core.processor.process_payload": {
                "decorators": [],
                "pc": 2632,
                "type": "function"
            },
            "redstone.core.processor.process_payload.Args": {
                "members": {
                    "data_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "data_len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "config": {
                        "offset": 2,
                        "cairo_type": "redstone.core.config.Config"
                    }
                },
                "full_name": "redstone.core.processor.process_payload.Args",
                "size": 8,
                "type": "struct"
            },
            "redstone.core.processor.process_payload.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "bitwise_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    }
                },
                "full_name": "redstone.core.processor.process_payload.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.processor.process_payload.Return": {
                "cairo_type": "(payload: redstone.protocol.payload.Payload, results: redstone.core.results.Results, aggregated: redstone.utils.array.Array)",
                "type": "type_definition"
            },
            "redstone.core.processor.process_payload.SIZEOF_LOCALS": {
                "value": 10,
                "type": "const"
            },
            "redstone.core.processor.process_results": {
                "decorators": [],
                "pc": 2883,
                "type": "function"
            },
            "redstone.core.processor.process_results.Args": {
                "members": {
                    "results": {
                        "offset": 0,
                        "cairo_type": "redstone.core.results.Results"
                    },
                    "config": {
                        "offset": 2,
                        "cairo_type": "redstone.core.config.Config"
                    },
                    "index": {
                        "offset": 8,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 9,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.core.processor.process_results.Args",
                "size": 11,
                "type": "struct"
            },
            "redstone.core.processor.process_results.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.processor.process_results.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.core.processor.process_results.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.core.processor.process_results.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.processor.serialize_word": {
                "destination": "starkware.cairo.common.serialize.serialize_word",
                "type": "alias"
            },
            "redstone.core.processor.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "redstone.core.processor.validate_signature": {
                "destination": "redstone.core.validation.validate_signature",
                "type": "alias"
            },
            "redstone.core.processor.validate_signer_count_treshold": {
                "destination": "redstone.core.validation.validate_signer_count_treshold",
                "type": "alias"
            },
            "redstone.core.processor.validate_timestamp": {
                "destination": "redstone.core.validation.validate_timestamp",
                "type": "alias"
            },
            "redstone.core.processor.write_results_value": {
                "destination": "redstone.core.results.write_results_value",
                "type": "alias"
            },
            "redstone.core.results.ARRAY_UNKNOWN_INDEX": {
                "destination": "redstone.utils.array.ARRAY_UNKNOWN_INDEX",
                "type": "alias"
            },
            "redstone.core.results.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.core.results.Config": {
                "destination": "redstone.core.config.Config",
                "type": "alias"
            },
            "redstone.core.results.DICT_UNKNOWN_VALUE": {
                "destination": "redstone.utils.dict.DICT_UNKNOWN_VALUE",
                "type": "alias"
            },
            "redstone.core.results.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "redstone.core.results.Results": {
                "members": {
                    "ptr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array*"
                    },
                    "len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.results.Results",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.results._make_results": {
                "decorators": [],
                "pc": 1451,
                "type": "function"
            },
            "redstone.core.results._make_results.Args": {
                "members": {
                    "config": {
                        "offset": 0,
                        "cairo_type": "redstone.core.config.Config"
                    },
                    "last_price_index": {
                        "offset": 6,
                        "cairo_type": "felt"
                    },
                    "price_count_acc": {
                        "offset": 7,
                        "cairo_type": "felt"
                    },
                    "price_arr_acc": {
                        "offset": 8,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "index": {
                        "offset": 10,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 11,
                        "cairo_type": "redstone.core.results.Results"
                    }
                },
                "full_name": "redstone.core.results._make_results.Args",
                "size": 13,
                "type": "struct"
            },
            "redstone.core.results._make_results.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "dict_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "redstone.core.results._make_results.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.results._make_results.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.core.results._make_results.SIZEOF_LOCALS": {
                "value": 12,
                "type": "const"
            },
            "redstone.core.results.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "redstone.core.results.array_index": {
                "destination": "redstone.utils.array.array_index",
                "type": "alias"
            },
            "redstone.core.results.array_new": {
                "destination": "redstone.utils.array.array_new",
                "type": "alias"
            },
            "redstone.core.results.array_sort": {
                "destination": "redstone.utils.array.array_sort",
                "type": "alias"
            },
            "redstone.core.results.dict_read": {
                "destination": "starkware.cairo.common.dict.dict_read",
                "type": "alias"
            },
            "redstone.core.results.dict_write": {
                "destination": "starkware.cairo.common.dict.dict_write",
                "type": "alias"
            },
            "redstone.core.results.get_config_index": {
                "destination": "redstone.core.config.get_config_index",
                "type": "alias"
            },
            "redstone.core.results.get_config_len": {
                "destination": "redstone.core.config.get_config_len",
                "type": "alias"
            },
            "redstone.core.results.get_price_and_signer_indices": {
                "destination": "redstone.core.config.get_price_and_signer_indices",
                "type": "alias"
            },
            "redstone.core.results.make_results": {
                "decorators": [],
                "pc": 1417,
                "type": "function"
            },
            "redstone.core.results.make_results.Args": {
                "members": {
                    "config": {
                        "offset": 0,
                        "cairo_type": "redstone.core.config.Config"
                    }
                },
                "full_name": "redstone.core.results.make_results.Args",
                "size": 6,
                "type": "struct"
            },
            "redstone.core.results.make_results.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "dict_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "redstone.core.results.make_results.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.results.make_results.Return": {
                "cairo_type": "redstone.core.results.Results",
                "type": "type_definition"
            },
            "redstone.core.results.make_results.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.core.results.serialize_array": {
                "destination": "redstone.utils.array.serialize_array",
                "type": "alias"
            },
            "redstone.core.results.serialize_word": {
                "destination": "starkware.cairo.common.serialize.serialize_word",
                "type": "alias"
            },
            "redstone.core.results.write_results_value": {
                "decorators": [],
                "pc": 1399,
                "type": "function"
            },
            "redstone.core.results.write_results_value.Args": {
                "members": {
                    "config": {
                        "offset": 0,
                        "cairo_type": "redstone.core.config.Config"
                    },
                    "value": {
                        "offset": 6,
                        "cairo_type": "felt"
                    },
                    "price_index": {
                        "offset": 7,
                        "cairo_type": "felt"
                    },
                    "signer_index": {
                        "offset": 8,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.results.write_results_value.Args",
                "size": 9,
                "type": "struct"
            },
            "redstone.core.results.write_results_value.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "dict_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "redstone.core.results.write_results_value.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.results.write_results_value.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.core.results.write_results_value.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.validation.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.core.validation.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "redstone.core.validation.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "redstone.core.validation.MAX_DATA_TIMESTAMP_AHEAD_SECONDS": {
                "value": 60,
                "type": "const"
            },
            "redstone.core.validation.MAX_DATA_TIMESTAMP_DELAY_SECONDS": {
                "value": 300,
                "type": "const"
            },
            "redstone.core.validation.Signature": {
                "destination": "redstone.crypto.signature.Signature",
                "type": "alias"
            },
            "redstone.core.validation.array_index": {
                "destination": "redstone.utils.array.array_index",
                "type": "alias"
            },
            "redstone.core.validation.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "redstone.core.validation.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "redstone.core.validation.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "redstone.core.validation.recover_address": {
                "destination": "redstone.crypto.secp.recover_address",
                "type": "alias"
            },
            "redstone.core.validation.validate_signature": {
                "decorators": [],
                "pc": 2583,
                "type": "function"
            },
            "redstone.core.validation.validate_signature.Args": {
                "members": {
                    "signable_arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "signature": {
                        "offset": 2,
                        "cairo_type": "redstone.crypto.signature.Signature"
                    },
                    "allowed_signer_addresses": {
                        "offset": 9,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "index": {
                        "offset": 11,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.validation.validate_signature.Args",
                "size": 12,
                "type": "struct"
            },
            "redstone.core.validation.validate_signature.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "bitwise_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    }
                },
                "full_name": "redstone.core.validation.validate_signature.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.validation.validate_signature.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.core.validation.validate_signature.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "redstone.core.validation.validate_signer_count_treshold": {
                "decorators": [],
                "pc": 2626,
                "type": "function"
            },
            "redstone.core.validation.validate_signer_count_treshold.Args": {
                "members": {
                    "count": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "treshold": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "index": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.validation.validate_signer_count_treshold.Args",
                "size": 3,
                "type": "struct"
            },
            "redstone.core.validation.validate_signer_count_treshold.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.validation.validate_signer_count_treshold.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.core.validation.validate_signer_count_treshold.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.core.validation.validate_signer_count_treshold.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.validation.validate_signer_count_treshold.count": {
                "full_name": "redstone.core.validation.validate_signer_count_treshold.count",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 186,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), felt*)]",
                        "pc": 2626
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "redstone.core.validation.validate_signer_count_treshold.index": {
                "full_name": "redstone.core.validation.validate_signer_count_treshold.index",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 186,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 2626
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "redstone.core.validation.validate_signer_count_treshold.treshold": {
                "full_name": "redstone.core.validation.validate_signer_count_treshold.treshold",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 186,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 2626
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "redstone.core.validation.validate_timestamp": {
                "decorators": [],
                "pc": 2609,
                "type": "function"
            },
            "redstone.core.validation.validate_timestamp.Args": {
                "members": {
                    "package_ts_ms": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "block_ts": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.validation.validate_timestamp.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.core.validation.validate_timestamp.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.core.validation.validate_timestamp.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.core.validation.validate_timestamp.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.core.validation.validate_timestamp.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.core.validation.validate_timestamp.max_ts": {
                "full_name": "redstone.core.validation.validate_timestamp.max_ts",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 185,
                            "offset": 0
                        },
                        "value": "cast(([fp + (-3)] + 60) * 1000 + 1, felt)",
                        "pc": 2611
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "redstone.core.validation.validate_timestamp.min_ts": {
                "full_name": "redstone.core.validation.validate_timestamp.min_ts",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 185,
                            "offset": 0
                        },
                        "value": "cast(([fp + (-3)] + (-300)) * 1000, felt)",
                        "pc": 2611
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "redstone.core.validation.validate_timestamp.package_ts_ms": {
                "full_name": "redstone.core.validation.validate_timestamp.package_ts_ms",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 185,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 2609
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "redstone.crypto.keccak.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.crypto.keccak.BigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "alias"
            },
            "redstone.crypto.keccak.KECCAK_WORD_SIZE": {
                "value": 16,
                "type": "const"
            },
            "redstone.crypto.keccak.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "redstone.crypto.keccak._keccak_words": {
                "decorators": [],
                "pc": 2461,
                "type": "function"
            },
            "redstone.crypto.keccak._keccak_words.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "count": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 3,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.crypto.keccak._keccak_words.Args",
                "size": 5,
                "type": "struct"
            },
            "redstone.crypto.keccak._keccak_words.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.crypto.keccak._keccak_words.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.crypto.keccak._keccak_words.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.crypto.keccak._keccak_words.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.crypto.keccak.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "redstone.crypto.keccak.array_new": {
                "destination": "redstone.utils.array.array_new",
                "type": "alias"
            },
            "redstone.crypto.keccak.array_to_number": {
                "destination": "redstone.utils.array.array_to_number",
                "type": "alias"
            },
            "redstone.crypto.keccak.keccak": {
                "decorators": [],
                "pc": 2415,
                "type": "function"
            },
            "redstone.crypto.keccak.keccak.Args": {
                "members": {
                    "bytes_arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.crypto.keccak.keccak.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.crypto.keccak.keccak.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.crypto.keccak.keccak.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.crypto.keccak.keccak.Return": {
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "type_definition"
            },
            "redstone.crypto.keccak.keccak.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.crypto.keccak.keccak_words": {
                "decorators": [],
                "pc": 2434,
                "type": "function"
            },
            "redstone.crypto.keccak.keccak_words.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.crypto.keccak.keccak_words.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.crypto.keccak.keccak_words.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.crypto.keccak.keccak_words.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.crypto.keccak.keccak_words.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "redstone.crypto.keccak.keccak_words.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.crypto.keccak.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "redstone.crypto.keccak.uint256_to_bigint": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint",
                "type": "alias"
            },
            "redstone.crypto.keccak.unsafe_keccak": {
                "destination": "starkware.cairo.common.keccak.unsafe_keccak",
                "type": "alias"
            },
            "redstone.crypto.keccak.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "redstone.crypto.secp.ALL_ONES": {
                "destination": "starkware.cairo.common.uint256.ALL_ONES",
                "type": "alias"
            },
            "redstone.crypto.secp.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.crypto.secp.BigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "alias"
            },
            "redstone.crypto.secp.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "redstone.crypto.secp.EcPoint": {
                "destination": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "alias"
            },
            "redstone.crypto.secp.SHIFT": {
                "destination": "starkware.cairo.common.uint256.SHIFT",
                "type": "alias"
            },
            "redstone.crypto.secp.Signature": {
                "destination": "redstone.crypto.signature.Signature",
                "type": "alias"
            },
            "redstone.crypto.secp.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "redstone.crypto.secp.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "redstone.crypto.secp.array_join": {
                "destination": "redstone.utils.array.array_join",
                "type": "alias"
            },
            "redstone.crypto.secp.bigint_to_bytes": {
                "destination": "redstone.utils.bigint.bigint_to_bytes",
                "type": "alias"
            },
            "redstone.crypto.secp.bigint_to_uint256": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256",
                "type": "alias"
            },
            "redstone.crypto.secp.ecpoint_to_bytes": {
                "decorators": [],
                "pc": 2559,
                "type": "function"
            },
            "redstone.crypto.secp.ecpoint_to_bytes.Args": {
                "members": {
                    "point": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    }
                },
                "full_name": "redstone.crypto.secp.ecpoint_to_bytes.Args",
                "size": 6,
                "type": "struct"
            },
            "redstone.crypto.secp.ecpoint_to_bytes.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.crypto.secp.ecpoint_to_bytes.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.crypto.secp.ecpoint_to_bytes.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "redstone.crypto.secp.ecpoint_to_bytes.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.crypto.secp.keccak": {
                "destination": "redstone.crypto.keccak.keccak",
                "type": "alias"
            },
            "redstone.crypto.secp.recover_address": {
                "decorators": [],
                "pc": 2504,
                "type": "function"
            },
            "redstone.crypto.secp.recover_address.Args": {
                "members": {
                    "signable_arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "signature": {
                        "offset": 2,
                        "cairo_type": "redstone.crypto.signature.Signature"
                    }
                },
                "full_name": "redstone.crypto.secp.recover_address.Args",
                "size": 9,
                "type": "struct"
            },
            "redstone.crypto.secp.recover_address.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "bitwise_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    }
                },
                "full_name": "redstone.crypto.secp.recover_address.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "redstone.crypto.secp.recover_address.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.crypto.secp.recover_address.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.crypto.secp.recover_public_key": {
                "decorators": [],
                "pc": 2543,
                "type": "function"
            },
            "redstone.crypto.secp.recover_public_key.Args": {
                "members": {
                    "signable_arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "signature": {
                        "offset": 2,
                        "cairo_type": "redstone.crypto.signature.Signature"
                    }
                },
                "full_name": "redstone.crypto.secp.recover_public_key.Args",
                "size": 9,
                "type": "struct"
            },
            "redstone.crypto.secp.recover_public_key.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.crypto.secp.recover_public_key.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.crypto.secp.recover_public_key.Return": {
                "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "type_definition"
            },
            "redstone.crypto.secp.recover_public_key.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.crypto.secp.secp_recover_public_key": {
                "destination": "starkware.cairo.common.cairo_secp.signature.recover_public_key",
                "type": "alias"
            },
            "redstone.crypto.secp.serialize_array": {
                "destination": "redstone.utils.array.serialize_array",
                "type": "alias"
            },
            "redstone.crypto.secp.serialize_bigint": {
                "destination": "redstone.utils.bigint.serialize_bigint",
                "type": "alias"
            },
            "redstone.crypto.secp.serialize_word": {
                "destination": "starkware.cairo.common.serialize.serialize_word",
                "type": "alias"
            },
            "redstone.crypto.secp.uint256_and": {
                "destination": "starkware.cairo.common.uint256.uint256_and",
                "type": "alias"
            },
            "redstone.crypto.signature.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.crypto.signature.BigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "alias"
            },
            "redstone.crypto.signature.SIGNATURE_BS": {
                "destination": "redstone.protocol.constants.SIGNATURE_BS",
                "type": "alias"
            },
            "redstone.crypto.signature.Signature": {
                "members": {
                    "r": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "s": {
                        "offset": 3,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "v": {
                        "offset": 6,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.crypto.signature.Signature",
                "size": 7,
                "type": "struct"
            },
            "redstone.crypto.signature.array_slice_tail_offset": {
                "destination": "redstone.utils.array.array_slice_tail_offset",
                "type": "alias"
            },
            "redstone.crypto.signature.bigint_from_array": {
                "destination": "redstone.utils.bigint.bigint_from_array",
                "type": "alias"
            },
            "redstone.crypto.signature.get_signature": {
                "decorators": [],
                "pc": 1082,
                "type": "function"
            },
            "redstone.crypto.signature.get_signature.Args": {
                "members": {
                    "bytes_arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.crypto.signature.get_signature.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.crypto.signature.get_signature.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.crypto.signature.get_signature.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.crypto.signature.get_signature.Return": {
                "cairo_type": "redstone.crypto.signature.Signature",
                "type": "type_definition"
            },
            "redstone.crypto.signature.get_signature.SIZEOF_LOCALS": {
                "value": 9,
                "type": "const"
            },
            "redstone.crypto.signature.serialize_bigint": {
                "destination": "redstone.utils.bigint.serialize_bigint",
                "type": "alias"
            },
            "redstone.crypto.signature.serialize_word": {
                "destination": "starkware.cairo.common.serialize.serialize_word",
                "type": "alias"
            },
            "redstone.protocol.constants.DATA_FEED_ID_BS": {
                "value": 32,
                "type": "const"
            },
            "redstone.protocol.constants.DATA_PACKAGES_COUNT_BS": {
                "value": 2,
                "type": "const"
            },
            "redstone.protocol.constants.DATA_POINTS_COUNT_BS": {
                "value": 3,
                "type": "const"
            },
            "redstone.protocol.constants.DATA_POINT_VALUE_BYTE_SIZE_BS": {
                "value": 4,
                "type": "const"
            },
            "redstone.protocol.constants.REDSTONE_MARKER": {
                "value": 823907890102272,
                "type": "const"
            },
            "redstone.protocol.constants.REDSTONE_MARKER_BS": {
                "value": 9,
                "type": "const"
            },
            "redstone.protocol.constants.SIGNATURE_BS": {
                "value": 65,
                "type": "const"
            },
            "redstone.protocol.constants.TIMESTAMP_BS": {
                "value": 6,
                "type": "const"
            },
            "redstone.protocol.constants.UNSIGNED_METADATA_BYTE_SIZE_BS": {
                "value": 3,
                "type": "const"
            },
            "redstone.protocol.data_package.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.protocol.data_package.DATA_FEED_ID_BS": {
                "destination": "redstone.protocol.constants.DATA_FEED_ID_BS",
                "type": "alias"
            },
            "redstone.protocol.data_package.DATA_POINTS_COUNT_BS": {
                "destination": "redstone.protocol.constants.DATA_POINTS_COUNT_BS",
                "type": "alias"
            },
            "redstone.protocol.data_package.DATA_POINT_VALUE_BYTE_SIZE_BS": {
                "destination": "redstone.protocol.constants.DATA_POINT_VALUE_BYTE_SIZE_BS",
                "type": "alias"
            },
            "redstone.protocol.data_package.DataPackage": {
                "members": {
                    "timestamp": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "signable_arr": {
                        "offset": 1,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "signature": {
                        "offset": 3,
                        "cairo_type": "redstone.crypto.signature.Signature"
                    },
                    "data_points": {
                        "offset": 10,
                        "cairo_type": "redstone.protocol.data_point.DataPointArray"
                    }
                },
                "full_name": "redstone.protocol.data_package.DataPackage",
                "size": 12,
                "type": "struct"
            },
            "redstone.protocol.data_package.DataPackageArray": {
                "members": {
                    "ptr": {
                        "offset": 0,
                        "cairo_type": "redstone.protocol.data_package.DataPackage*"
                    },
                    "len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_package.DataPackageArray",
                "size": 2,
                "type": "struct"
            },
            "redstone.protocol.data_package.DataPoint": {
                "destination": "redstone.protocol.data_point.DataPoint",
                "type": "alias"
            },
            "redstone.protocol.data_package.DataPointArray": {
                "destination": "redstone.protocol.data_point.DataPointArray",
                "type": "alias"
            },
            "redstone.protocol.data_package.Dict": {
                "destination": "redstone.utils.dict.Dict",
                "type": "alias"
            },
            "redstone.protocol.data_package.SIGNATURE_BS": {
                "destination": "redstone.protocol.constants.SIGNATURE_BS",
                "type": "alias"
            },
            "redstone.protocol.data_package.Signature": {
                "destination": "redstone.crypto.signature.Signature",
                "type": "alias"
            },
            "redstone.protocol.data_package.TIMESTAMP_BS": {
                "destination": "redstone.protocol.constants.TIMESTAMP_BS",
                "type": "alias"
            },
            "redstone.protocol.data_package._get_data_packages": {
                "decorators": [],
                "pc": 1144,
                "type": "function"
            },
            "redstone.protocol.data_package._get_data_packages.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "count": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 3,
                        "cairo_type": "redstone.protocol.data_package.DataPackageArray"
                    }
                },
                "full_name": "redstone.protocol.data_package._get_data_packages.Args",
                "size": 5,
                "type": "struct"
            },
            "redstone.protocol.data_package._get_data_packages.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_package._get_data_packages.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.protocol.data_package._get_data_packages.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.protocol.data_package._get_data_packages.SIZEOF_LOCALS": {
                "value": 26,
                "type": "const"
            },
            "redstone.protocol.data_package.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "redstone.protocol.data_package.array_rfold": {
                "destination": "starkware.cairo.common.serialize.array_rfold",
                "type": "alias"
            },
            "redstone.protocol.data_package.array_slice_number": {
                "destination": "redstone.utils.array.array_slice_number",
                "type": "alias"
            },
            "redstone.protocol.data_package.array_slice_tail": {
                "destination": "redstone.utils.array.array_slice_tail",
                "type": "alias"
            },
            "redstone.protocol.data_package.array_slice_tail_offset": {
                "destination": "redstone.utils.array.array_slice_tail_offset",
                "type": "alias"
            },
            "redstone.protocol.data_package.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "redstone.protocol.data_package.get_data_packages": {
                "decorators": [],
                "pc": 1123,
                "type": "function"
            },
            "redstone.protocol.data_package.get_data_packages.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "count": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_package.get_data_packages.Args",
                "size": 3,
                "type": "struct"
            },
            "redstone.protocol.data_package.get_data_packages.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_package.get_data_packages.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.protocol.data_package.get_data_packages.Return": {
                "cairo_type": "redstone.protocol.data_package.DataPackageArray",
                "type": "type_definition"
            },
            "redstone.protocol.data_package.get_data_packages.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.protocol.data_package.get_data_points": {
                "destination": "redstone.protocol.data_point.get_data_points",
                "type": "alias"
            },
            "redstone.protocol.data_package.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "redstone.protocol.data_package.get_signature": {
                "destination": "redstone.crypto.signature.get_signature",
                "type": "alias"
            },
            "redstone.protocol.data_package.serialize_data_point_array": {
                "destination": "redstone.protocol.data_point.serialize_data_point_array",
                "type": "alias"
            },
            "redstone.protocol.data_package.serialize_signature": {
                "destination": "redstone.crypto.signature.serialize_signature",
                "type": "alias"
            },
            "redstone.protocol.data_package.serialize_word": {
                "destination": "starkware.cairo.common.serialize.serialize_word",
                "type": "alias"
            },
            "redstone.protocol.data_point.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.protocol.data_point.DATA_FEED_ID_BS": {
                "destination": "redstone.protocol.constants.DATA_FEED_ID_BS",
                "type": "alias"
            },
            "redstone.protocol.data_point.DataPoint": {
                "members": {
                    "feed_id": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "value": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_point.DataPoint",
                "size": 2,
                "type": "struct"
            },
            "redstone.protocol.data_point.DataPointArray": {
                "members": {
                    "ptr": {
                        "offset": 0,
                        "cairo_type": "redstone.protocol.data_point.DataPoint*"
                    },
                    "len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_point.DataPointArray",
                "size": 2,
                "type": "struct"
            },
            "redstone.protocol.data_point._get_data_points": {
                "decorators": [],
                "pc": 603,
                "type": "function"
            },
            "redstone.protocol.data_point._get_data_points.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "value_size": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "count": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 4,
                        "cairo_type": "redstone.protocol.data_point.DataPointArray"
                    }
                },
                "full_name": "redstone.protocol.data_point._get_data_points.Args",
                "size": 6,
                "type": "struct"
            },
            "redstone.protocol.data_point._get_data_points.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_point._get_data_points.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.protocol.data_point._get_data_points.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.protocol.data_point._get_data_points.SIZEOF_LOCALS": {
                "value": 5,
                "type": "const"
            },
            "redstone.protocol.data_point.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "redstone.protocol.data_point.array_slice_number": {
                "destination": "redstone.utils.array.array_slice_number",
                "type": "alias"
            },
            "redstone.protocol.data_point.array_slice_tail": {
                "destination": "redstone.utils.array.array_slice_tail",
                "type": "alias"
            },
            "redstone.protocol.data_point.array_to_number": {
                "destination": "redstone.utils.array.array_to_number",
                "type": "alias"
            },
            "redstone.protocol.data_point.array_to_string": {
                "destination": "redstone.utils.array.array_to_string",
                "type": "alias"
            },
            "redstone.protocol.data_point.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "redstone.protocol.data_point.get_data_points": {
                "decorators": [],
                "pc": 577,
                "type": "function"
            },
            "redstone.protocol.data_point.get_data_points.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "value_size": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "count": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_point.get_data_points.Args",
                "size": 4,
                "type": "struct"
            },
            "redstone.protocol.data_point.get_data_points.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.data_point.get_data_points.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.protocol.data_point.get_data_points.Return": {
                "cairo_type": "redstone.protocol.data_point.DataPointArray",
                "type": "type_definition"
            },
            "redstone.protocol.data_point.get_data_points.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.protocol.data_point.serialize_word": {
                "destination": "starkware.cairo.common.serialize.serialize_word",
                "type": "alias"
            },
            "redstone.protocol.payload.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.protocol.payload.DATA_PACKAGES_COUNT_BS": {
                "destination": "redstone.protocol.constants.DATA_PACKAGES_COUNT_BS",
                "type": "alias"
            },
            "redstone.protocol.payload.DataPackageArray": {
                "destination": "redstone.protocol.data_package.DataPackageArray",
                "type": "alias"
            },
            "redstone.protocol.payload.Payload": {
                "members": {
                    "data_packages": {
                        "offset": 0,
                        "cairo_type": "redstone.protocol.data_package.DataPackageArray"
                    }
                },
                "full_name": "redstone.protocol.payload.Payload",
                "size": 2,
                "type": "struct"
            },
            "redstone.protocol.payload.REDSTONE_MARKER": {
                "destination": "redstone.protocol.constants.REDSTONE_MARKER",
                "type": "alias"
            },
            "redstone.protocol.payload.REDSTONE_MARKER_BS": {
                "destination": "redstone.protocol.constants.REDSTONE_MARKER_BS",
                "type": "alias"
            },
            "redstone.protocol.payload.UNSIGNED_METADATA_BYTE_SIZE_BS": {
                "destination": "redstone.protocol.constants.UNSIGNED_METADATA_BYTE_SIZE_BS",
                "type": "alias"
            },
            "redstone.protocol.payload.array_slice_number": {
                "destination": "redstone.utils.array.array_slice_number",
                "type": "alias"
            },
            "redstone.protocol.payload.array_slice_tail_offset": {
                "destination": "redstone.utils.array.array_slice_tail_offset",
                "type": "alias"
            },
            "redstone.protocol.payload.array_to_number": {
                "destination": "redstone.utils.array.array_to_number",
                "type": "alias"
            },
            "redstone.protocol.payload.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "redstone.protocol.payload.data_point_array_index": {
                "destination": "redstone.protocol.data_point.data_point_array_index",
                "type": "alias"
            },
            "redstone.protocol.payload.get_data_packages": {
                "destination": "redstone.protocol.data_package.get_data_packages",
                "type": "alias"
            },
            "redstone.protocol.payload.get_payload": {
                "decorators": [],
                "pc": 1339,
                "type": "function"
            },
            "redstone.protocol.payload.get_payload.Args": {
                "members": {
                    "bytes_arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.protocol.payload.get_payload.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.protocol.payload.get_payload.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.protocol.payload.get_payload.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.protocol.payload.get_payload.Return": {
                "cairo_type": "redstone.protocol.payload.Payload",
                "type": "type_definition"
            },
            "redstone.protocol.payload.get_payload.SIZEOF_LOCALS": {
                "value": 5,
                "type": "const"
            },
            "redstone.protocol.payload.serialize_data_package_array": {
                "destination": "redstone.protocol.data_package.serialize_data_package_array",
                "type": "alias"
            },
            "redstone.utils.array.ARRAY_UNKNOWN_INDEX": {
                "value": -1,
                "type": "const"
            },
            "redstone.utils.array.Array": {
                "members": {
                    "ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.Array",
                "size": 2,
                "type": "struct"
            },
            "redstone.utils.array._array_index": {
                "decorators": [],
                "pc": 492,
                "type": "function"
            },
            "redstone.utils.array._array_index.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "key": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "index": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array._array_index.Args",
                "size": 4,
                "type": "struct"
            },
            "redstone.utils.array._array_index.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array._array_index.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array._array_index.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.utils.array._array_index.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.array._array_sort": {
                "decorators": [],
                "pc": 543,
                "type": "function"
            },
            "redstone.utils.array._array_sort.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "multiplicities": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    },
                    "mult_index_acc": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "mult_left_acc": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "index": {
                        "offset": 4,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 5,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.array._array_sort.Args",
                "size": 7,
                "type": "struct"
            },
            "redstone.utils.array._array_sort.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array._array_sort.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array._array_sort.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.utils.array._array_sort.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.utils.array._array_to_number": {
                "decorators": [],
                "pc": 366,
                "type": "function"
            },
            "redstone.utils.array._array_to_number.Args": {
                "members": {
                    "ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "mlt": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "acc": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array._array_to_number.Args",
                "size": 4,
                "type": "struct"
            },
            "redstone.utils.array._array_to_number.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array._array_to_number.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array._array_to_number.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.utils.array._array_to_number.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.array._array_trunc": {
                "decorators": [],
                "pc": 415,
                "type": "function"
            },
            "redstone.utils.array._array_trunc.Args": {
                "members": {
                    "ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "last_is_zero": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 3,
                        "cairo_type": "redstone.utils.array.Array*"
                    }
                },
                "full_name": "redstone.utils.array._array_trunc.Args",
                "size": 4,
                "type": "struct"
            },
            "redstone.utils.array._array_trunc.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array._array_trunc.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array._array_trunc.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.utils.array._array_trunc.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.array.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "redstone.utils.array.array_index": {
                "decorators": [],
                "pc": 483,
                "type": "function"
            },
            "redstone.utils.array.array_index.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "key": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_index.Args",
                "size": 3,
                "type": "struct"
            },
            "redstone.utils.array.array_index.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_index.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_index.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.utils.array.array_index.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.array.array_join": {
                "decorators": [],
                "pc": 444,
                "type": "function"
            },
            "redstone.utils.array.array_join.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "join": {
                        "offset": 2,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.array.array_join.Args",
                "size": 4,
                "type": "struct"
            },
            "redstone.utils.array.array_join.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_join.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_join.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "redstone.utils.array.array_join.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.utils.array.array_join_rec": {
                "decorators": [],
                "pc": 463,
                "type": "function"
            },
            "redstone.utils.array.array_join_rec.Args": {
                "members": {
                    "offset": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "join": {
                        "offset": 1,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "index": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 4,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.array.array_join_rec.Args",
                "size": 6,
                "type": "struct"
            },
            "redstone.utils.array.array_join_rec.ImplicitArgs": {
                "members": {},
                "full_name": "redstone.utils.array.array_join_rec.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "redstone.utils.array.array_join_rec.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.utils.array.array_join_rec.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.array.array_new": {
                "decorators": [],
                "pc": 282,
                "type": "function"
            },
            "redstone.utils.array.array_new.Args": {
                "members": {
                    "len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_new.Args",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_new.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_new.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_new.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "redstone.utils.array.array_new.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.utils.array.array_slice_number": {
                "decorators": [],
                "pc": 329,
                "type": "function"
            },
            "redstone.utils.array.array_slice_number.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_slice_number.Args",
                "size": 3,
                "type": "struct"
            },
            "redstone.utils.array.array_slice_number.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_slice_number.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_slice_number.Return": {
                "cairo_type": "(head: redstone.utils.array.Array, number: felt)",
                "type": "type_definition"
            },
            "redstone.utils.array.array_slice_number.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.utils.array.array_slice_tail": {
                "decorators": [],
                "pc": 320,
                "type": "function"
            },
            "redstone.utils.array.array_slice_tail.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_slice_tail.Args",
                "size": 3,
                "type": "struct"
            },
            "redstone.utils.array.array_slice_tail.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_slice_tail.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_slice_tail.Return": {
                "cairo_type": "(head: redstone.utils.array.Array, tail: redstone.utils.array.Array)",
                "type": "type_definition"
            },
            "redstone.utils.array.array_slice_tail.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.array.array_slice_tail_offset": {
                "decorators": [],
                "pc": 296,
                "type": "function"
            },
            "redstone.utils.array.array_slice_tail_offset.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    },
                    "len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "tail_offset": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_slice_tail_offset.Args",
                "size": 4,
                "type": "struct"
            },
            "redstone.utils.array.array_slice_tail_offset.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_slice_tail_offset.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_slice_tail_offset.Return": {
                "cairo_type": "(head: redstone.utils.array.Array, tail: redstone.utils.array.Array)",
                "type": "type_definition"
            },
            "redstone.utils.array.array_slice_tail_offset.SIZEOF_LOCALS": {
                "value": 4,
                "type": "const"
            },
            "redstone.utils.array.array_sort": {
                "decorators": [],
                "pc": 516,
                "type": "function"
            },
            "redstone.utils.array.array_sort.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.array.array_sort.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.utils.array.array_sort.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_sort.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_sort.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "redstone.utils.array.array_sort.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.utils.array.array_to_number": {
                "decorators": [],
                "pc": 351,
                "type": "function"
            },
            "redstone.utils.array.array_to_number.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.array.array_to_number.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.utils.array.array_to_number.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_to_number.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_to_number.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.utils.array.array_to_number.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.array.array_to_string": {
                "decorators": [],
                "pc": 386,
                "type": "function"
            },
            "redstone.utils.array.array_to_string.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.array.array_to_string.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.utils.array.array_to_string.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_to_string.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_to_string.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "redstone.utils.array.array_to_string.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.array.array_trunc": {
                "decorators": [],
                "pc": 394,
                "type": "function"
            },
            "redstone.utils.array.array_trunc.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.array.array_trunc.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.utils.array.array_trunc.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.array.array_trunc.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.array.array_trunc.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "redstone.utils.array.array_trunc.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "redstone.utils.array.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "redstone.utils.array.is_not_zero": {
                "destination": "starkware.cairo.common.math_cmp.is_not_zero",
                "type": "alias"
            },
            "redstone.utils.array.serialize_word": {
                "destination": "starkware.cairo.common.serialize.serialize_word",
                "type": "alias"
            },
            "redstone.utils.array.usort": {
                "destination": "starkware.cairo.common.usort.usort",
                "type": "alias"
            },
            "redstone.utils.bigint.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.utils.bigint.BASE": {
                "destination": "starkware.cairo.common.cairo_secp.constants.BASE",
                "type": "alias"
            },
            "redstone.utils.bigint.BigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "alias"
            },
            "redstone.utils.bigint.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "redstone.utils.bigint.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "redstone.utils.bigint.array_join": {
                "destination": "redstone.utils.array.array_join",
                "type": "alias"
            },
            "redstone.utils.bigint.array_new": {
                "destination": "redstone.utils.array.array_new",
                "type": "alias"
            },
            "redstone.utils.bigint.array_slice_tail": {
                "destination": "redstone.utils.array.array_slice_tail",
                "type": "alias"
            },
            "redstone.utils.bigint.array_to_number": {
                "destination": "redstone.utils.array.array_to_number",
                "type": "alias"
            },
            "redstone.utils.bigint.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "redstone.utils.bigint.bigint_from_array": {
                "decorators": [],
                "pc": 977,
                "type": "function"
            },
            "redstone.utils.bigint.bigint_from_array.Args": {
                "members": {
                    "arr": {
                        "offset": 0,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.bigint.bigint_from_array.Args",
                "size": 2,
                "type": "struct"
            },
            "redstone.utils.bigint.bigint_from_array.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.bigint.bigint_from_array.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.bigint.bigint_from_array.Return": {
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "type_definition"
            },
            "redstone.utils.bigint.bigint_from_array.SIZEOF_LOCALS": {
                "value": 6,
                "type": "const"
            },
            "redstone.utils.bigint.bigint_from_limbs": {
                "decorators": [],
                "pc": 1023,
                "type": "function"
            },
            "redstone.utils.bigint.bigint_from_limbs.Args": {
                "members": {
                    "a2": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "a1": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "a0": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.bigint.bigint_from_limbs.Args",
                "size": 3,
                "type": "struct"
            },
            "redstone.utils.bigint.bigint_from_limbs.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.bigint.bigint_from_limbs.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.bigint.bigint_from_limbs.Return": {
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "type_definition"
            },
            "redstone.utils.bigint.bigint_from_limbs.SIZEOF_LOCALS": {
                "value": 3,
                "type": "const"
            },
            "redstone.utils.bigint.bigint_to_bytes": {
                "decorators": [],
                "pc": 1054,
                "type": "function"
            },
            "redstone.utils.bigint.bigint_to_bytes.Args": {
                "members": {
                    "num": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "redstone.utils.bigint.bigint_to_bytes.Args",
                "size": 3,
                "type": "struct"
            },
            "redstone.utils.bigint.bigint_to_bytes.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.bigint.bigint_to_bytes.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.bigint.bigint_to_bytes.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "redstone.utils.bigint.bigint_to_bytes.SIZEOF_LOCALS": {
                "value": 4,
                "type": "const"
            },
            "redstone.utils.bigint.bigint_to_uint256": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256",
                "type": "alias"
            },
            "redstone.utils.bigint.serialize_word": {
                "destination": "starkware.cairo.common.serialize.serialize_word",
                "type": "alias"
            },
            "redstone.utils.bigint.shortint_to_bytes": {
                "destination": "redstone.utils.shortint.shortint_to_bytes",
                "type": "alias"
            },
            "redstone.utils.bigint.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "redstone.utils.dict.DICT_UNKNOWN_VALUE": {
                "value": -1,
                "type": "const"
            },
            "redstone.utils.dict.Dict": {
                "members": {
                    "ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "redstone.utils.dict.Dict",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.dict.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "redstone.utils.dict.default_dict_finalize": {
                "destination": "starkware.cairo.common.default_dict.default_dict_finalize",
                "type": "alias"
            },
            "redstone.utils.dict.default_dict_new": {
                "destination": "starkware.cairo.common.default_dict.default_dict_new",
                "type": "alias"
            },
            "redstone.utils.dict.dict_new": {
                "decorators": [],
                "pc": 825,
                "type": "function"
            },
            "redstone.utils.dict.dict_new.Args": {
                "members": {},
                "full_name": "redstone.utils.dict.dict_new.Args",
                "size": 0,
                "type": "struct"
            },
            "redstone.utils.dict.dict_new.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.dict.dict_new.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.dict.dict_new.Return": {
                "cairo_type": "redstone.utils.dict.Dict",
                "type": "type_definition"
            },
            "redstone.utils.dict.dict_new.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.utils.shortint.Array": {
                "destination": "redstone.utils.array.Array",
                "type": "alias"
            },
            "redstone.utils.shortint.SHORTINT_SIZE_BYTES": {
                "value": 16,
                "type": "const"
            },
            "redstone.utils.shortint._shortint_to_bytes": {
                "decorators": [],
                "pc": 954,
                "type": "function"
            },
            "redstone.utils.shortint._shortint_to_bytes.Args": {
                "members": {
                    "num": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "index": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "res": {
                        "offset": 2,
                        "cairo_type": "redstone.utils.array.Array"
                    }
                },
                "full_name": "redstone.utils.shortint._shortint_to_bytes.Args",
                "size": 4,
                "type": "struct"
            },
            "redstone.utils.shortint._shortint_to_bytes.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.shortint._shortint_to_bytes.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.shortint._shortint_to_bytes.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "redstone.utils.shortint._shortint_to_bytes.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "redstone.utils.shortint.array_new": {
                "destination": "redstone.utils.array.array_new",
                "type": "alias"
            },
            "redstone.utils.shortint.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "redstone.utils.shortint.shortint_to_bytes": {
                "decorators": [],
                "pc": 931,
                "type": "function"
            },
            "redstone.utils.shortint.shortint_to_bytes.Args": {
                "members": {
                    "num": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.shortint.shortint_to_bytes.Args",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.shortint.shortint_to_bytes.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "redstone.utils.shortint.shortint_to_bytes.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "redstone.utils.shortint.shortint_to_bytes.Return": {
                "cairo_type": "redstone.utils.array.Array",
                "type": "type_definition"
            },
            "redstone.utils.shortint.shortint_to_bytes.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "redstone.utils.shortint.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "members": {},
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "value": -106710729501573572985208420194530329073740042555888586719234,
                "type": "const"
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bitwise.bitwise_and": {
                "decorators": [],
                "pc": 843,
                "type": "function"
            },
            "starkware.cairo.common.bitwise.bitwise_and.Args": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.bitwise.bitwise_and.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_and.ImplicitArgs": {
                "members": {
                    "bitwise_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    }
                },
                "full_name": "starkware.cairo.common.bitwise.bitwise_and.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_and.Return": {
                "cairo_type": "(x_and_y: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.bitwise.bitwise_and.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.bool.FALSE": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.bool.TRUE": {
                "value": 1,
                "type": "const"
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "x_and_y": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "x_xor_y": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "x_or_y": {
                        "offset": 4,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "members": {
                    "p": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
                    },
                    "q": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
                    },
                    "m": {
                        "offset": 4,
                        "cairo_type": "felt"
                    },
                    "r": {
                        "offset": 5,
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "result": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "members": {
                    "input": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState"
                    },
                    "output": {
                        "offset": 8,
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "members": {
                    "pub_key": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "message": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_keccak.keccak.BLOCK_SIZE": {
                "destination": "starkware.cairo.common.cairo_keccak.packed_keccak.BLOCK_SIZE",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.BYTES_IN_WORD": {
                "value": 8,
                "type": "const"
            },
            "starkware.cairo.common.cairo_keccak.keccak.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.KECCAK_CAPACITY_IN_WORDS": {
                "value": 8,
                "type": "const"
            },
            "starkware.cairo.common.cairo_keccak.keccak.KECCAK_FULL_RATE_IN_BYTES": {
                "value": 136,
                "type": "const"
            },
            "starkware.cairo.common.cairo_keccak.keccak.KECCAK_FULL_RATE_IN_WORDS": {
                "value": 17,
                "type": "const"
            },
            "starkware.cairo.common.cairo_keccak.keccak.KECCAK_STATE_SIZE_FELTS": {
                "value": 25,
                "type": "const"
            },
            "starkware.cairo.common.cairo_keccak.keccak.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.memset": {
                "destination": "starkware.cairo.common.memset.memset",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.packed_keccak_func": {
                "destination": "starkware.cairo.common.cairo_keccak.packed_keccak.packed_keccak_func",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.uint256_reverse_endian": {
                "destination": "starkware.cairo.common.uint256.uint256_reverse_endian",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.keccak.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.packed_keccak.ALL_ONES": {
                "value": -106710729501573572985208420194530329073740042555888586719234,
                "type": "const"
            },
            "starkware.cairo.common.cairo_keccak.packed_keccak.BLOCK_SIZE": {
                "value": 3,
                "type": "const"
            },
            "starkware.cairo.common.cairo_keccak.packed_keccak.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.packed_keccak.SHIFTS": {
                "value": 340282366920938463481821351505477763073,
                "type": "const"
            },
            "starkware.cairo.common.cairo_keccak.packed_keccak.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_keccak.packed_keccak.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.bigint.BASE": {
                "destination": "starkware.cairo.common.cairo_secp.constants.BASE",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.bigint.BigInt3": {
                "members": {
                    "d0": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "d1": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "d2": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.RC_BOUND": {
                "destination": "starkware.cairo.common.math_cmp.RC_BOUND",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.bigint.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3": {
                "members": {
                    "d0": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "d1": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "d2": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt5": {
                "members": {
                    "d0": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "d1": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "d2": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "d3": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "d4": {
                        "offset": 4,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt5",
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.bigint.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_mul": {
                "decorators": [],
                "pc": 864,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_mul.Args": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "y": {
                        "offset": 3,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.bigint_mul.Args",
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_mul.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.cairo_secp.bigint.bigint_mul.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_mul.Return": {
                "cairo_type": "(res: starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt5)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_mul.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256": {
                "decorators": [],
                "pc": 890,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.A_BOUND": {
                "value": 70368744177664,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.Args": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.D2_SHIFT": {
                "value": 17592186044416,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.low": {
                "full_name": "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 82,
                            "offset": 0
                        },
                        "value": "[cast([fp + (-6)], felt*)]",
                        "pc": 890
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.x": {
                "full_name": "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256.x",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 82,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                        "pc": 890
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3": {
                "decorators": [],
                "pc": 878,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.Args": {
                "members": {},
                "full_name": "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.Args",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.MAX_SUM": {
                "value": 232113757366008801543585789,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.Return": {
                "cairo_type": "(res: starkware.cairo.common.cairo_secp.bigint.BigInt3)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.res": {
                "full_name": "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3.res",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 81,
                            "offset": 0
                        },
                        "value": "[cast(ap + 5, starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                        "pc": 878
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint": {
                "decorators": [],
                "pc": 912,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint.Args": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.uint256.Uint256"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint.D1_HIGH_BOUND": {
                "value": 17592186044416,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint.D1_LOW_BOUND": {
                "value": 4398046511104,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint.Return": {
                "cairo_type": "(res: starkware.cairo.common.cairo_secp.bigint.BigInt3)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.bigint.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.constants.BASE": {
                "value": 77371252455336267181195264,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.constants.BETA": {
                "value": 7,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.constants.N0": {
                "value": 10428087374290690730508609,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.constants.N1": {
                "value": 77371252455330678278691517,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.constants.N2": {
                "value": 19342813113834066795298815,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.constants.P0": {
                "value": 77371252455336262886226991,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.constants.P1": {
                "value": 77371252455336267181195263,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.constants.P2": {
                "value": 19342813113834066795298815,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.constants.SECP_REM": {
                "value": 4294968273,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.BigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.ec.EcPoint": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "y": {
                        "offset": 3,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.UnreducedBigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope": {
                "decorators": [],
                "pc": 1715,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.Args": {
                "members": {
                    "point": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.Args",
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.Return": {
                "cairo_type": "(slope: starkware.cairo.common.cairo_secp.bigint.BigInt3)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.point": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.compute_doubling_slope.point",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 133,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                        "pc": 1715
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_slope": {
                "decorators": [],
                "pc": 1759,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_slope.Args": {
                "members": {
                    "point0": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    },
                    "point1": {
                        "offset": 6,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.compute_slope.Args",
                "size": 12,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_slope.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.compute_slope.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_slope.Return": {
                "cairo_type": "(slope: starkware.cairo.common.cairo_secp.bigint.BigInt3)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_slope.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_slope.point0": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.compute_slope.point0",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 134,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-14), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                        "pc": 1759
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.compute_slope.point1": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.compute_slope.point1",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 134,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                        "pc": 1759
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_add": {
                "decorators": [],
                "pc": 1943,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_add.Args": {
                "members": {
                    "point0": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    },
                    "point1": {
                        "offset": 6,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_add.Args",
                "size": 12,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_add.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_add.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_add.Return": {
                "cairo_type": "(res: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_add.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_double": {
                "decorators": [],
                "pc": 1783,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_double.Args": {
                "members": {
                    "point": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_double.Args",
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_double.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_double.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_double.Return": {
                "cairo_type": "(res: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_double.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_double.point": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_double.point",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 135,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                        "pc": 1783
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_double.slope": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_double.slope",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 135,
                            "offset": 94
                        },
                        "value": "[cast(ap + (-3), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                        "pc": 1806
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul": {
                "decorators": [],
                "pc": 2100,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul.Args": {
                "members": {
                    "point": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    },
                    "scalar": {
                        "offset": 6,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_mul.Args",
                "size": 9,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_mul.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul.Return": {
                "cairo_type": "(res: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul.SIZEOF_LOCALS": {
                "value": 18,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul_inner": {
                "decorators": [],
                "pc": 1999,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.Args": {
                "members": {
                    "point": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    },
                    "scalar": {
                        "offset": 6,
                        "cairo_type": "felt"
                    },
                    "m": {
                        "offset": 7,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.Args",
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.Return": {
                "cairo_type": "(pow2: starkware.cairo.common.cairo_secp.ec.EcPoint, res: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.SIZEOF_LOCALS": {
                "value": 6,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.odd": {
                "pc": 2050,
                "type": "label"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.scalar": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_mul_inner.scalar",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 142,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 1999
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_negate": {
                "decorators": [],
                "pc": 1699,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_negate.Args": {
                "members": {
                    "point": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_negate.Args",
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_negate.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_negate.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_negate.Return": {
                "cairo_type": "(point: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_negate.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.ec_negate.point": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.ec_negate.point",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 132,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                        "pc": 1699
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.fast_ec_add": {
                "decorators": [],
                "pc": 1856,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.Args": {
                "members": {
                    "point0": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    },
                    "point1": {
                        "offset": 6,
                        "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.fast_ec_add.Args",
                "size": 12,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.ec.fast_ec_add.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.Return": {
                "cairo_type": "(res: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.point0": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.fast_ec_add.point0",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 136,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-14), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                        "pc": 1856
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.point1": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.fast_ec_add.point1",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 136,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.ec.EcPoint*)]",
                        "pc": 1856
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.fast_ec_add.slope": {
                "full_name": "starkware.cairo.common.cairo_secp.ec.fast_ec_add.slope",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 136,
                            "offset": 74
                        },
                        "value": "[cast(ap + (-3), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                        "pc": 1899
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.ec.is_zero": {
                "destination": "starkware.cairo.common.cairo_secp.field.is_zero",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.ec.nondet_bigint3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.ec.unreduced_mul": {
                "destination": "starkware.cairo.common.cairo_secp.field.unreduced_mul",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.ec.unreduced_sqr": {
                "destination": "starkware.cairo.common.cairo_secp.field.unreduced_sqr",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.ec.verify_zero": {
                "destination": "starkware.cairo.common.cairo_secp.field.verify_zero",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.BASE": {
                "destination": "starkware.cairo.common.cairo_secp.constants.BASE",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.BigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.P0": {
                "destination": "starkware.cairo.common.cairo_secp.constants.P0",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.P1": {
                "destination": "starkware.cairo.common.cairo_secp.constants.P1",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.P2": {
                "destination": "starkware.cairo.common.cairo_secp.constants.P2",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.SECP_REM": {
                "destination": "starkware.cairo.common.cairo_secp.constants.SECP_REM",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.UnreducedBigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.is_zero": {
                "decorators": [],
                "pc": 1610,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.field.is_zero.Args": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.is_zero.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.is_zero.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.is_zero.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.is_zero.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.field.is_zero.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.field.is_zero.x": {
                "full_name": "starkware.cairo.common.cairo_secp.field.is_zero.x",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 129,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                        "pc": 1610
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.field.nondet_bigint3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.field.reduce": {
                "decorators": [],
                "pc": 1646,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.field.reduce.Args": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.reduce.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.reduce.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.reduce.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.reduce.Return": {
                "cairo_type": "(reduced_x: starkware.cairo.common.cairo_secp.bigint.BigInt3)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.field.reduce.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.field.reduce.x": {
                "full_name": "starkware.cairo.common.cairo_secp.field.reduce.x",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 130,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3*)]",
                        "pc": 1646
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_mul": {
                "decorators": [],
                "pc": 1551,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_mul.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "b": {
                        "offset": 3,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.unreduced_mul.Args",
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_mul.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.cairo_secp.field.unreduced_mul.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_mul.Return": {
                "cairo_type": "(res_low: starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_mul.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_sqr": {
                "decorators": [],
                "pc": 1571,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_sqr.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.unreduced_sqr.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_sqr.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.cairo_secp.field.unreduced_sqr.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_sqr.Return": {
                "cairo_type": "(res_low: starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.field.unreduced_sqr.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.field.validate_reduced_field_element": {
                "decorators": [],
                "pc": 1659,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.field.validate_reduced_field_element.Args": {
                "members": {
                    "val": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.validate_reduced_field_element.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.validate_reduced_field_element.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.validate_reduced_field_element.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.validate_reduced_field_element.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.field.validate_reduced_field_element.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.field.verify_zero": {
                "decorators": [],
                "pc": 1587,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.field.verify_zero.Args": {
                "members": {
                    "val": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.verify_zero.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.verify_zero.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.field.verify_zero.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.field.verify_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.field.verify_zero.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.field.verify_zero.q": {
                "full_name": "starkware.cairo.common.cairo_secp.field.verify_zero.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 128,
                            "offset": 0
                        },
                        "value": "[cast(ap, felt*)]",
                        "pc": 1587
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.field.verify_zero.val": {
                "full_name": "starkware.cairo.common.cairo_secp.field.verify_zero.val",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 128,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3*)]",
                        "pc": 1587
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.signature.BASE": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.BASE",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.BETA": {
                "destination": "starkware.cairo.common.cairo_secp.constants.BETA",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.BigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.EcPoint": {
                "destination": "starkware.cairo.common.cairo_secp.ec.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.N0": {
                "destination": "starkware.cairo.common.cairo_secp.constants.N0",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.N1": {
                "destination": "starkware.cairo.common.cairo_secp.constants.N1",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.N2": {
                "destination": "starkware.cairo.common.cairo_secp.constants.N2",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.RC_BOUND": {
                "destination": "starkware.cairo.common.math_cmp.RC_BOUND",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.UnreducedBigInt3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.bigint_mul": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.bigint_mul",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.bigint_to_uint256": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.bigint_to_uint256",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.div_mod_n": {
                "decorators": [],
                "pc": 2193,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.signature.div_mod_n.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "b": {
                        "offset": 3,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.signature.div_mod_n.Args",
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.signature.div_mod_n.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.signature.div_mod_n.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.signature.div_mod_n.Return": {
                "cairo_type": "(res: starkware.cairo.common.cairo_secp.bigint.BigInt3)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.signature.div_mod_n.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.signature.div_mod_n.a": {
                "full_name": "starkware.cairo.common.cairo_secp.signature.div_mod_n.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 154,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-8), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                        "pc": 2193
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.signature.div_mod_n.b": {
                "full_name": "starkware.cairo.common.cairo_secp.signature.div_mod_n.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 154,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), starkware.cairo.common.cairo_secp.bigint.BigInt3*)]",
                        "pc": 2193
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.signature.ec_add": {
                "destination": "starkware.cairo.common.cairo_secp.ec.ec_add",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.ec_mul": {
                "destination": "starkware.cairo.common.cairo_secp.ec.ec_mul",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.ec_negate": {
                "destination": "starkware.cairo.common.cairo_secp.ec.ec_negate",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.finalize_keccak": {
                "destination": "starkware.cairo.common.cairo_keccak.keccak.finalize_keccak",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.get_generator_point": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 2180,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.signature.get_generator_point.Args": {
                "members": {},
                "full_name": "starkware.cairo.common.cairo_secp.signature.get_generator_point.Args",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.signature.get_generator_point.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.cairo_secp.signature.get_generator_point.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.signature.get_generator_point.Return": {
                "cairo_type": "(point: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.signature.get_generator_point.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.signature.get_point_from_x": {
                "decorators": [],
                "pc": 2258,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.signature.get_point_from_x.Args": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "v": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.signature.get_point_from_x.Args",
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.signature.get_point_from_x.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.signature.get_point_from_x.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.signature.get_point_from_x.Return": {
                "cairo_type": "(point: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.signature.get_point_from_x.SIZEOF_LOCALS": {
                "value": 6,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.signature.get_point_from_x.v": {
                "full_name": "starkware.cairo.common.cairo_secp.signature.get_point_from_x.v",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 155,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 2258
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.signature.get_point_from_x.x_cube": {
                "full_name": "starkware.cairo.common.cairo_secp.signature.get_point_from_x.x_cube",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 155,
                            "offset": 90
                        },
                        "value": "[cast(ap + (-3), starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3*)]",
                        "pc": 2283
                    },
                    {
                        "ap_tracking_data": {
                            "group": 155,
                            "offset": 90
                        },
                        "value": "[cast(fp, starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3*)]",
                        "pc": 2286
                    }
                ],
                "cairo_type": "starkware.cairo.common.cairo_secp.bigint.UnreducedBigInt3",
                "type": "reference"
            },
            "starkware.cairo.common.cairo_secp.signature.keccak_uint256s_bigend": {
                "destination": "starkware.cairo.common.cairo_keccak.keccak.keccak_uint256s_bigend",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.nondet_bigint3": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.nondet_bigint3",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.recover_public_key": {
                "decorators": [],
                "pc": 2324,
                "type": "function"
            },
            "starkware.cairo.common.cairo_secp.signature.recover_public_key.Args": {
                "members": {
                    "msg_hash": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "r": {
                        "offset": 3,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "s": {
                        "offset": 6,
                        "cairo_type": "starkware.cairo.common.cairo_secp.bigint.BigInt3"
                    },
                    "v": {
                        "offset": 9,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.signature.recover_public_key.Args",
                "size": 10,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.signature.recover_public_key.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.cairo_secp.signature.recover_public_key.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_secp.signature.recover_public_key.Return": {
                "cairo_type": "(public_key_point: starkware.cairo.common.cairo_secp.ec.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.cairo_secp.signature.recover_public_key.SIZEOF_LOCALS": {
                "value": 15,
                "type": "const"
            },
            "starkware.cairo.common.cairo_secp.signature.reduce": {
                "destination": "starkware.cairo.common.cairo_secp.field.reduce",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.uint256_to_bigint": {
                "destination": "starkware.cairo.common.cairo_secp.bigint.uint256_to_bigint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.unreduced_mul": {
                "destination": "starkware.cairo.common.cairo_secp.field.unreduced_mul",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.unreduced_sqr": {
                "destination": "starkware.cairo.common.cairo_secp.field.unreduced_sqr",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.validate_reduced_field_element": {
                "destination": "starkware.cairo.common.cairo_secp.field.validate_reduced_field_element",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_secp.signature.verify_zero": {
                "destination": "starkware.cairo.common.cairo_secp.field.verify_zero",
                "type": "alias"
            },
            "starkware.cairo.common.default_dict.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize": {
                "decorators": [],
                "pc": 792,
                "type": "function"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize.Args": {
                "members": {
                    "dict_accesses_start": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "dict_accesses_end": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "default_value": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.default_dict.default_dict_finalize.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.default_dict.default_dict_finalize.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize.Return": {
                "cairo_type": "(squashed_dict_start: starkware.cairo.common.dict_access.DictAccess*, squashed_dict_end: starkware.cairo.common.dict_access.DictAccess*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize.SIZEOF_LOCALS": {
                "value": 3,
                "type": "const"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize_inner": {
                "decorators": [],
                "pc": 813,
                "type": "function"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize_inner.Args": {
                "members": {
                    "dict_accesses_start": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "n_accesses": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "default_value": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.default_dict.default_dict_finalize_inner.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize_inner.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.default_dict.default_dict_finalize_inner.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize_inner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.default_dict.default_dict_finalize_inner.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.default_dict.default_dict_new": {
                "decorators": [],
                "pc": 789,
                "type": "function"
            },
            "starkware.cairo.common.default_dict.default_dict_new.Args": {
                "members": {
                    "default_value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.default_dict.default_dict_new.Args",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.default_dict.default_dict_new.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.default_dict.default_dict_new.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.default_dict.default_dict_new.Return": {
                "cairo_type": "(res: starkware.cairo.common.dict_access.DictAccess*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.default_dict.default_dict_new.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.default_dict.default_dict_new.default_value": {
                "full_name": "starkware.cairo.common.default_dict.default_dict_new.default_value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 70,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 789
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.default_dict.dict_squash": {
                "destination": "starkware.cairo.common.dict.dict_squash",
                "type": "alias"
            },
            "starkware.cairo.common.dict.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.cairo.common.dict.dict_new": {
                "decorators": [],
                "pc": 757,
                "type": "function"
            },
            "starkware.cairo.common.dict.dict_new.Args": {
                "members": {},
                "full_name": "starkware.cairo.common.dict.dict_new.Args",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.dict.dict_new.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.dict.dict_new.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.dict.dict_new.Return": {
                "cairo_type": "(res: starkware.cairo.common.dict_access.DictAccess*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.dict.dict_new.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.dict.dict_read": {
                "decorators": [],
                "pc": 760,
                "type": "function"
            },
            "starkware.cairo.common.dict.dict_read.Args": {
                "members": {
                    "key": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.dict.dict_read.Args",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.dict.dict_read.ImplicitArgs": {
                "members": {
                    "dict_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "starkware.cairo.common.dict.dict_read.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.dict.dict_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.dict.dict_read.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "starkware.cairo.common.dict.dict_read.dict_ptr": {
                "full_name": "starkware.cairo.common.dict.dict_read.dict_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 66,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), starkware.cairo.common.dict_access.DictAccess**)]",
                        "pc": 760
                    },
                    {
                        "ap_tracking_data": {
                            "group": 66,
                            "offset": 1
                        },
                        "value": "cast([fp + (-4)] + 3, starkware.cairo.common.dict_access.DictAccess*)",
                        "pc": 765
                    }
                ],
                "cairo_type": "starkware.cairo.common.dict_access.DictAccess*",
                "type": "reference"
            },
            "starkware.cairo.common.dict.dict_read.key": {
                "full_name": "starkware.cairo.common.dict.dict_read.key",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 66,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 760
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.dict.dict_read.value": {
                "full_name": "starkware.cairo.common.dict.dict_read.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 66,
                            "offset": 1
                        },
                        "value": "[cast(fp, felt*)]",
                        "pc": 762
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.dict.dict_squash": {
                "decorators": [],
                "pc": 774,
                "type": "function"
            },
            "starkware.cairo.common.dict.dict_squash.Args": {
                "members": {
                    "dict_accesses_start": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "dict_accesses_end": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "starkware.cairo.common.dict.dict_squash.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict.dict_squash.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.dict.dict_squash.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.dict.dict_squash.Return": {
                "cairo_type": "(squashed_dict_start: starkware.cairo.common.dict_access.DictAccess*, squashed_dict_end: starkware.cairo.common.dict_access.DictAccess*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.dict.dict_squash.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "starkware.cairo.common.dict.dict_squash.dict_accesses_end": {
                "full_name": "starkware.cairo.common.dict.dict_squash.dict_accesses_end",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 68,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), starkware.cairo.common.dict_access.DictAccess**)]",
                        "pc": 774
                    }
                ],
                "cairo_type": "starkware.cairo.common.dict_access.DictAccess*",
                "type": "reference"
            },
            "starkware.cairo.common.dict.dict_squash.squashed_dict_end": {
                "full_name": "starkware.cairo.common.dict.dict_squash.squashed_dict_end",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 69,
                            "offset": 0
                        },
                        "value": "[cast(ap + (-1), starkware.cairo.common.dict_access.DictAccess**)]",
                        "pc": 785
                    }
                ],
                "cairo_type": "starkware.cairo.common.dict_access.DictAccess*",
                "type": "reference"
            },
            "starkware.cairo.common.dict.dict_squash.squashed_dict_start": {
                "full_name": "starkware.cairo.common.dict.dict_squash.squashed_dict_start",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 68,
                            "offset": 4
                        },
                        "value": "[cast(ap + (-1), starkware.cairo.common.dict_access.DictAccess**)]",
                        "pc": 778
                    },
                    {
                        "ap_tracking_data": {
                            "group": 68,
                            "offset": 4
                        },
                        "value": "[cast(fp, starkware.cairo.common.dict_access.DictAccess**)]",
                        "pc": 779
                    }
                ],
                "cairo_type": "starkware.cairo.common.dict_access.DictAccess*",
                "type": "reference"
            },
            "starkware.cairo.common.dict.dict_write": {
                "decorators": [],
                "pc": 769,
                "type": "function"
            },
            "starkware.cairo.common.dict.dict_write.Args": {
                "members": {
                    "key": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "new_value": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.dict.dict_write.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict.dict_write.ImplicitArgs": {
                "members": {
                    "dict_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "starkware.cairo.common.dict.dict_write.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.dict.dict_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.dict.dict_write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.dict.dict_write.dict_ptr": {
                "full_name": "starkware.cairo.common.dict.dict_write.dict_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 67,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), starkware.cairo.common.dict_access.DictAccess**)]",
                        "pc": 769
                    },
                    {
                        "ap_tracking_data": {
                            "group": 67,
                            "offset": 0
                        },
                        "value": "cast([fp + (-5)] + 3, starkware.cairo.common.dict_access.DictAccess*)",
                        "pc": 771
                    }
                ],
                "cairo_type": "starkware.cairo.common.dict_access.DictAccess*",
                "type": "reference"
            },
            "starkware.cairo.common.dict.dict_write.key": {
                "full_name": "starkware.cairo.common.dict.dict_write.key",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 67,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 769
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.dict.dict_write.new_value": {
                "full_name": "starkware.cairo.common.dict.dict_write.new_value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 67,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 769
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.dict.squash_dict": {
                "destination": "starkware.cairo.common.squash_dict.squash_dict",
                "type": "alias"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "members": {
                    "key": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "prev_value": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "new_value": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "members": {
                    "hash_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    }
                },
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.keccak.KeccakState": {
                "members": {
                    "start_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "end_ptr": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.cairo.common.keccak.KeccakState",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.keccak.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "starkware.cairo.common.keccak.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "starkware.cairo.common.keccak.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "starkware.cairo.common.keccak.unsafe_keccak": {
                "decorators": [],
                "pc": 2410,
                "type": "function"
            },
            "starkware.cairo.common.keccak.unsafe_keccak.Args": {
                "members": {
                    "data": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "length": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.keccak.unsafe_keccak.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.keccak.unsafe_keccak.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.keccak.unsafe_keccak.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.keccak.unsafe_keccak.Return": {
                "cairo_type": "(low: felt, high: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.keccak.unsafe_keccak.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "starkware.cairo.common.keccak.unsafe_keccak.data": {
                "full_name": "starkware.cairo.common.keccak.unsafe_keccak.data",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 162,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt**)]",
                        "pc": 2410
                    }
                ],
                "cairo_type": "felt*",
                "type": "reference"
            },
            "starkware.cairo.common.keccak.unsafe_keccak.high": {
                "full_name": "starkware.cairo.common.keccak.unsafe_keccak.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 162,
                            "offset": 2
                        },
                        "value": "[cast(fp + 1, felt*)]",
                        "pc": 2412
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.keccak.unsafe_keccak.length": {
                "full_name": "starkware.cairo.common.keccak.unsafe_keccak.length",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 162,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 2410
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.keccak.unsafe_keccak.low": {
                "full_name": "starkware.cairo.common.keccak.unsafe_keccak.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 162,
                            "offset": 2
                        },
                        "value": "[cast(fp, felt*)]",
                        "pc": 2412
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.keccak.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "members": {
                    "s0": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "s1": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "s2": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "s3": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "s4": {
                        "offset": 4,
                        "cairo_type": "felt"
                    },
                    "s5": {
                        "offset": 5,
                        "cairo_type": "felt"
                    },
                    "s6": {
                        "offset": 6,
                        "cairo_type": "felt"
                    },
                    "s7": {
                        "offset": 7,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 45,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "value": 5316911983139663491615228241121378304,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "value": 340282366920938463463374607431768211456,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "value": "[cast([fp + (-4)] + 1, felt*)]",
                        "pc": 45
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "value": "[cast([fp + (-4)], felt*)]",
                        "pc": 45
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 45
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_in_range": {
                "decorators": [],
                "pc": 34,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_in_range.Args": {
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "lower": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "upper": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_in_range.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_in_range.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_in_range.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_in_range.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_in_range.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 13,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "b": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 58,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "b": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "value": 5316911983139663648412552867652567041,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "value": 3544607988759775765608368578435044694,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 58
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 58
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), felt*)]",
                        "pc": 58
                    },
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 8
                        },
                        "value": "cast([fp + (-5)] + 4, felt)",
                        "pc": 68
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 82,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 94,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt": {
                "decorators": [],
                "pc": 18,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "b": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_lt.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_lt.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 103,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "b": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 103
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 103
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 9
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn_le": {
                "decorators": [],
                "pc": 25,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn_le.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "b": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.unsigned_div_rem": {
                "decorators": [],
                "pc": 114,
                "type": "function"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Args": {
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "div": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Return": {
                "cairo_type": "(q: felt, r: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.unsigned_div_rem.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.unsigned_div_rem.div": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.div",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 114
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.q": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "value": "[cast([fp + (-5)] + 1, felt*)]",
                        "pc": 114
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.r": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.r",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "value": "[cast([fp + (-5)], felt*)]",
                        "pc": 114
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.value": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 114
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "value": 340282366920938463463374607431768211456,
                "type": "const"
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_not_zero": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 192,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_not_zero.Args": {
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.math_cmp.is_not_zero.Args",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_not_zero.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.math_cmp.is_not_zero.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_not_zero.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_not_zero.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.squash_dict.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.cairo.common.squash_dict.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.squash_dict.squash_dict": {
                "decorators": [],
                "pc": 657,
                "type": "function"
            },
            "starkware.cairo.common.squash_dict.squash_dict.Args": {
                "members": {
                    "dict_accesses": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "dict_accesses_end": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "squashed_dict": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    }
                },
                "full_name": "starkware.cairo.common.squash_dict.squash_dict.Args",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.squash_dict.squash_dict.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.squash_dict.squash_dict.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.squash_dict.squash_dict.Return": {
                "cairo_type": "(squashed_dict: starkware.cairo.common.dict_access.DictAccess*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.squash_dict.squash_dict.SIZEOF_LOCALS": {
                "value": 3,
                "type": "const"
            },
            "starkware.cairo.common.squash_dict.squash_dict.big_keys": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict.big_keys",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 59,
                            "offset": 3
                        },
                        "value": "[cast(fp + 2, felt*)]",
                        "pc": 665
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict.dict_accesses": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict.dict_accesses",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 59,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), starkware.cairo.common.dict_access.DictAccess**)]",
                        "pc": 657
                    }
                ],
                "cairo_type": "starkware.cairo.common.dict_access.DictAccess*",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict.first_key": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict.first_key",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 59,
                            "offset": 3
                        },
                        "value": "[cast(fp + 1, felt*)]",
                        "pc": 665
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict.n_accesses": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict.n_accesses",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 59,
                            "offset": 4
                        },
                        "value": "[cast(ap + (-1), felt*)]",
                        "pc": 667
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict.ptr_diff": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict.ptr_diff",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 59,
                            "offset": 3
                        },
                        "value": "[cast(fp, felt*)]",
                        "pc": 660
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner": {
                "decorators": [],
                "pc": 685,
                "type": "function"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.Args": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "dict_accesses": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "dict_accesses_end_minus1": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    },
                    "key": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "remaining_accesses": {
                        "offset": 4,
                        "cairo_type": "felt"
                    },
                    "squashed_dict": {
                        "offset": 5,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "big_keys": {
                        "offset": 6,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.Args",
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.ImplicitArgs": {
                "members": {},
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.ImplicitArgs",
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.LoopLocals": {
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "access_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.dict_access.DictAccess*"
                    },
                    "range_check_ptr": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.LoopLocals",
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.LoopTemps": {
                "members": {
                    "index_delta_minus1": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "index_delta": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "ptr_delta": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "should_continue": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.LoopTemps",
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.Return": {
                "cairo_type": "(range_check_ptr: felt, squashed_dict: starkware.cairo.common.dict_access.DictAccess*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.loop": {
                "pc": 700,
                "type": "label"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.loop_temps": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.loop_temps",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 61,
                            "offset": 7
                        },
                        "value": "cast(ap, starkware.cairo.common.squash_dict.squash_dict_inner.LoopTemps*)",
                        "pc": 700
                    }
                ],
                "cairo_type": "starkware.cairo.common.squash_dict.squash_dict_inner.LoopTemps*",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.n_used_accesses": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.n_used_accesses",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 62,
                            "offset": 2
                        },
                        "value": "[cast(ap + (-1), felt*)]",
                        "pc": 716
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.next_key": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.next_key",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 62,
                            "offset": 3
                        },
                        "value": "[cast(ap, felt*)]",
                        "pc": 725
                    },
                    {
                        "ap_tracking_data": {
                            "group": 62,
                            "offset": 10
                        },
                        "value": "[cast(ap + (-1), felt*)]",
                        "pc": 738
                    },
                    {
                        "ap_tracking_data": {
                            "group": 62,
                            "offset": 33
                        },
                        "value": "[cast(ap + (-1), felt*)]",
                        "pc": 750
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.range_check_ptr": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 61,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-9), felt*)]",
                        "pc": 685
                    },
                    {
                        "ap_tracking_data": {
                            "group": 62,
                            "offset": 2
                        },
                        "value": "cast([ap + (-3)] + 1, felt)",
                        "pc": 717
                    },
                    {
                        "ap_tracking_data": {
                            "group": 62,
                            "offset": 7
                        },
                        "value": "[cast(ap + (-1), felt*)]",
                        "pc": 735
                    },
                    {
                        "ap_tracking_data": {
                            "group": 62,
                            "offset": 30
                        },
                        "value": "[cast(ap + (-1), felt*)]",
                        "pc": 747
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.should_skip_loop": {
                "full_name": "starkware.cairo.common.squash_dict.squash_dict_inner.should_skip_loop",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 61,
                            "offset": 7
                        },
                        "value": "[cast(fp + 1, felt*)]",
                        "pc": 698
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.squash_dict.squash_dict_inner.skip_loop": {
                "pc": 713,
                "type": "label"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "value": 340282366920938463463374607431768211455,
                "type": "const"
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "value": 18446744073709551616,
                "type": "const"
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "value": 340282366920938463463374607431768211456,
                "type": "const"
            },
            "starkware.cairo.common.uint256.Uint256": {
                "members": {
                    "low": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "high": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.uint256_and": {
                "decorators": [],
                "pc": 849,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_and.Args": {
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.uint256.Uint256"
                    },
                    "b": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.uint256.Uint256"
                    }
                },
                "full_name": "starkware.cairo.common.uint256.uint256_and.Args",
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_and.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "bitwise_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    }
                },
                "full_name": "starkware.cairo.common.uint256.uint256_and.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_and.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_and.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.usort.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "starkware.cairo.common.usort.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "starkware.cairo.common.usort.assert_nn": {
                "destination": "starkware.cairo.common.math.assert_nn",
                "type": "alias"
            },
            "starkware.cairo.common.usort.usort": {
                "decorators": [],
                "pc": 200,
                "type": "function"
            },
            "starkware.cairo.common.usort.usort.Args": {
                "members": {
                    "input_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "input": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.cairo.common.usort.usort.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.usort.usort.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.usort.usort.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.usort.usort.Return": {
                "cairo_type": "(output_len: felt, output: felt*, multiplicities: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.usort.usort.SIZEOF_LOCALS": {
                "value": 3,
                "type": "const"
            },
            "starkware.cairo.common.usort.usort.input": {
                "full_name": "starkware.cairo.common.usort.usort.input",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt**)]",
                        "pc": 200
                    }
                ],
                "cairo_type": "felt*",
                "type": "reference"
            },
            "starkware.cairo.common.usort.usort.input_len": {
                "full_name": "starkware.cairo.common.usort.usort.input_len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 200
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.usort.usort.multiplicities": {
                "full_name": "starkware.cairo.common.usort.usort.multiplicities",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 3
                        },
                        "value": "[cast(fp + 2, felt**)]",
                        "pc": 202
                    }
                ],
                "cairo_type": "felt*",
                "type": "reference"
            },
            "starkware.cairo.common.usort.usort.output": {
                "full_name": "starkware.cairo.common.usort.usort.output",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 3
                        },
                        "value": "[cast(fp + 1, felt**)]",
                        "pc": 202
                    },
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "value": "[cast(ap + (-1), felt**)]",
                        "pc": 213
                    }
                ],
                "cairo_type": "felt*",
                "type": "reference"
            },
            "starkware.cairo.common.usort.usort.output_len": {
                "full_name": "starkware.cairo.common.usort.usort.output_len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 3
                        },
                        "value": "[cast(fp, felt*)]",
                        "pc": 202
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.usort.verify_multiplicity": {
                "decorators": [],
                "pc": 254,
                "type": "function"
            },
            "starkware.cairo.common.usort.verify_multiplicity.Args": {
                "members": {
                    "multiplicity": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "input_len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "input": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    },
                    "value": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.usort.verify_multiplicity.Args",
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.usort.verify_multiplicity.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.usort.verify_multiplicity.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.usort.verify_multiplicity.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.usort.verify_multiplicity.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "starkware.cairo.common.usort.verify_multiplicity.next_item_index": {
                "full_name": "starkware.cairo.common.usort.verify_multiplicity.next_item_index",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 1
                        },
                        "value": "[cast(fp, felt*)]",
                        "pc": 263
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.usort.verify_usort": {
                "decorators": [],
                "pc": 218,
                "type": "function"
            },
            "starkware.cairo.common.usort.verify_usort.Args": {
                "members": {
                    "input_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "input": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    },
                    "total_visited": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "multiplicities": {
                        "offset": 3,
                        "cairo_type": "felt*"
                    },
                    "prev": {
                        "offset": 4,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.cairo.common.usort.verify_usort.Args",
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.usort.verify_usort.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "output": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.cairo.common.usort.verify_usort.ImplicitArgs",
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.usort.verify_usort.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.usort.verify_usort.SIZEOF_LOCALS": {
                "value": 2,
                "type": "const"
            },
            "starkware.cairo.common.usort.verify_usort.value": {
                "full_name": "starkware.cairo.common.usort.verify_usort.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 3
                        },
                        "value": "[cast(fp, felt*)]",
                        "pc": 227
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "value": -106710729501573572985208420194530329073740042555888586719489,
                "type": "const"
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "value": 256,
                "type": "const"
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 129,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "members": {
                    "addr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 129
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 2
                        },
                        "value": "[cast(ap + (-1), felt*)]",
                        "pc": 149
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 1
                        },
                        "value": "[cast(ap + (-1), felt*)]",
                        "pc": 131
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "value": 20853273475220472486191784820,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest"
                    },
                    "response": {
                        "offset": 5,
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "contract_address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "function_selector": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "calldata_size": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "calldata": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "members": {
                    "retdata_size": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "retdata": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "value": 21167594061783206823196716140,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "value": 23274015802972845247556842986379118667122,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "value": 75202468540281,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest"
                    },
                    "response": {
                        "offset": 6,
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "class_hash": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "contract_address_salt": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "constructor_calldata_size": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "constructor_calldata": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    },
                    "deploy_from_zero": {
                        "offset": 5,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "members": {
                    "contract_address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "constructor_retdata_size": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "constructor_retdata": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "value": 1280709301550335749748,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "keys_len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "keys": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    },
                    "data_len": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "data": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "value": 1448089106835523001438702345020786,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "value": 24294903732626645868215235778792757751152,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "value": 94901967781393078444254803017658102643,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "value": 6219495360805491471215297013070624192820083,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "value": 1592190833581991703053805829594610833820054387,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "value": 1317029390204112103023,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "value": 1448089128652340074717162277007973,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "members": {
                    "block_number": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "members": {
                    "block_timestamp": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "members": {
                    "caller_address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "members": {
                    "contract_address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "members": {
                    "sequencer_address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "members": {
                    "tx_info": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "members": {
                    "signature_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "signature": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "value": 436233452754198157705746250789557519228244616562,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "value": 92376026794327011772951660,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest"
                    },
                    "response": {
                        "offset": 5,
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "class_hash": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "function_selector": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "calldata_size": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "calldata": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "value": 433017908768303439907196859243777073,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "value": 100890693370601760042082660,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "value": 25828017502874050592466629733,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "to_address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "payload_size": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "payload_ptr": {
                        "offset": 3,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest"
                    },
                    "response": {
                        "offset": 2,
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "value": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "members": {
                    "version": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "account_contract_address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "max_fee": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "signature_len": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "signature": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    },
                    "transaction_hash": {
                        "offset": 5,
                        "cairo_type": "felt"
                    },
                    "chain_id": {
                        "offset": 6,
                        "cairo_type": "felt"
                    },
                    "nonce": {
                        "offset": 7,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp": {
                "decorators": [],
                "pc": 169,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.Args": {
                "members": {},
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.Args",
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.Return": {
                "cairo_type": "(block_timestamp: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr": {
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt**)]",
                        "pc": 169
                    },
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 1
                        },
                        "value": "cast([fp + (-3)] + 2, felt*)",
                        "pc": 172
                    }
                ],
                "cairo_type": "felt*",
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 176,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "members": {
                    "address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt**)]",
                        "pc": 176
                    },
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 1
                        },
                        "value": "cast([fp + (-4)] + 3, felt*)",
                        "pc": 180
                    }
                ],
                "cairo_type": "felt*",
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 184,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "members": {
                    "address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "value": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    }
                },
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), felt**)]",
                        "pc": 184
                    },
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 1
                        },
                        "value": "cast([fp + (-5)] + 3, felt*)",
                        "pc": 189
                    }
                ],
                "cairo_type": "felt*",
                "type": "reference"
            }
        },
        "compiler_version": "0.10.3"
    }
}