// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: p2p/proto/mempool/transaction.proto

package transaction

import (
	common "github.com/starknet-io/starknet-p2pspecs/p2p/proto/common"
	transaction "github.com/starknet-io/starknet-p2pspecs/p2p/proto/transaction"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Doesn't contain L1Handler, as those don't need to be propagated and can be downloaded from L1.
type MempoolTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Txn:
	//
	//	*MempoolTransaction_DeclareV3
	//	*MempoolTransaction_DeployAccountV3
	//	*MempoolTransaction_InvokeV3
	Txn             isMempoolTransaction_Txn `protobuf_oneof:"txn"`
	TransactionHash *common.Hash             `protobuf:"bytes,4,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MempoolTransaction) Reset() {
	*x = MempoolTransaction{}
	mi := &file_p2p_proto_mempool_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MempoolTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MempoolTransaction) ProtoMessage() {}

func (x *MempoolTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_mempool_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MempoolTransaction.ProtoReflect.Descriptor instead.
func (*MempoolTransaction) Descriptor() ([]byte, []int) {
	return file_p2p_proto_mempool_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *MempoolTransaction) GetTxn() isMempoolTransaction_Txn {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *MempoolTransaction) GetDeclareV3() *transaction.DeclareV3WithClass {
	if x != nil {
		if x, ok := x.Txn.(*MempoolTransaction_DeclareV3); ok {
			return x.DeclareV3
		}
	}
	return nil
}

func (x *MempoolTransaction) GetDeployAccountV3() *transaction.DeployAccountV3 {
	if x != nil {
		if x, ok := x.Txn.(*MempoolTransaction_DeployAccountV3); ok {
			return x.DeployAccountV3
		}
	}
	return nil
}

func (x *MempoolTransaction) GetInvokeV3() *transaction.InvokeV3 {
	if x != nil {
		if x, ok := x.Txn.(*MempoolTransaction_InvokeV3); ok {
			return x.InvokeV3
		}
	}
	return nil
}

func (x *MempoolTransaction) GetTransactionHash() *common.Hash {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

type isMempoolTransaction_Txn interface {
	isMempoolTransaction_Txn()
}

type MempoolTransaction_DeclareV3 struct {
	DeclareV3 *transaction.DeclareV3WithClass `protobuf:"bytes,1,opt,name=declare_v3,json=declareV3,proto3,oneof"`
}

type MempoolTransaction_DeployAccountV3 struct {
	DeployAccountV3 *transaction.DeployAccountV3 `protobuf:"bytes,2,opt,name=deploy_account_v3,json=deployAccountV3,proto3,oneof"`
}

type MempoolTransaction_InvokeV3 struct {
	InvokeV3 *transaction.InvokeV3 `protobuf:"bytes,3,opt,name=invoke_v3,json=invokeV3,proto3,oneof"`
}

func (*MempoolTransaction_DeclareV3) isMempoolTransaction_Txn() {}

func (*MempoolTransaction_DeployAccountV3) isMempoolTransaction_Txn() {}

func (*MempoolTransaction_InvokeV3) isMempoolTransaction_Txn() {}

var File_p2p_proto_mempool_transaction_proto protoreflect.FileDescriptor

const file_p2p_proto_mempool_transaction_proto_rawDesc = "" +
	"\n" +
	"#p2p/proto/mempool/transaction.proto\x1a\x16p2p/proto/common.proto\x1a\x1bp2p/proto/transaction.proto\"\xed\x01\n" +
	"\x12MempoolTransaction\x124\n" +
	"\n" +
	"declare_v3\x18\x01 \x01(\v2\x13.DeclareV3WithClassH\x00R\tdeclareV3\x12>\n" +
	"\x11deploy_account_v3\x18\x02 \x01(\v2\x10.DeployAccountV3H\x00R\x0fdeployAccountV3\x12(\n" +
	"\tinvoke_v3\x18\x03 \x01(\v2\t.InvokeV3H\x00R\binvokeV3\x120\n" +
	"\x10transaction_hash\x18\x04 \x01(\v2\x05.HashR\x0ftransactionHashB\x05\n" +
	"\x03txnBHZFgithub.com/starknet-io/starknet-p2pspecs/p2p/proto/mempool/transactionb\x06proto3"

var (
	file_p2p_proto_mempool_transaction_proto_rawDescOnce sync.Once
	file_p2p_proto_mempool_transaction_proto_rawDescData []byte
)

func file_p2p_proto_mempool_transaction_proto_rawDescGZIP() []byte {
	file_p2p_proto_mempool_transaction_proto_rawDescOnce.Do(func() {
		file_p2p_proto_mempool_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_p2p_proto_mempool_transaction_proto_rawDesc), len(file_p2p_proto_mempool_transaction_proto_rawDesc)))
	})
	return file_p2p_proto_mempool_transaction_proto_rawDescData
}

var file_p2p_proto_mempool_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_p2p_proto_mempool_transaction_proto_goTypes = []any{
	(*MempoolTransaction)(nil),             // 0: MempoolTransaction
	(*transaction.DeclareV3WithClass)(nil), // 1: DeclareV3WithClass
	(*transaction.DeployAccountV3)(nil),    // 2: DeployAccountV3
	(*transaction.InvokeV3)(nil),           // 3: InvokeV3
	(*common.Hash)(nil),                    // 4: Hash
}
var file_p2p_proto_mempool_transaction_proto_depIdxs = []int32{
	1, // 0: MempoolTransaction.declare_v3:type_name -> DeclareV3WithClass
	2, // 1: MempoolTransaction.deploy_account_v3:type_name -> DeployAccountV3
	3, // 2: MempoolTransaction.invoke_v3:type_name -> InvokeV3
	4, // 3: MempoolTransaction.transaction_hash:type_name -> Hash
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_p2p_proto_mempool_transaction_proto_init() }
func file_p2p_proto_mempool_transaction_proto_init() {
	if File_p2p_proto_mempool_transaction_proto != nil {
		return
	}
	file_p2p_proto_mempool_transaction_proto_msgTypes[0].OneofWrappers = []any{
		(*MempoolTransaction_DeclareV3)(nil),
		(*MempoolTransaction_DeployAccountV3)(nil),
		(*MempoolTransaction_InvokeV3)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_p2p_proto_mempool_transaction_proto_rawDesc), len(file_p2p_proto_mempool_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_proto_mempool_transaction_proto_goTypes,
		DependencyIndexes: file_p2p_proto_mempool_transaction_proto_depIdxs,
		MessageInfos:      file_p2p_proto_mempool_transaction_proto_msgTypes,
	}.Build()
	File_p2p_proto_mempool_transaction_proto = out.File
	file_p2p_proto_mempool_transaction_proto_goTypes = nil
	file_p2p_proto_mempool_transaction_proto_depIdxs = nil
}
