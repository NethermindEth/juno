// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: p2p/proto/sync/event.proto

package event

import (
	common "github.com/starknet-io/starknet-p2pspecs/p2p/proto/common"
	common1 "github.com/starknet-io/starknet-p2pspecs/p2p/proto/sync/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionHash *common.Hash           `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	FromAddress     *common.Felt252        `protobuf:"bytes,3,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	Keys            []*common.Felt252      `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	Data            []*common.Felt252      `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_p2p_proto_sync_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetTransactionHash() *common.Hash {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *Event) GetFromAddress() *common.Felt252 {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *Event) GetKeys() []*common.Felt252 {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *Event) GetData() []*common.Felt252 {
	if x != nil {
		return x.Data
	}
	return nil
}

type EventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iteration     *common1.Iteration     `protobuf:"bytes,1,opt,name=iteration,proto3" json:"iteration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventsRequest) Reset() {
	*x = EventsRequest{}
	mi := &file_p2p_proto_sync_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsRequest) ProtoMessage() {}

func (x *EventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsRequest.ProtoReflect.Descriptor instead.
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventsRequest) GetIteration() *common1.Iteration {
	if x != nil {
		return x.Iteration
	}
	return nil
}

// Responses are sent ordered by the order given in the request.
type EventsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventMessage:
	//
	//	*EventsResponse_Event
	//	*EventsResponse_Fin
	EventMessage  isEventsResponse_EventMessage `protobuf_oneof:"event_message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventsResponse) Reset() {
	*x = EventsResponse{}
	mi := &file_p2p_proto_sync_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsResponse) ProtoMessage() {}

func (x *EventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsResponse.ProtoReflect.Descriptor instead.
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventsResponse) GetEventMessage() isEventsResponse_EventMessage {
	if x != nil {
		return x.EventMessage
	}
	return nil
}

func (x *EventsResponse) GetEvent() *Event {
	if x != nil {
		if x, ok := x.EventMessage.(*EventsResponse_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *EventsResponse) GetFin() *common.Fin {
	if x != nil {
		if x, ok := x.EventMessage.(*EventsResponse_Fin); ok {
			return x.Fin
		}
	}
	return nil
}

type isEventsResponse_EventMessage interface {
	isEventsResponse_EventMessage()
}

type EventsResponse_Event struct {
	Event *Event `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type EventsResponse_Fin struct {
	Fin *common.Fin `protobuf:"bytes,2,opt,name=fin,proto3,oneof"` // Fin is sent after the peer sent all the data or when it encountered a block that it doesn't have its events.
}

func (*EventsResponse_Event) isEventsResponse_EventMessage() {}

func (*EventsResponse_Fin) isEventsResponse_EventMessage() {}

var File_p2p_proto_sync_event_proto protoreflect.FileDescriptor

const file_p2p_proto_sync_event_proto_rawDesc = "" +
	"\n" +
	"\x1ap2p/proto/sync/event.proto\x1a\x16p2p/proto/common.proto\x1a\x1bp2p/proto/sync/common.proto\"\xa2\x01\n" +
	"\x05Event\x120\n" +
	"\x10transaction_hash\x18\x01 \x01(\v2\x05.HashR\x0ftransactionHash\x12+\n" +
	"\ffrom_address\x18\x03 \x01(\v2\b.Felt252R\vfromAddress\x12\x1c\n" +
	"\x04keys\x18\x04 \x03(\v2\b.Felt252R\x04keys\x12\x1c\n" +
	"\x04data\x18\x05 \x03(\v2\b.Felt252R\x04data\"9\n" +
	"\rEventsRequest\x12(\n" +
	"\titeration\x18\x01 \x01(\v2\n" +
	".IterationR\titeration\"[\n" +
	"\x0eEventsResponse\x12\x1e\n" +
	"\x05event\x18\x01 \x01(\v2\x06.EventH\x00R\x05event\x12\x18\n" +
	"\x03fin\x18\x02 \x01(\v2\x04.FinH\x00R\x03finB\x0f\n" +
	"\revent_messageB?Z=github.com/starknet-io/starknet-p2pspecs/p2p/proto/sync/eventb\x06proto3"

var (
	file_p2p_proto_sync_event_proto_rawDescOnce sync.Once
	file_p2p_proto_sync_event_proto_rawDescData []byte
)

func file_p2p_proto_sync_event_proto_rawDescGZIP() []byte {
	file_p2p_proto_sync_event_proto_rawDescOnce.Do(func() {
		file_p2p_proto_sync_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_p2p_proto_sync_event_proto_rawDesc), len(file_p2p_proto_sync_event_proto_rawDesc)))
	})
	return file_p2p_proto_sync_event_proto_rawDescData
}

var file_p2p_proto_sync_event_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_p2p_proto_sync_event_proto_goTypes = []any{
	(*Event)(nil),             // 0: Event
	(*EventsRequest)(nil),     // 1: EventsRequest
	(*EventsResponse)(nil),    // 2: EventsResponse
	(*common.Hash)(nil),       // 3: Hash
	(*common.Felt252)(nil),    // 4: Felt252
	(*common1.Iteration)(nil), // 5: Iteration
	(*common.Fin)(nil),        // 6: Fin
}
var file_p2p_proto_sync_event_proto_depIdxs = []int32{
	3, // 0: Event.transaction_hash:type_name -> Hash
	4, // 1: Event.from_address:type_name -> Felt252
	4, // 2: Event.keys:type_name -> Felt252
	4, // 3: Event.data:type_name -> Felt252
	5, // 4: EventsRequest.iteration:type_name -> Iteration
	0, // 5: EventsResponse.event:type_name -> Event
	6, // 6: EventsResponse.fin:type_name -> Fin
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_p2p_proto_sync_event_proto_init() }
func file_p2p_proto_sync_event_proto_init() {
	if File_p2p_proto_sync_event_proto != nil {
		return
	}
	file_p2p_proto_sync_event_proto_msgTypes[2].OneofWrappers = []any{
		(*EventsResponse_Event)(nil),
		(*EventsResponse_Fin)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_p2p_proto_sync_event_proto_rawDesc), len(file_p2p_proto_sync_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_proto_sync_event_proto_goTypes,
		DependencyIndexes: file_p2p_proto_sync_event_proto_depIdxs,
		MessageInfos:      file_p2p_proto_sync_event_proto_msgTypes,
	}.Build()
	File_p2p_proto_sync_event_proto = out.File
	file_p2p_proto_sync_event_proto_goTypes = nil
	file_p2p_proto_sync_event_proto_depIdxs = nil
}
