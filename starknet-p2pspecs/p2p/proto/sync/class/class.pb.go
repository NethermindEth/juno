// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: p2p/proto/sync/class.proto

package class

import (
	class "github.com/starknet-io/starknet-p2pspecs/p2p/proto/class"
	common1 "github.com/starknet-io/starknet-p2pspecs/p2p/proto/common"
	common "github.com/starknet-io/starknet-p2pspecs/p2p/proto/sync/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClassesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iteration     *common.Iteration      `protobuf:"bytes,1,opt,name=iteration,proto3" json:"iteration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassesRequest) Reset() {
	*x = ClassesRequest{}
	mi := &file_p2p_proto_sync_class_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassesRequest) ProtoMessage() {}

func (x *ClassesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_class_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassesRequest.ProtoReflect.Descriptor instead.
func (*ClassesRequest) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_class_proto_rawDescGZIP(), []int{0}
}

func (x *ClassesRequest) GetIteration() *common.Iteration {
	if x != nil {
		return x.Iteration
	}
	return nil
}

// Responses are sent ordered by the order given in the request.
type ClassesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ClassMessage:
	//
	//	*ClassesResponse_Class
	//	*ClassesResponse_Fin
	ClassMessage  isClassesResponse_ClassMessage `protobuf_oneof:"class_message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassesResponse) Reset() {
	*x = ClassesResponse{}
	mi := &file_p2p_proto_sync_class_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassesResponse) ProtoMessage() {}

func (x *ClassesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_class_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassesResponse.ProtoReflect.Descriptor instead.
func (*ClassesResponse) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_class_proto_rawDescGZIP(), []int{1}
}

func (x *ClassesResponse) GetClassMessage() isClassesResponse_ClassMessage {
	if x != nil {
		return x.ClassMessage
	}
	return nil
}

func (x *ClassesResponse) GetClass() *class.Class {
	if x != nil {
		if x, ok := x.ClassMessage.(*ClassesResponse_Class); ok {
			return x.Class
		}
	}
	return nil
}

func (x *ClassesResponse) GetFin() *common1.Fin {
	if x != nil {
		if x, ok := x.ClassMessage.(*ClassesResponse_Fin); ok {
			return x.Fin
		}
	}
	return nil
}

type isClassesResponse_ClassMessage interface {
	isClassesResponse_ClassMessage()
}

type ClassesResponse_Class struct {
	Class *class.Class `protobuf:"bytes,1,opt,name=class,proto3,oneof"`
}

type ClassesResponse_Fin struct {
	Fin *common1.Fin `protobuf:"bytes,2,opt,name=fin,proto3,oneof"` // Fin is sent after the peer sent all the data or when it encountered a block that it doesn't have its classes.
}

func (*ClassesResponse_Class) isClassesResponse_ClassMessage() {}

func (*ClassesResponse_Fin) isClassesResponse_ClassMessage() {}

var File_p2p_proto_sync_class_proto protoreflect.FileDescriptor

const file_p2p_proto_sync_class_proto_rawDesc = "" +
	"\n" +
	"\x1ap2p/proto/sync/class.proto\x1a\x15p2p/proto/class.proto\x1a\x16p2p/proto/common.proto\x1a\x1bp2p/proto/sync/common.proto\":\n" +
	"\x0eClassesRequest\x12(\n" +
	"\titeration\x18\x01 \x01(\v2\n" +
	".IterationR\titeration\"\\\n" +
	"\x0fClassesResponse\x12\x1e\n" +
	"\x05class\x18\x01 \x01(\v2\x06.ClassH\x00R\x05class\x12\x18\n" +
	"\x03fin\x18\x02 \x01(\v2\x04.FinH\x00R\x03finB\x0f\n" +
	"\rclass_messageB?Z=github.com/starknet-io/starknet-p2pspecs/p2p/proto/sync/classb\x06proto3"

var (
	file_p2p_proto_sync_class_proto_rawDescOnce sync.Once
	file_p2p_proto_sync_class_proto_rawDescData []byte
)

func file_p2p_proto_sync_class_proto_rawDescGZIP() []byte {
	file_p2p_proto_sync_class_proto_rawDescOnce.Do(func() {
		file_p2p_proto_sync_class_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_p2p_proto_sync_class_proto_rawDesc), len(file_p2p_proto_sync_class_proto_rawDesc)))
	})
	return file_p2p_proto_sync_class_proto_rawDescData
}

var file_p2p_proto_sync_class_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_p2p_proto_sync_class_proto_goTypes = []any{
	(*ClassesRequest)(nil),   // 0: ClassesRequest
	(*ClassesResponse)(nil),  // 1: ClassesResponse
	(*common.Iteration)(nil), // 2: Iteration
	(*class.Class)(nil),      // 3: Class
	(*common1.Fin)(nil),      // 4: Fin
}
var file_p2p_proto_sync_class_proto_depIdxs = []int32{
	2, // 0: ClassesRequest.iteration:type_name -> Iteration
	3, // 1: ClassesResponse.class:type_name -> Class
	4, // 2: ClassesResponse.fin:type_name -> Fin
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_p2p_proto_sync_class_proto_init() }
func file_p2p_proto_sync_class_proto_init() {
	if File_p2p_proto_sync_class_proto != nil {
		return
	}
	file_p2p_proto_sync_class_proto_msgTypes[1].OneofWrappers = []any{
		(*ClassesResponse_Class)(nil),
		(*ClassesResponse_Fin)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_p2p_proto_sync_class_proto_rawDesc), len(file_p2p_proto_sync_class_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_proto_sync_class_proto_goTypes,
		DependencyIndexes: file_p2p_proto_sync_class_proto_depIdxs,
		MessageInfos:      file_p2p_proto_sync_class_proto_msgTypes,
	}.Build()
	File_p2p_proto_sync_class_proto = out.File
	file_p2p_proto_sync_class_proto_goTypes = nil
	file_p2p_proto_sync_class_proto_depIdxs = nil
}
