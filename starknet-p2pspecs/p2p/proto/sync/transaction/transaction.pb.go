// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: p2p/proto/sync/transaction.proto

package transaction

import (
	common1 "github.com/starknet-io/starknet-p2pspecs/p2p/proto/common"
	common "github.com/starknet-io/starknet-p2pspecs/p2p/proto/sync/common"
	receipt "github.com/starknet-io/starknet-p2pspecs/p2p/proto/sync/receipt"
	transaction "github.com/starknet-io/starknet-p2pspecs/p2p/proto/transaction"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TBD: can support a flag to return tx hashes only, good for standalone mempool to remove them,
// or any node that keeps track of transaction streaming in the consensus.
type TransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iteration     *common.Iteration      `protobuf:"bytes,1,opt,name=iteration,proto3" json:"iteration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionsRequest) Reset() {
	*x = TransactionsRequest{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsRequest) ProtoMessage() {}

func (x *TransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsRequest.ProtoReflect.Descriptor instead.
func (*TransactionsRequest) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionsRequest) GetIteration() *common.Iteration {
	if x != nil {
		return x.Iteration
	}
	return nil
}

// Responses are sent ordered by the order given in the request. The order inside each block is
// according to the execution order.
type TransactionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to TransactionMessage:
	//
	//	*TransactionsResponse_TransactionWithReceipt
	//	*TransactionsResponse_Fin
	TransactionMessage isTransactionsResponse_TransactionMessage `protobuf_oneof:"transaction_message"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TransactionsResponse) Reset() {
	*x = TransactionsResponse{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsResponse) ProtoMessage() {}

func (x *TransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsResponse.ProtoReflect.Descriptor instead.
func (*TransactionsResponse) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionsResponse) GetTransactionMessage() isTransactionsResponse_TransactionMessage {
	if x != nil {
		return x.TransactionMessage
	}
	return nil
}

func (x *TransactionsResponse) GetTransactionWithReceipt() *TransactionWithReceipt {
	if x != nil {
		if x, ok := x.TransactionMessage.(*TransactionsResponse_TransactionWithReceipt); ok {
			return x.TransactionWithReceipt
		}
	}
	return nil
}

func (x *TransactionsResponse) GetFin() *common1.Fin {
	if x != nil {
		if x, ok := x.TransactionMessage.(*TransactionsResponse_Fin); ok {
			return x.Fin
		}
	}
	return nil
}

type isTransactionsResponse_TransactionMessage interface {
	isTransactionsResponse_TransactionMessage()
}

type TransactionsResponse_TransactionWithReceipt struct {
	TransactionWithReceipt *TransactionWithReceipt `protobuf:"bytes,1,opt,name=transaction_with_receipt,json=transactionWithReceipt,proto3,oneof"`
}

type TransactionsResponse_Fin struct {
	Fin *common1.Fin `protobuf:"bytes,2,opt,name=fin,proto3,oneof"` // Fin is sent after the peer sent all the data or when it encountered a block that it doesn't have its transactions.
}

func (*TransactionsResponse_TransactionWithReceipt) isTransactionsResponse_TransactionMessage() {}

func (*TransactionsResponse_Fin) isTransactionsResponse_TransactionMessage() {}

type TransactionWithReceipt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *TransactionInBlock    `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Receipt       *receipt.Receipt       `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionWithReceipt) Reset() {
	*x = TransactionWithReceipt{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionWithReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionWithReceipt) ProtoMessage() {}

func (x *TransactionWithReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionWithReceipt.ProtoReflect.Descriptor instead.
func (*TransactionWithReceipt) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionWithReceipt) GetTransaction() *TransactionInBlock {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TransactionWithReceipt) GetReceipt() *receipt.Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type TransactionInBlock struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Txn:
	//
	//	*TransactionInBlock_DeclareV0
	//	*TransactionInBlock_DeclareV1
	//	*TransactionInBlock_DeclareV2
	//	*TransactionInBlock_DeclareV3
	//	*TransactionInBlock_Deploy_
	//	*TransactionInBlock_DeployAccountV1_
	//	*TransactionInBlock_DeployAccountV3
	//	*TransactionInBlock_InvokeV0_
	//	*TransactionInBlock_InvokeV1_
	//	*TransactionInBlock_InvokeV3
	//	*TransactionInBlock_L1Handler
	Txn             isTransactionInBlock_Txn `protobuf_oneof:"txn"`
	TransactionHash *common1.Hash            `protobuf:"bytes,12,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransactionInBlock) Reset() {
	*x = TransactionInBlock{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock) ProtoMessage() {}

func (x *TransactionInBlock) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock.ProtoReflect.Descriptor instead.
func (*TransactionInBlock) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionInBlock) GetTxn() isTransactionInBlock_Txn {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *TransactionInBlock) GetDeclareV0() *TransactionInBlock_DeclareV0WithoutClass {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_DeclareV0); ok {
			return x.DeclareV0
		}
	}
	return nil
}

func (x *TransactionInBlock) GetDeclareV1() *TransactionInBlock_DeclareV1WithoutClass {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_DeclareV1); ok {
			return x.DeclareV1
		}
	}
	return nil
}

func (x *TransactionInBlock) GetDeclareV2() *TransactionInBlock_DeclareV2WithoutClass {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_DeclareV2); ok {
			return x.DeclareV2
		}
	}
	return nil
}

func (x *TransactionInBlock) GetDeclareV3() *TransactionInBlock_DeclareV3WithoutClass {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_DeclareV3); ok {
			return x.DeclareV3
		}
	}
	return nil
}

func (x *TransactionInBlock) GetDeploy() *TransactionInBlock_Deploy {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_Deploy_); ok {
			return x.Deploy
		}
	}
	return nil
}

func (x *TransactionInBlock) GetDeployAccountV1() *TransactionInBlock_DeployAccountV1 {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_DeployAccountV1_); ok {
			return x.DeployAccountV1
		}
	}
	return nil
}

func (x *TransactionInBlock) GetDeployAccountV3() *transaction.DeployAccountV3 {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_DeployAccountV3); ok {
			return x.DeployAccountV3
		}
	}
	return nil
}

func (x *TransactionInBlock) GetInvokeV0() *TransactionInBlock_InvokeV0 {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_InvokeV0_); ok {
			return x.InvokeV0
		}
	}
	return nil
}

func (x *TransactionInBlock) GetInvokeV1() *TransactionInBlock_InvokeV1 {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_InvokeV1_); ok {
			return x.InvokeV1
		}
	}
	return nil
}

func (x *TransactionInBlock) GetInvokeV3() *transaction.InvokeV3 {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_InvokeV3); ok {
			return x.InvokeV3
		}
	}
	return nil
}

func (x *TransactionInBlock) GetL1Handler() *transaction.L1HandlerV0 {
	if x != nil {
		if x, ok := x.Txn.(*TransactionInBlock_L1Handler); ok {
			return x.L1Handler
		}
	}
	return nil
}

func (x *TransactionInBlock) GetTransactionHash() *common1.Hash {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

type isTransactionInBlock_Txn interface {
	isTransactionInBlock_Txn()
}

type TransactionInBlock_DeclareV0 struct {
	DeclareV0 *TransactionInBlock_DeclareV0WithoutClass `protobuf:"bytes,1,opt,name=declare_v0,json=declareV0,proto3,oneof"`
}

type TransactionInBlock_DeclareV1 struct {
	DeclareV1 *TransactionInBlock_DeclareV1WithoutClass `protobuf:"bytes,2,opt,name=declare_v1,json=declareV1,proto3,oneof"`
}

type TransactionInBlock_DeclareV2 struct {
	DeclareV2 *TransactionInBlock_DeclareV2WithoutClass `protobuf:"bytes,3,opt,name=declare_v2,json=declareV2,proto3,oneof"`
}

type TransactionInBlock_DeclareV3 struct {
	DeclareV3 *TransactionInBlock_DeclareV3WithoutClass `protobuf:"bytes,4,opt,name=declare_v3,json=declareV3,proto3,oneof"`
}

type TransactionInBlock_Deploy_ struct {
	Deploy *TransactionInBlock_Deploy `protobuf:"bytes,5,opt,name=deploy,proto3,oneof"`
}

type TransactionInBlock_DeployAccountV1_ struct {
	DeployAccountV1 *TransactionInBlock_DeployAccountV1 `protobuf:"bytes,6,opt,name=deploy_account_v1,json=deployAccountV1,proto3,oneof"`
}

type TransactionInBlock_DeployAccountV3 struct {
	DeployAccountV3 *transaction.DeployAccountV3 `protobuf:"bytes,7,opt,name=deploy_account_v3,json=deployAccountV3,proto3,oneof"`
}

type TransactionInBlock_InvokeV0_ struct {
	InvokeV0 *TransactionInBlock_InvokeV0 `protobuf:"bytes,8,opt,name=invoke_v0,json=invokeV0,proto3,oneof"`
}

type TransactionInBlock_InvokeV1_ struct {
	InvokeV1 *TransactionInBlock_InvokeV1 `protobuf:"bytes,9,opt,name=invoke_v1,json=invokeV1,proto3,oneof"`
}

type TransactionInBlock_InvokeV3 struct {
	InvokeV3 *transaction.InvokeV3 `protobuf:"bytes,10,opt,name=invoke_v3,json=invokeV3,proto3,oneof"`
}

type TransactionInBlock_L1Handler struct {
	L1Handler *transaction.L1HandlerV0 `protobuf:"bytes,11,opt,name=l1_handler,json=l1Handler,proto3,oneof"`
}

func (*TransactionInBlock_DeclareV0) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_DeclareV1) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_DeclareV2) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_DeclareV3) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_Deploy_) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_DeployAccountV1_) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_DeployAccountV3) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_InvokeV0_) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_InvokeV1_) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_InvokeV3) isTransactionInBlock_Txn() {}

func (*TransactionInBlock_L1Handler) isTransactionInBlock_Txn() {}

type TransactionInBlock_DeclareV0WithoutClass struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Sender        *common1.Address              `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxFee        *common1.Felt252              `protobuf:"bytes,2,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature     *transaction.AccountSignature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash     *common1.Hash                 `protobuf:"bytes,4,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInBlock_DeclareV0WithoutClass) Reset() {
	*x = TransactionInBlock_DeclareV0WithoutClass{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock_DeclareV0WithoutClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock_DeclareV0WithoutClass) ProtoMessage() {}

func (x *TransactionInBlock_DeclareV0WithoutClass) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock_DeclareV0WithoutClass.ProtoReflect.Descriptor instead.
func (*TransactionInBlock_DeclareV0WithoutClass) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TransactionInBlock_DeclareV0WithoutClass) GetSender() *common1.Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *TransactionInBlock_DeclareV0WithoutClass) GetMaxFee() *common1.Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *TransactionInBlock_DeclareV0WithoutClass) GetSignature() *transaction.AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionInBlock_DeclareV0WithoutClass) GetClassHash() *common1.Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

type TransactionInBlock_DeclareV1WithoutClass struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Sender        *common1.Address              `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxFee        *common1.Felt252              `protobuf:"bytes,2,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature     *transaction.AccountSignature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash     *common1.Hash                 `protobuf:"bytes,4,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce         *common1.Felt252              `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInBlock_DeclareV1WithoutClass) Reset() {
	*x = TransactionInBlock_DeclareV1WithoutClass{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock_DeclareV1WithoutClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock_DeclareV1WithoutClass) ProtoMessage() {}

func (x *TransactionInBlock_DeclareV1WithoutClass) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock_DeclareV1WithoutClass.ProtoReflect.Descriptor instead.
func (*TransactionInBlock_DeclareV1WithoutClass) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3, 1}
}

func (x *TransactionInBlock_DeclareV1WithoutClass) GetSender() *common1.Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *TransactionInBlock_DeclareV1WithoutClass) GetMaxFee() *common1.Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *TransactionInBlock_DeclareV1WithoutClass) GetSignature() *transaction.AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionInBlock_DeclareV1WithoutClass) GetClassHash() *common1.Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *TransactionInBlock_DeclareV1WithoutClass) GetNonce() *common1.Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type TransactionInBlock_DeclareV2WithoutClass struct {
	state             protoimpl.MessageState        `protogen:"open.v1"`
	Sender            *common1.Address              `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxFee            *common1.Felt252              `protobuf:"bytes,2,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature         *transaction.AccountSignature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash         *common1.Hash                 `protobuf:"bytes,4,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce             *common1.Felt252              `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	CompiledClassHash *common1.Hash                 `protobuf:"bytes,6,opt,name=compiled_class_hash,json=compiledClassHash,proto3" json:"compiled_class_hash,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TransactionInBlock_DeclareV2WithoutClass) Reset() {
	*x = TransactionInBlock_DeclareV2WithoutClass{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock_DeclareV2WithoutClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock_DeclareV2WithoutClass) ProtoMessage() {}

func (x *TransactionInBlock_DeclareV2WithoutClass) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock_DeclareV2WithoutClass.ProtoReflect.Descriptor instead.
func (*TransactionInBlock_DeclareV2WithoutClass) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3, 2}
}

func (x *TransactionInBlock_DeclareV2WithoutClass) GetSender() *common1.Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *TransactionInBlock_DeclareV2WithoutClass) GetMaxFee() *common1.Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *TransactionInBlock_DeclareV2WithoutClass) GetSignature() *transaction.AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionInBlock_DeclareV2WithoutClass) GetClassHash() *common1.Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *TransactionInBlock_DeclareV2WithoutClass) GetNonce() *common1.Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *TransactionInBlock_DeclareV2WithoutClass) GetCompiledClassHash() *common1.Hash {
	if x != nil {
		return x.CompiledClassHash
	}
	return nil
}

// see https://external.integration.starknet.io/feeder_gateway/get_transaction?transactionHash=0x41d1f5206ef58a443e7d3d1ca073171ec25fa75313394318fc83a074a6631c3
type TransactionInBlock_DeclareV3WithoutClass struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Common        *transaction.DeclareV3Common `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ClassHash     *common1.Hash                `protobuf:"bytes,2,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInBlock_DeclareV3WithoutClass) Reset() {
	*x = TransactionInBlock_DeclareV3WithoutClass{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock_DeclareV3WithoutClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock_DeclareV3WithoutClass) ProtoMessage() {}

func (x *TransactionInBlock_DeclareV3WithoutClass) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock_DeclareV3WithoutClass.ProtoReflect.Descriptor instead.
func (*TransactionInBlock_DeclareV3WithoutClass) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3, 3}
}

func (x *TransactionInBlock_DeclareV3WithoutClass) GetCommon() *transaction.DeclareV3Common {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *TransactionInBlock_DeclareV3WithoutClass) GetClassHash() *common1.Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

type TransactionInBlock_Deploy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassHash     *common1.Hash          `protobuf:"bytes,1,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	AddressSalt   *common1.Felt252       `protobuf:"bytes,2,opt,name=address_salt,json=addressSalt,proto3" json:"address_salt,omitempty"`
	Calldata      []*common1.Felt252     `protobuf:"bytes,3,rep,name=calldata,proto3" json:"calldata,omitempty"`
	Version       uint32                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInBlock_Deploy) Reset() {
	*x = TransactionInBlock_Deploy{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock_Deploy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock_Deploy) ProtoMessage() {}

func (x *TransactionInBlock_Deploy) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock_Deploy.ProtoReflect.Descriptor instead.
func (*TransactionInBlock_Deploy) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3, 4}
}

func (x *TransactionInBlock_Deploy) GetClassHash() *common1.Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *TransactionInBlock_Deploy) GetAddressSalt() *common1.Felt252 {
	if x != nil {
		return x.AddressSalt
	}
	return nil
}

func (x *TransactionInBlock_Deploy) GetCalldata() []*common1.Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *TransactionInBlock_Deploy) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type TransactionInBlock_DeployAccountV1 struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	MaxFee        *common1.Felt252              `protobuf:"bytes,1,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature     *transaction.AccountSignature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	ClassHash     *common1.Hash                 `protobuf:"bytes,3,opt,name=class_hash,json=classHash,proto3" json:"class_hash,omitempty"`
	Nonce         *common1.Felt252              `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	AddressSalt   *common1.Felt252              `protobuf:"bytes,5,opt,name=address_salt,json=addressSalt,proto3" json:"address_salt,omitempty"`
	Calldata      []*common1.Felt252            `protobuf:"bytes,6,rep,name=calldata,proto3" json:"calldata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInBlock_DeployAccountV1) Reset() {
	*x = TransactionInBlock_DeployAccountV1{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock_DeployAccountV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock_DeployAccountV1) ProtoMessage() {}

func (x *TransactionInBlock_DeployAccountV1) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock_DeployAccountV1.ProtoReflect.Descriptor instead.
func (*TransactionInBlock_DeployAccountV1) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3, 5}
}

func (x *TransactionInBlock_DeployAccountV1) GetMaxFee() *common1.Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *TransactionInBlock_DeployAccountV1) GetSignature() *transaction.AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionInBlock_DeployAccountV1) GetClassHash() *common1.Hash {
	if x != nil {
		return x.ClassHash
	}
	return nil
}

func (x *TransactionInBlock_DeployAccountV1) GetNonce() *common1.Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *TransactionInBlock_DeployAccountV1) GetAddressSalt() *common1.Felt252 {
	if x != nil {
		return x.AddressSalt
	}
	return nil
}

func (x *TransactionInBlock_DeployAccountV1) GetCalldata() []*common1.Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

type TransactionInBlock_InvokeV0 struct {
	state              protoimpl.MessageState        `protogen:"open.v1"`
	MaxFee             *common1.Felt252              `protobuf:"bytes,1,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature          *transaction.AccountSignature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Address            *common1.Address              `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	EntryPointSelector *common1.Felt252              `protobuf:"bytes,4,opt,name=entry_point_selector,json=entryPointSelector,proto3" json:"entry_point_selector,omitempty"`
	Calldata           []*common1.Felt252            `protobuf:"bytes,5,rep,name=calldata,proto3" json:"calldata,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TransactionInBlock_InvokeV0) Reset() {
	*x = TransactionInBlock_InvokeV0{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock_InvokeV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock_InvokeV0) ProtoMessage() {}

func (x *TransactionInBlock_InvokeV0) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock_InvokeV0.ProtoReflect.Descriptor instead.
func (*TransactionInBlock_InvokeV0) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3, 6}
}

func (x *TransactionInBlock_InvokeV0) GetMaxFee() *common1.Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *TransactionInBlock_InvokeV0) GetSignature() *transaction.AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionInBlock_InvokeV0) GetAddress() *common1.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *TransactionInBlock_InvokeV0) GetEntryPointSelector() *common1.Felt252 {
	if x != nil {
		return x.EntryPointSelector
	}
	return nil
}

func (x *TransactionInBlock_InvokeV0) GetCalldata() []*common1.Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

type TransactionInBlock_InvokeV1 struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Sender        *common1.Address              `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MaxFee        *common1.Felt252              `protobuf:"bytes,2,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	Signature     *transaction.AccountSignature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Calldata      []*common1.Felt252            `protobuf:"bytes,4,rep,name=calldata,proto3" json:"calldata,omitempty"`
	Nonce         *common1.Felt252              `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInBlock_InvokeV1) Reset() {
	*x = TransactionInBlock_InvokeV1{}
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInBlock_InvokeV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInBlock_InvokeV1) ProtoMessage() {}

func (x *TransactionInBlock_InvokeV1) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_proto_sync_transaction_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInBlock_InvokeV1.ProtoReflect.Descriptor instead.
func (*TransactionInBlock_InvokeV1) Descriptor() ([]byte, []int) {
	return file_p2p_proto_sync_transaction_proto_rawDescGZIP(), []int{3, 7}
}

func (x *TransactionInBlock_InvokeV1) GetSender() *common1.Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *TransactionInBlock_InvokeV1) GetMaxFee() *common1.Felt252 {
	if x != nil {
		return x.MaxFee
	}
	return nil
}

func (x *TransactionInBlock_InvokeV1) GetSignature() *transaction.AccountSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionInBlock_InvokeV1) GetCalldata() []*common1.Felt252 {
	if x != nil {
		return x.Calldata
	}
	return nil
}

func (x *TransactionInBlock_InvokeV1) GetNonce() *common1.Felt252 {
	if x != nil {
		return x.Nonce
	}
	return nil
}

var File_p2p_proto_sync_transaction_proto protoreflect.FileDescriptor

const file_p2p_proto_sync_transaction_proto_rawDesc = "" +
	"\n" +
	" p2p/proto/sync/transaction.proto\x1a\x16p2p/proto/common.proto\x1a\x1bp2p/proto/sync/common.proto\x1a\x1cp2p/proto/sync/receipt.proto\x1a\x1bp2p/proto/transaction.proto\"?\n" +
	"\x13TransactionsRequest\x12(\n" +
	"\titeration\x18\x01 \x01(\v2\n" +
	".IterationR\titeration\"\x9c\x01\n" +
	"\x14TransactionsResponse\x12S\n" +
	"\x18transaction_with_receipt\x18\x01 \x01(\v2\x17.TransactionWithReceiptH\x00R\x16transactionWithReceipt\x12\x18\n" +
	"\x03fin\x18\x02 \x01(\v2\x04.FinH\x00R\x03finB\x15\n" +
	"\x13transaction_message\"s\n" +
	"\x16TransactionWithReceipt\x125\n" +
	"\vtransaction\x18\x01 \x01(\v2\x13.TransactionInBlockR\vtransaction\x12\"\n" +
	"\areceipt\x18\x02 \x01(\v2\b.ReceiptR\areceipt\"\xea\x12\n" +
	"\x12TransactionInBlock\x12J\n" +
	"\n" +
	"declare_v0\x18\x01 \x01(\v2).TransactionInBlock.DeclareV0WithoutClassH\x00R\tdeclareV0\x12J\n" +
	"\n" +
	"declare_v1\x18\x02 \x01(\v2).TransactionInBlock.DeclareV1WithoutClassH\x00R\tdeclareV1\x12J\n" +
	"\n" +
	"declare_v2\x18\x03 \x01(\v2).TransactionInBlock.DeclareV2WithoutClassH\x00R\tdeclareV2\x12J\n" +
	"\n" +
	"declare_v3\x18\x04 \x01(\v2).TransactionInBlock.DeclareV3WithoutClassH\x00R\tdeclareV3\x124\n" +
	"\x06deploy\x18\x05 \x01(\v2\x1a.TransactionInBlock.DeployH\x00R\x06deploy\x12Q\n" +
	"\x11deploy_account_v1\x18\x06 \x01(\v2#.TransactionInBlock.DeployAccountV1H\x00R\x0fdeployAccountV1\x12>\n" +
	"\x11deploy_account_v3\x18\a \x01(\v2\x10.DeployAccountV3H\x00R\x0fdeployAccountV3\x12;\n" +
	"\tinvoke_v0\x18\b \x01(\v2\x1c.TransactionInBlock.InvokeV0H\x00R\binvokeV0\x12;\n" +
	"\tinvoke_v1\x18\t \x01(\v2\x1c.TransactionInBlock.InvokeV1H\x00R\binvokeV1\x12(\n" +
	"\tinvoke_v3\x18\n" +
	" \x01(\v2\t.InvokeV3H\x00R\binvokeV3\x12-\n" +
	"\n" +
	"l1_handler\x18\v \x01(\v2\f.L1HandlerV0H\x00R\tl1Handler\x120\n" +
	"\x10transaction_hash\x18\f \x01(\v2\x05.HashR\x0ftransactionHash\x1a\xb3\x01\n" +
	"\x15DeclareV0WithoutClass\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12!\n" +
	"\amax_fee\x18\x02 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x03 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x04 \x01(\v2\x05.HashR\tclassHash\x1a\xd3\x01\n" +
	"\x15DeclareV1WithoutClass\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12!\n" +
	"\amax_fee\x18\x02 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x03 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x04 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x05 \x01(\v2\b.Felt252R\x05nonce\x1a\x8a\x02\n" +
	"\x15DeclareV2WithoutClass\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12!\n" +
	"\amax_fee\x18\x02 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x03 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x04 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x05 \x01(\v2\b.Felt252R\x05nonce\x125\n" +
	"\x13compiled_class_hash\x18\x06 \x01(\v2\x05.HashR\x11compiledClassHash\x1ag\n" +
	"\x15DeclareV3WithoutClass\x12(\n" +
	"\x06common\x18\x01 \x01(\v2\x10.DeclareV3CommonR\x06common\x12$\n" +
	"\n" +
	"class_hash\x18\x02 \x01(\v2\x05.HashR\tclassHash\x1a\x9b\x01\n" +
	"\x06Deploy\x12$\n" +
	"\n" +
	"class_hash\x18\x01 \x01(\v2\x05.HashR\tclassHash\x12+\n" +
	"\faddress_salt\x18\x02 \x01(\v2\b.Felt252R\vaddressSalt\x12$\n" +
	"\bcalldata\x18\x03 \x03(\v2\b.Felt252R\bcalldata\x12\x18\n" +
	"\aversion\x18\x04 \x01(\rR\aversion\x1a\xfe\x01\n" +
	"\x0fDeployAccountV1\x12!\n" +
	"\amax_fee\x18\x01 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x02 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\n" +
	"class_hash\x18\x03 \x01(\v2\x05.HashR\tclassHash\x12\x1e\n" +
	"\x05nonce\x18\x04 \x01(\v2\b.Felt252R\x05nonce\x12+\n" +
	"\faddress_salt\x18\x05 \x01(\v2\b.Felt252R\vaddressSalt\x12$\n" +
	"\bcalldata\x18\x06 \x03(\v2\b.Felt252R\bcalldata\x1a\xe4\x01\n" +
	"\bInvokeV0\x12!\n" +
	"\amax_fee\x18\x01 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x02 \x01(\v2\x11.AccountSignatureR\tsignature\x12\"\n" +
	"\aaddress\x18\x03 \x01(\v2\b.AddressR\aaddress\x12:\n" +
	"\x14entry_point_selector\x18\x04 \x01(\v2\b.Felt252R\x12entryPointSelector\x12$\n" +
	"\bcalldata\x18\x05 \x03(\v2\b.Felt252R\bcalldata\x1a\xc6\x01\n" +
	"\bInvokeV1\x12 \n" +
	"\x06sender\x18\x01 \x01(\v2\b.AddressR\x06sender\x12!\n" +
	"\amax_fee\x18\x02 \x01(\v2\b.Felt252R\x06maxFee\x12/\n" +
	"\tsignature\x18\x03 \x01(\v2\x11.AccountSignatureR\tsignature\x12$\n" +
	"\bcalldata\x18\x04 \x03(\v2\b.Felt252R\bcalldata\x12\x1e\n" +
	"\x05nonce\x18\x05 \x01(\v2\b.Felt252R\x05nonceB\x05\n" +
	"\x03txnBEZCgithub.com/starknet-io/starknet-p2pspecs/p2p/proto/sync/transactionb\x06proto3"

var (
	file_p2p_proto_sync_transaction_proto_rawDescOnce sync.Once
	file_p2p_proto_sync_transaction_proto_rawDescData []byte
)

func file_p2p_proto_sync_transaction_proto_rawDescGZIP() []byte {
	file_p2p_proto_sync_transaction_proto_rawDescOnce.Do(func() {
		file_p2p_proto_sync_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_p2p_proto_sync_transaction_proto_rawDesc), len(file_p2p_proto_sync_transaction_proto_rawDesc)))
	})
	return file_p2p_proto_sync_transaction_proto_rawDescData
}

var file_p2p_proto_sync_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_p2p_proto_sync_transaction_proto_goTypes = []any{
	(*TransactionsRequest)(nil),                      // 0: TransactionsRequest
	(*TransactionsResponse)(nil),                     // 1: TransactionsResponse
	(*TransactionWithReceipt)(nil),                   // 2: TransactionWithReceipt
	(*TransactionInBlock)(nil),                       // 3: TransactionInBlock
	(*TransactionInBlock_DeclareV0WithoutClass)(nil), // 4: TransactionInBlock.DeclareV0WithoutClass
	(*TransactionInBlock_DeclareV1WithoutClass)(nil), // 5: TransactionInBlock.DeclareV1WithoutClass
	(*TransactionInBlock_DeclareV2WithoutClass)(nil), // 6: TransactionInBlock.DeclareV2WithoutClass
	(*TransactionInBlock_DeclareV3WithoutClass)(nil), // 7: TransactionInBlock.DeclareV3WithoutClass
	(*TransactionInBlock_Deploy)(nil),                // 8: TransactionInBlock.Deploy
	(*TransactionInBlock_DeployAccountV1)(nil),       // 9: TransactionInBlock.DeployAccountV1
	(*TransactionInBlock_InvokeV0)(nil),              // 10: TransactionInBlock.InvokeV0
	(*TransactionInBlock_InvokeV1)(nil),              // 11: TransactionInBlock.InvokeV1
	(*common.Iteration)(nil),                         // 12: Iteration
	(*common1.Fin)(nil),                              // 13: Fin
	(*receipt.Receipt)(nil),                          // 14: Receipt
	(*transaction.DeployAccountV3)(nil),              // 15: DeployAccountV3
	(*transaction.InvokeV3)(nil),                     // 16: InvokeV3
	(*transaction.L1HandlerV0)(nil),                  // 17: L1HandlerV0
	(*common1.Hash)(nil),                             // 18: Hash
	(*common1.Address)(nil),                          // 19: Address
	(*common1.Felt252)(nil),                          // 20: Felt252
	(*transaction.AccountSignature)(nil),             // 21: AccountSignature
	(*transaction.DeclareV3Common)(nil),              // 22: DeclareV3Common
}
var file_p2p_proto_sync_transaction_proto_depIdxs = []int32{
	12, // 0: TransactionsRequest.iteration:type_name -> Iteration
	2,  // 1: TransactionsResponse.transaction_with_receipt:type_name -> TransactionWithReceipt
	13, // 2: TransactionsResponse.fin:type_name -> Fin
	3,  // 3: TransactionWithReceipt.transaction:type_name -> TransactionInBlock
	14, // 4: TransactionWithReceipt.receipt:type_name -> Receipt
	4,  // 5: TransactionInBlock.declare_v0:type_name -> TransactionInBlock.DeclareV0WithoutClass
	5,  // 6: TransactionInBlock.declare_v1:type_name -> TransactionInBlock.DeclareV1WithoutClass
	6,  // 7: TransactionInBlock.declare_v2:type_name -> TransactionInBlock.DeclareV2WithoutClass
	7,  // 8: TransactionInBlock.declare_v3:type_name -> TransactionInBlock.DeclareV3WithoutClass
	8,  // 9: TransactionInBlock.deploy:type_name -> TransactionInBlock.Deploy
	9,  // 10: TransactionInBlock.deploy_account_v1:type_name -> TransactionInBlock.DeployAccountV1
	15, // 11: TransactionInBlock.deploy_account_v3:type_name -> DeployAccountV3
	10, // 12: TransactionInBlock.invoke_v0:type_name -> TransactionInBlock.InvokeV0
	11, // 13: TransactionInBlock.invoke_v1:type_name -> TransactionInBlock.InvokeV1
	16, // 14: TransactionInBlock.invoke_v3:type_name -> InvokeV3
	17, // 15: TransactionInBlock.l1_handler:type_name -> L1HandlerV0
	18, // 16: TransactionInBlock.transaction_hash:type_name -> Hash
	19, // 17: TransactionInBlock.DeclareV0WithoutClass.sender:type_name -> Address
	20, // 18: TransactionInBlock.DeclareV0WithoutClass.max_fee:type_name -> Felt252
	21, // 19: TransactionInBlock.DeclareV0WithoutClass.signature:type_name -> AccountSignature
	18, // 20: TransactionInBlock.DeclareV0WithoutClass.class_hash:type_name -> Hash
	19, // 21: TransactionInBlock.DeclareV1WithoutClass.sender:type_name -> Address
	20, // 22: TransactionInBlock.DeclareV1WithoutClass.max_fee:type_name -> Felt252
	21, // 23: TransactionInBlock.DeclareV1WithoutClass.signature:type_name -> AccountSignature
	18, // 24: TransactionInBlock.DeclareV1WithoutClass.class_hash:type_name -> Hash
	20, // 25: TransactionInBlock.DeclareV1WithoutClass.nonce:type_name -> Felt252
	19, // 26: TransactionInBlock.DeclareV2WithoutClass.sender:type_name -> Address
	20, // 27: TransactionInBlock.DeclareV2WithoutClass.max_fee:type_name -> Felt252
	21, // 28: TransactionInBlock.DeclareV2WithoutClass.signature:type_name -> AccountSignature
	18, // 29: TransactionInBlock.DeclareV2WithoutClass.class_hash:type_name -> Hash
	20, // 30: TransactionInBlock.DeclareV2WithoutClass.nonce:type_name -> Felt252
	18, // 31: TransactionInBlock.DeclareV2WithoutClass.compiled_class_hash:type_name -> Hash
	22, // 32: TransactionInBlock.DeclareV3WithoutClass.common:type_name -> DeclareV3Common
	18, // 33: TransactionInBlock.DeclareV3WithoutClass.class_hash:type_name -> Hash
	18, // 34: TransactionInBlock.Deploy.class_hash:type_name -> Hash
	20, // 35: TransactionInBlock.Deploy.address_salt:type_name -> Felt252
	20, // 36: TransactionInBlock.Deploy.calldata:type_name -> Felt252
	20, // 37: TransactionInBlock.DeployAccountV1.max_fee:type_name -> Felt252
	21, // 38: TransactionInBlock.DeployAccountV1.signature:type_name -> AccountSignature
	18, // 39: TransactionInBlock.DeployAccountV1.class_hash:type_name -> Hash
	20, // 40: TransactionInBlock.DeployAccountV1.nonce:type_name -> Felt252
	20, // 41: TransactionInBlock.DeployAccountV1.address_salt:type_name -> Felt252
	20, // 42: TransactionInBlock.DeployAccountV1.calldata:type_name -> Felt252
	20, // 43: TransactionInBlock.InvokeV0.max_fee:type_name -> Felt252
	21, // 44: TransactionInBlock.InvokeV0.signature:type_name -> AccountSignature
	19, // 45: TransactionInBlock.InvokeV0.address:type_name -> Address
	20, // 46: TransactionInBlock.InvokeV0.entry_point_selector:type_name -> Felt252
	20, // 47: TransactionInBlock.InvokeV0.calldata:type_name -> Felt252
	19, // 48: TransactionInBlock.InvokeV1.sender:type_name -> Address
	20, // 49: TransactionInBlock.InvokeV1.max_fee:type_name -> Felt252
	21, // 50: TransactionInBlock.InvokeV1.signature:type_name -> AccountSignature
	20, // 51: TransactionInBlock.InvokeV1.calldata:type_name -> Felt252
	20, // 52: TransactionInBlock.InvokeV1.nonce:type_name -> Felt252
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_p2p_proto_sync_transaction_proto_init() }
func file_p2p_proto_sync_transaction_proto_init() {
	if File_p2p_proto_sync_transaction_proto != nil {
		return
	}
	file_p2p_proto_sync_transaction_proto_msgTypes[1].OneofWrappers = []any{
		(*TransactionsResponse_TransactionWithReceipt)(nil),
		(*TransactionsResponse_Fin)(nil),
	}
	file_p2p_proto_sync_transaction_proto_msgTypes[3].OneofWrappers = []any{
		(*TransactionInBlock_DeclareV0)(nil),
		(*TransactionInBlock_DeclareV1)(nil),
		(*TransactionInBlock_DeclareV2)(nil),
		(*TransactionInBlock_DeclareV3)(nil),
		(*TransactionInBlock_Deploy_)(nil),
		(*TransactionInBlock_DeployAccountV1_)(nil),
		(*TransactionInBlock_DeployAccountV3)(nil),
		(*TransactionInBlock_InvokeV0_)(nil),
		(*TransactionInBlock_InvokeV1_)(nil),
		(*TransactionInBlock_InvokeV3)(nil),
		(*TransactionInBlock_L1Handler)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_p2p_proto_sync_transaction_proto_rawDesc), len(file_p2p_proto_sync_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_proto_sync_transaction_proto_goTypes,
		DependencyIndexes: file_p2p_proto_sync_transaction_proto_depIdxs,
		MessageInfos:      file_p2p_proto_sync_transaction_proto_msgTypes,
	}.Build()
	File_p2p_proto_sync_transaction_proto = out.File
	file_p2p_proto_sync_transaction_proto_goTypes = nil
	file_p2p_proto_sync_transaction_proto_depIdxs = nil
}
