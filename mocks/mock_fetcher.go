// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NethermindEth/juno/l1data (interfaces: StateDiffFetcher)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_fetcher.go -package=mocks github.com/NethermindEth/juno/l1data StateDiffFetcher
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	big "math/big"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStateDiffFetcher is a mock of StateDiffFetcher interface.
type MockStateDiffFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockStateDiffFetcherMockRecorder
}

// MockStateDiffFetcherMockRecorder is the mock recorder for MockStateDiffFetcher.
type MockStateDiffFetcherMockRecorder struct {
	mock *MockStateDiffFetcher
}

// NewMockStateDiffFetcher creates a new mock instance.
func NewMockStateDiffFetcher(ctrl *gomock.Controller) *MockStateDiffFetcher {
	mock := &MockStateDiffFetcher{ctrl: ctrl}
	mock.recorder = &MockStateDiffFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStateDiffFetcher) EXPECT() *MockStateDiffFetcherMockRecorder {
	return m.recorder
}

// StateDiff mocks base method.
func (m *MockStateDiffFetcher) StateDiff(arg0 context.Context, arg1 uint, arg2 uint64) ([]*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StateDiff", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StateDiff indicates an expected call of StateDiff.
func (mr *MockStateDiffFetcherMockRecorder) StateDiff(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StateDiff", reflect.TypeOf((*MockStateDiffFetcher)(nil).StateDiff), arg0, arg1, arg2)
}
