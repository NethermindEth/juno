// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NethermindEth/juno/l1 (interfaces: Reader)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_l1reader.go -package=mocks -mock_names Reader=L1Reader github.com/NethermindEth/juno/l1 Reader
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	l1 "github.com/NethermindEth/juno/l1"
	gomock "go.uber.org/mock/gomock"
)

// L1Reader is a mock of Reader interface.
type L1Reader struct {
	ctrl     *gomock.Controller
	recorder *L1ReaderMockRecorder
}

// L1ReaderMockRecorder is the mock recorder for L1Reader.
type L1ReaderMockRecorder struct {
	mock *L1Reader
}

// NewL1Reader creates a new mock instance.
func NewL1Reader(ctrl *gomock.Controller) *L1Reader {
	mock := &L1Reader{ctrl: ctrl}
	mock.recorder = &L1ReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *L1Reader) EXPECT() *L1ReaderMockRecorder {
	return m.recorder
}

// SubscribeL1Heads mocks base method.
func (m *L1Reader) SubscribeL1Heads() l1.L1HeadSubscription {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubscribeL1Heads")
	ret0, _ := ret[0].(l1.L1HeadSubscription)
	return ret0
}

// SubscribeL1Heads indicates an expected call of SubscribeL1Heads.
func (mr *L1ReaderMockRecorder) SubscribeL1Heads() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeL1Heads", reflect.TypeOf((*L1Reader)(nil).SubscribeL1Heads))
}
