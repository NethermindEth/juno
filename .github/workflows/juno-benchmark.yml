name: Juno Benchmarking

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Juno version to benchmark'
        required: true
        default: 'latest'
      snapshot_url:
        description: 'Custom snapshot URL (optional)'
        required: false
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      snapshot_url:
        required: false
        type: string
    secrets:
      EC2_HOST:
        required: true
      EC2_USER:
        required: true
      EC2_PRIVATE_KEY:
        required: true

jobs:
  juno-benchmark:
    runs-on: ubuntu-latest

    steps:
      - name: Set short SHA
        run: echo "SHORT_SHA=$(echo '${{ inputs.version }}' | cut -c1-8)" >> $GITHUB_ENV
      
      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: juno-${{ env.SHORT_SHA }}-linux-amd64
          path: ./juno-artifact

      - name: Clean environment and create benchmark directory on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            pkill -x juno || true
            rm -rf ~/juno-benchmark
            mkdir -p ~/juno-benchmark/scripts
            mkdir -p ~/juno-benchmark/db

      - name: Copy binary to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ./juno-artifact/juno-${{ env.SHORT_SHA }}-linux-amd64
          target: ~/juno-benchmark
          strip_components: 2

      - name: Rename binary
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            mv ~/juno-benchmark/juno-${{ env.SHORT_SHA }}-linux-amd64 ~/juno-benchmark/juno
            chmod +x ~/juno-benchmark/juno

      - name: Checkout scripts
        uses: actions/checkout@v4

      - name: Copy scripts to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: scripts/juno-setup.sh,scripts/juno-sync-monitor.sh
          target: ~/juno-benchmark/scripts/
          strip_components: 1

      - name: Execute setup and run monitoring
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          command_timeout: 120m
          envs: SNAPSHOT_URL
          script: |
            export SNAPSHOT_URL=${{ inputs.snapshot_url || 'https://juno-snapshots.nethermind.io/files/sepolia/latest' }}
            chmod +x ~/juno-benchmark/scripts/juno-setup.sh
            ~/juno-benchmark/scripts/juno-setup.sh

            chmod +x ~/juno-benchmark/scripts/juno-sync-monitor.sh
            ~/juno-benchmark/scripts/juno-sync-monitor.sh

            cat ~/juno-benchmark/sync_report.txt
