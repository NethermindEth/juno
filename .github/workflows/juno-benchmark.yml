name: Juno Benchmarking

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Juno version to benchmark'
        required: true
        default: 'latest'
      snapshot_url:
        description: 'Custom snapshot URL (optional)'
        required: false
  release:
    types: [prereleased]

jobs:
  juno-benchmark:
    name: EC2 Snapshot Download and Juno Launch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clean environment and create benchmark directory on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            pkill -x juno || true
            rm -rf ~/juno-benchmark
            mkdir -p ~/juno-benchmark/scripts

      - name: Copy benchmark script to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: scripts/juno-benchmark.sh
          target: ~/juno-benchmark/scripts/
          strip_components: 1

      - name: Execute remote benchmark script via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: JUNO_VERSION,SNAPSHOT_URL
          command_timeout: 60m
          script: |
            export JUNO_VERSION=${{ github.event.inputs.version || github.event.release.tag_name }}
            export SNAPSHOT_URL=${{ github.event.inputs.snapshot_url || 'https://juno-snapshots.nethermind.io/files/sepolia/latest' }}
            chmod +x ~/juno-benchmark/scripts/juno-benchmark.sh
            bash ~/juno-benchmark/scripts/juno-benchmark.sh "$JUNO_VERSION"

      - name: Verify Juno is running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sleep 10
            ps aux | grep juno | grep -v grep
            echo "Latest Juno log entries:"
            tail -n 30 ~/juno-benchmark/juno.log
