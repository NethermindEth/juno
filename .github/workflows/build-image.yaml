name: Build Docker Image

on:
  workflow_call:
    outputs:
      docker_image_tag:
        description: "The Docker image tag that was built"
        value: ${{ jobs.build.outputs.DOCKER_IMAGE_TAG }}

permissions:
  contents: read
  actions: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-image-build
  cancel-in-progress: true

env:
  DOCKER_REGISTRY: nethermind.jfrog.io
  REPO_DEV: nubia-oci-local-dev

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      DOCKER_IMAGE_TAG: ${{ steps.set_tag.outputs.DOCKER_IMAGE_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Define image tag
        id: set_tag
        run: |
          export DOCKER_IMAGE_TAG=$(git describe --tags)
          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v.3.11.1

      - name: Install JFrog CLI
        id: jfrog
        uses: jfrog/setup-jfrog-cli@ff5cb544114ffc152db9cea1cd3d5978d5074946 # v4.5.11
        env:
          JF_URL: https://${{ env.DOCKER_REGISTRY }}
        with:
          oidc-provider-name: github-nethermindeth

      - name: Login to Registry with OIDC
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ steps.jfrog.outputs.oidc-user }}
          password: ${{ steps.jfrog.outputs.oidc-token }}

      - name: Build & push Docker images
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.REPO_DEV }}/juno:${{ steps.set_tag.outputs.DOCKER_IMAGE_TAG  }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}
