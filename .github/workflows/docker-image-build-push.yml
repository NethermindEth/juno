name: 'Build and publish Docker image'

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Enter an image tag e.g v0.1.0'
        required: true
      repo_type:
        description: 'Choose repository type'
        type: choice
        required: false
        default: 'non-official'
        options:
        - official
        - non-official
      production_deployment:
        description: 'Choose to deploy to prod'
        type: choice
        required: false
        default: 'false'
        options:
          - 'true'
          - 'false'

jobs:
  build_and_push_docker_image_amd:
    if: github.repository_owner == 'NethermindEth'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: 'linux/amd64'
          push: true
          tags: nethermindeth/juno:${{ github.event.inputs.tag }}

  build_and_push_docker_image_arm:
    if: github.repository_owner == 'NethermindEth'
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
            
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ARM
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: 'linux/arm64'
          push: true
          tags: nethermindeth/juno:${{ github.event.inputs.tag }}-arm64
      
      - name: Cleanup self-hosted
        run: |
          docker system prune -af

  create_and_push_official_image:
    if: github.repository_owner == 'NethermindEth' && github.event.inputs.repo_type == 'official'
    needs: [build_and_push_docker_image_amd, build_and_push_docker_image_arm]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest using buildx
        run: |
            docker buildx imagetools create nethermindeth/juno:${{ github.event.inputs.tag }} \
                nethermindeth/juno:${{ github.event.inputs.tag }}-arm64 \
                --tag nethermind/juno:${{ github.event.inputs.tag }}

      - name: Clean up environment
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
  
  dev_repository_dispatch:
    permissions:
      id-token: write
      contents: write
    if: github.repository_owner == 'NethermindEth'
    needs: [build_and_push_docker_image_amd]
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch Dev
        env:
          EVENT_NAME: juno-dev
          IMAGE_TAG: ${{ github.event.inputs.tag }}
          GOERLI: apps/juno-dev/overlays/dev-goerli-1/config.yaml
          GOERLI2: apps/juno-dev/overlays/dev-goerli-2/config.yaml
          TESTNET: apps/juno-dev/overlays/dev-integration/config.yaml
          MAINNET: apps/juno-dev/overlays/dev-mainnet/config.yaml
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/NethermindEth/argo/dispatches \
          -d '{"event_type": "${{ env.EVENT_NAME }}", "client-payload":{"name": "${{ env.EVENT_NAME }}", "goerli_config": "${{ env.GOERLI }}", "goerli2_config": "${{ env.GOERLI2 }}", "testnet_config": "${{ env.TESTNET }}", "mainnet_config": "${{ env.MAINNET }}", "tag": "${{ env.IMAGE_TAG }}"}}'
  
  staging_repository_dispatch:
    permissions:
      id-token: write
      contents:
    if: github.repository_owner == 'NethermindEth' && github.event.inputs.repo_type == 'official'
    needs: [build_and_push_docker_image_amd]
    runs-on: ubuntu-latest
    steps:
      - name: Repository_Dispatch_Staging
        env:
          EVENT_NAME: juno-staging
          IMAGE_TAG: ${{ github.event.inputs.tag }}
          GOERLI: apps/juno-staging/overlays/staging-goerli-1/config.yaml
          GOERLI2: apps/juno-staging/overlays/staging-goerli-2/config.yaml
          TESTNET: apps/juno-staging/overlays/staging-integration/config.yaml
          MAINNET: apps/juno-staging/overlays/staging-mainnet/config.yaml
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/NethermindEth/argo/dispatches \
          -d '{"event_type": "${{ env.EVENT_NAME }}", "client-payload":{"name": "${{ env.EVENT_NAME }}", "goerli_config": "${{ env.GOERLI }}", "goerli2_config": "${{ env.GOERLI2 }}", "testnet_config": "${{ env.TESTNET }}", "mainnet_config": "${{ env.MAINNET }}", "tag": "${{ env.IMAGE_TAG }}"}}'
          
  prod_repository_dispatch_official_image:
    permissions:
      id-token: write
      contents: write
    if: github.repository_owner == 'NethermindEth' && github.event.inputs.repo_type == 'official' && github.event.inputs.production_deployment == 'true'
    needs: [create_and_push_official_image]
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        env: 
          EVENT_NAME: juno-prod
          IMAGE_TAG: ${{ github.event.inputs.tag }}
          GOERLI: apps/juno-prod/overlays/prod-goerli-1/config.yaml
          GOERLI2: apps/juno-prod/overlays/prod-goerli-2/config.yaml
          TESTNET: apps/juno-prod/overlays/prod-integration/config.yaml
          MAINNET: apps/juno-prod/overlays/prod-mainnet/config.yaml
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/NethermindEth/argo/dispatches \
          -d '{"event_type": "${{ env.EVENT_NAME }}", "client-payload":{"name": "${{ env.EVENT_NAME }}", "goerli_config": "${{ env.GOERLI }}", "goerli2_config": "${{ env.GOERLI2 }}", "testnet_config": "${{ env.TESTNET }}", "mainnet_config": "${{ env.MAINNET }}", "tag": "${{ env.IMAGE_TAG }}"}}'
          
