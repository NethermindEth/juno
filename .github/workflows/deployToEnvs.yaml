name: deploy to dev, staging and production

on:
    workflow_call:
        inputs:
            IMAGE_TAG: 
                required: true
                type: string
            EVENT_NAME: 
                    required: true
                    type: string
            GOERLI: 
                    required: true
                    type: string
            INTEGRATION: 
                    required: true
                    type: string
            MAINNET: 
                    required: true
                    type: string
    
jobs:
    reusable_trigger:
        runs-on: ubuntu-latest
        environment: 
          name: Development
        steps:
          - name: Triggering reusable workflow
            run: |
                echo "reusable workflow triggered"
    deploy_to_dev:
        permissions:
          id-token: write
          contents: write
        needs: [docker_build_and_publish]
        runs-on: ubuntu-latest
        environment: 
          name: Development
        steps:
          - name: Repository Dispatch Dev
            env:
              EVENT_NAME: juno-dev
              IMAGE_TAG: ${{ needs.docker_build_and_publish.outputs.IMAGE_TAG }}
              GOERLI: apps/juno-dev/overlays/dev-goerli-1/config.yaml
              INTEGRATION: apps/juno-dev/overlays/dev-integration/config.yaml
              MAINNET: apps/juno-dev/overlays/dev-mainnet/config.yaml
            run: |
              curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/NethermindEth/argo/dispatches \
              -d '{"event_type": "${{ env.EVENT_NAME }}", "client_payload":{"name": "${{ env.EVENT_NAME }}", "goerli_config": "${{ env.GOERLI }}", "integration_config": "${{ env.INTEGRATION }}", "mainnet_config": "${{ env.MAINNET }}", "tag": "${{ env.IMAGE_TAG }}"}}'
    

    deploy_to_staging:
        needs: [docker_build_and_publish, deploy_to_dev]
        runs-on: ubuntu-latest
        environment: 
          name: Staging
        steps:
          - name: Repository Dispatch Staging
            env:
              EVENT_NAME: juno-staging
              IMAGE_TAG: ${{ needs.docker_build_and_publish.outputs.IMAGE_TAG }}
              GOERLI: apps/juno-staging/overlays/staging-goerli-1/config.yaml
              INTEGRATION: apps/juno-staging/overlays/staging-integration/config.yaml
              MAINNET: apps/juno-staging/overlays/staging-mainnet/config.yaml
            run: |
                curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/NethermindEth/argo/dispatches \
                -d '{"event_type": "${{ env.EVENT_NAME }}", "client_payload":{"name": "${{ env.EVENT_NAME }}", "goerli_config": "${{ env.GOERLI }}", "integration_config": "${{ env.INTEGRATION }}", "mainnet_config": "${{ env.MAINNET }}", "tag": "${{ env.IMAGE_TAG }}"}}'

    deploy_to_prod:
        needs: [docker_build_and_publish, deploy_to_dev]
        runs-on: ubuntu-latest
        environment: 
          name: Production
        steps:
          - name: Repository Dispatch Production
            env:
              EVENT_NAME: juno-staging
              IMAGE_TAG: ${{ needs.docker_build_and_publish.outputs.IMAGE_TAG }}
              GOERLI: apps/juno-staging/overlays/staging-goerli-1/config.yaml
              INTEGRATION: apps/juno-staging/overlays/staging-integration/config.yaml
              MAINNET: apps/juno-staging/overlays/staging-mainnet/config.yaml
            run: |
                curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/NethermindEth/argo/dispatches \
                -d '{"event_type": "${{ env.EVENT_NAME }}", "client_payload":{"name": "${{ env.EVENT_NAME }}", "goerli_config": "${{ env.GOERLI }}", "integration_config": "${{ env.INTEGRATION }}", "mainnet_config": "${{ env.MAINNET }}", "tag": "${{ env.IMAGE_TAG }}"}}'

