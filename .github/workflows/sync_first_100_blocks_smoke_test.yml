name: Sync First 100 Blocks Smoke Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # Skip for PRs from forks as they don't have access to secrets
    if: github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork
    uses: ./.github/workflows/build-image.yaml
    secrets:
      ARTIFACTORY_NUBIA_USERNAME: ${{ secrets.ARTIFACTORY_NUBIA_USERNAME }}
      ARTIFACTORY_NUBIA_TOKEN_DEVELOPER: ${{ secrets.ARTIFACTORY_NUBIA_TOKEN_DEVELOPER }}

  run_smoke_tests:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: nethermind.jfrog.io
      REPO_DEV: nubia-oci-local-dev
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: "juno,juno-smoke-tests"

      - name: Login to registry
        run: |
          docker login ${{ env.DOCKER_REGISTRY }} -u ${{ secrets.ARTIFACTORY_NUBIA_USERNAME }} -p ${{ secrets.ARTIFACTORY_NUBIA_TOKEN_DEVELOPER }}

      - name: Pull docker image
        run: |
          docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.REPO_DEV }}/juno:${{ needs.build.outputs.docker_image_tag }}
          docker tag ${{ env.DOCKER_REGISTRY }}/${{ env.REPO_DEV }}/juno:${{ needs.build.outputs.docker_image_tag }} nethermindeth/juno

      - name: Checkout Juno Smoke Tests
        uses: actions/checkout@v4
        with:
          repository: NethermindEth/juno-smoke-tests
          token: ${{ steps.generate-token.outputs.token }}

      - name: Run smoke tests
        run: |
          cd smoke-tests/node_tests
          go test -v -run TestMonitorNodeSync -args -targetBlock=$TARGET_BLOCK -timeout=$TIMEOUT
        env:
          TARGET_BLOCK: 100
          TIMEOUT: 10m
          JUNO_PARAMETERS: "--network mainnet --eth-node ${{ secrets.ETH_NODE_MAINNET }}"
