name: Dispatch Render Juno Staging

on:
    workflow_dispatch:
      inputs:
        dev-tag:
          description: 'Dev most recent image tag'
          required: true
        tag:
          description: 'Enter an image tag e.g v0.1.0'
          required: true

env: 
    EVENT_NAME: juno-staging
    GOERLI: apps/juno-staging/overlays/staging-goerli-1/config.yaml
    GOERLI2: apps/juno-staging/overlays/staging-goerli-2/config.yaml
    TESTNET: apps/juno-staging/overlays/staging-integration/config.yaml
    MAINNET: apps/juno-staging/overlays/staging-mainnet/config.yaml

permissions:
    id-token: write
    contents: write

jobs:
    deploy:
        environment: staging
        runs-on: ubuntu-latest

        steps:
        - name: Checkout
          uses: actions/checkout@v3
        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Sync From NethermindETh to Nethermind
          env:
            DEV_TAG: ${{ github.event.inputs.dev-tag }}
            IMAGE_TAG: ${{ github.event.inputs.tag }}
          run: |
            docker pull nethermindeth/juno:${{ env.DEV_TAG }}
            docker tag nethermindeth/juno:${{ env.DEV_TAG }} nethermind/juno:${{ env.IMAGE_TAG }}
            docker push nethermind/juno:${{ env.IMAGE_TAG }}
          
        
        - name: Repository Dispatch
          env:
            IMAGE_TAG: ${{ github.event.inputs.tag }}
          run: |
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/NethermindEth/argo/dispatches \
            -d '{"event_type": "${{ env.EVENT_NAME }}", "client-payload":{"name": "${{ env.EVENT_NAME }}", "goerli_config": "${{ env.GOERLI }}", "goerli2_config": "${{ env.GOERLI2 }}", "testnet_config": "${{ env.TESTNET }}", "mainnet_config": "${{ env.MAINNET }}", "tag": "${{ env.IMAGE_TAG }}"}}'
            
