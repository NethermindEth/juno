name: Build Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [
          {
            'go' : 'amd64',
            'cc' : 'x86_64'
          },
          {
            'go': 'arm64',
            'cc': 'aarch64'
          }
        ]
        os: [
          {
            'go' : 'linux',
            'cc' : 'linux'
          },
          {
            'go': 'darwin',
            'cc': 'macos'
          },
          {
            'go': 'windows',
            'cc': 'windows-gnu'
          }
        ]
        go-version: ['1.20.3']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install UPX
        run: sudo apt-get install -y upx-ucl
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install C cross compiler
        uses: goto-bus-stop/setup-zig@v2

      - name: Build Juno
        run: |
          GOOS=${{ matrix.os['go'] }} GOARCH=${{ matrix.arch['go'] }} CGO_ENABLED=1 CC="zig cc -target ${{ matrix.arch['cc'] }}-${{ matrix.os['cc'] }}"  make juno
          if [[ ${{ matrix.os }} == "linux" ]]; then
              upx build/juno
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: juno-${{ matrix.os }}-${{ matrix.arch }}
          path: build/juno